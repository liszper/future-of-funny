["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@motionone/dom/dist/state/gestures/press.cjs.js"],"~:js","shadow$provide.module$node_modules$$motionone$dom$dist$state$gestures$press_cjs=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});var events=require(\"module$node_modules$$motionone$dom$dist$state$utils$events_cjs\");exports.press={isActive:options=>!!options.press,subscribe:(element,{enable,disable})=>{const onPointerUp=event=>{disable();events.dispatchPointerEvent(element,\"pressend\",event);window.removeEventListener(\"pointerup\",onPointerUp)},onPointerDown=\nevent=>{enable();events.dispatchPointerEvent(element,\"pressstart\",event);window.addEventListener(\"pointerup\",onPointerUp)};element.addEventListener(\"pointerdown\",onPointerDown);return()=>{element.removeEventListener(\"pointerdown\",onPointerDown);window.removeEventListener(\"pointerup\",onPointerUp)}}}}","~:source","shadow$provide[\"module$node_modules$$motionone$dom$dist$state$gestures$press_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar events = require('../utils/events.cjs.js');\n\nconst press = {\n    isActive: (options) => Boolean(options.press),\n    subscribe: (element, { enable, disable }) => {\n        const onPointerUp = (event) => {\n            disable();\n            events.dispatchPointerEvent(element, \"pressend\", event);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n        const onPointerDown = (event) => {\n            enable();\n            events.dispatchPointerEvent(element, \"pressstart\", event);\n            window.addEventListener(\"pointerup\", onPointerUp);\n        };\n        element.addEventListener(\"pointerdown\", onPointerDown);\n        return () => {\n            element.removeEventListener(\"pointerdown\", onPointerDown);\n            window.removeEventListener(\"pointerup\", onPointerUp);\n        };\n    },\n};\n\nexports.press = press;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$motionone$dom$dist$state$utils$events_cjs","~$shadow.js"]],"~:properties",["^5",["isActive","__esModule","press","value","subscribe"]],"~:compiled-at",1681642524802,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$motionone$dom$dist$state$gestures$press_cjs.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,OAASN,OAAA,CAAQ,gEAAR,CAuBbE,QAAQK,CAAAA,KAAR,CArBcA,CACVC,SAAWC,OAADD,EAAa,CAAA,CAAQC,OAAQF,CAAAA,KAD7BA,CAEVG,UAAW,CAACC,OAAD,CAAU,CAAEC,MAAF,CAAUC,OAAV,CAAV,CAAAH,EAAkC,CACzC,MAAMI,YAAeC,KAADD,EAAW,CAC3BD,OAAA,EACAP,OAAOU,CAAAA,oBAAP,CAA4BL,OAA5B,CAAqC,UAArC,CAAiDI,KAAjD,CACAE,OAAOC,CAAAA,mBAAP,CAA2B,WAA3B,CAAwCJ,WAAxC,CAH2B,CAA/B,CAKMK;AAAiBJ,KAADI,EAAW,CAC7BP,MAAA,EACAN,OAAOU,CAAAA,oBAAP,CAA4BL,OAA5B,CAAqC,YAArC,CAAmDI,KAAnD,CACAE,OAAOG,CAAAA,gBAAP,CAAwB,WAAxB,CAAqCN,WAArC,CAH6B,CAKjCH,QAAQS,CAAAA,gBAAR,CAAyB,aAAzB,CAAwCD,aAAxC,CACA,OAAO,EAAA,EAAM,CACTR,OAAQO,CAAAA,mBAAR,CAA4B,aAA5B,CAA2CC,aAA3C,CACAF,OAAOC,CAAAA,mBAAP,CAA2B,WAA3B,CAAwCJ,WAAxC,CAFS,CAZ4B,CAFnCP,CAP+G;\",\n\"sources\":[\"node_modules/@motionone/dom/dist/state/gestures/press.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$motionone$dom$dist$state$gestures$press_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar events = require('../utils/events.cjs.js');\\n\\nconst press = {\\n    isActive: (options) => Boolean(options.press),\\n    subscribe: (element, { enable, disable }) => {\\n        const onPointerUp = (event) => {\\n            disable();\\n            events.dispatchPointerEvent(element, \\\"pressend\\\", event);\\n            window.removeEventListener(\\\"pointerup\\\", onPointerUp);\\n        };\\n        const onPointerDown = (event) => {\\n            enable();\\n            events.dispatchPointerEvent(element, \\\"pressstart\\\", event);\\n            window.addEventListener(\\\"pointerup\\\", onPointerUp);\\n        };\\n        element.addEventListener(\\\"pointerdown\\\", onPointerDown);\\n        return () => {\\n            element.removeEventListener(\\\"pointerdown\\\", onPointerDown);\\n            window.removeEventListener(\\\"pointerup\\\", onPointerUp);\\n        };\\n    },\\n};\\n\\nexports.press = press;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"events\",\"press\",\"isActive\",\"options\",\"subscribe\",\"element\",\"enable\",\"disable\",\"onPointerUp\",\"event\",\"dispatchPointerEvent\",\"window\",\"removeEventListener\",\"onPointerDown\",\"addEventListener\"]\n}\n"]