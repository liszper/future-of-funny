shadow$provide.module$node_modules$$chakra_ui$react_use_merge_refs$dist$index=function(global,require,module,exports){function assignRef(ref,value){if(null!=ref)if("function"===typeof ref)ref(value);else try{ref.current=value}catch(error){throw Error(`Cannot assign value '${value}' to ref '${ref}'`);}}function mergeRefs(...refs){return node=>{refs.forEach(ref=>{assignRef(ref,node)})}}function useMergeRefs(...refs){return(0,import_react.useMemo)(()=>mergeRefs(...refs),refs)}var __defProp=Object.defineProperty,
__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],
enumerable:!0})})(global,{assignRef:()=>assignRef,mergeRefs:()=>mergeRefs,useMergeRefs:()=>useMergeRefs});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_react=require("module$node_modules$react$index")}
//# sourceMappingURL=module$node_modules$$chakra_ui$react_use_merge_refs$dist$index.js.map
