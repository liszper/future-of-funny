shadow$provide.module$node_modules$$chakra_ui$theme_utils$dist$index=function(global,require,module,exports){function isFunction(value){return"function"===typeof value}function pipe(...fns){return v=>fns.reduce((a,b)=>b(a),v)}function mergeThemeOverride(...overrides){return(0,import_lodash.default)({},...overrides,mergeThemeCustomizer)}function mergeThemeCustomizer(source,override,key,object){if((isFunction(source)||isFunction(override))&&Object.prototype.hasOwnProperty.call(object,key))return(...args)=>
{const sourceValue=isFunction(source)?source(...args):source;args=isFunction(override)?override(...args):override;return(0,import_lodash.default)({},sourceValue,args,mergeThemeCustomizer)}}function withDefaultColorScheme({colorScheme,components}){return theme2=>{let names=Object.keys(theme2.components||{});Array.isArray(components)?names=components:(0,import_shared_utils.isObject)(components)&&(names=Object.keys(components));return mergeThemeOverride(theme2,{components:Object.fromEntries(names.map(componentName=>
[componentName,{defaultProps:{colorScheme}}]))})}}function withDefaultSize({size,components}){return theme2=>{let names=Object.keys(theme2.components||{});Array.isArray(components)?names=components:(0,import_shared_utils2.isObject)(components)&&(names=Object.keys(components));return mergeThemeOverride(theme2,{components:Object.fromEntries(names.map(componentName=>[componentName,{defaultProps:{size}}]))})}}function withDefaultVariant({variant,components}){return theme2=>{let names=Object.keys(theme2.components||
{});Array.isArray(components)?names=components:(0,import_shared_utils3.isObject)(components)&&(names=Object.keys(components));return mergeThemeOverride(theme2,{components:Object.fromEntries(names.map(componentName=>[componentName,{defaultProps:{variant}}]))})}}function pipe2(...fns){return v=>fns.reduce((a,b)=>b(a),v)}function withDefaultProps({defaultProps:{colorScheme,variant,size},components}){const identity=t=>t,fns=[colorScheme?withDefaultColorScheme({colorScheme,components}):identity,size?withDefaultSize({size,
components}):identity,variant?withDefaultVariant({variant,components}):identity];return theme2=>mergeThemeOverride(pipe2(...fns)(theme2))}var __create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,
key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{extendBaseTheme:()=>extendBaseTheme,extendTheme:()=>extendTheme,mergeThemeOverride:()=>mergeThemeOverride,withDefaultColorScheme:()=>withDefaultColorScheme,withDefaultProps:()=>withDefaultProps,withDefaultSize:()=>withDefaultSize,withDefaultVariant:()=>withDefaultVariant});
module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_theme=require("module$node_modules$$chakra_ui$theme$dist$index"),import_lodash=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(require("module$node_modules$lodash_DOT_mergewith$index"));module=theme2=>function(...extensions){let overrides=[...extensions];extensions=
extensions[extensions.length-1];(0,import_theme.isChakraTheme)(extensions)&&1<overrides.length?overrides=overrides.slice(0,overrides.length-1):extensions=theme2;return pipe(...overrides.map(extension=>prevTheme=>isFunction(extension)?extension(prevTheme):mergeThemeOverride(prevTheme,extension)))(extensions)};var extendTheme=module(import_theme.theme),extendBaseTheme=module(import_theme.baseTheme),import_shared_utils=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_shared_utils2=
require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_shared_utils3=require("module$node_modules$$chakra_ui$shared_utils$dist$index")}
//# sourceMappingURL=module$node_modules$$chakra_ui$theme_utils$dist$index.js.map
