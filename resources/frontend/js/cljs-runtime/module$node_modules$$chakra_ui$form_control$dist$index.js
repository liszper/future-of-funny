shadow$provide.module$node_modules$$chakra_ui$form_control$dist$index=function(global,require,module,exports){function useFormControlProvider(props){const {id:idProp,isRequired,isInvalid,isDisabled,isReadOnly,...htmlProps}=props;props=(0,import_react.useId)();const id=idProp||`field-${props}`,labelId=`${id}-label`,feedbackId=`${id}-feedback`,helpTextId=`${id}-helptext`,[hasFeedbackText,setHasFeedbackText]=(0,import_react.useState)(!1),[hasHelpText,setHasHelpText]=(0,import_react.useState)(!1),[isFocused,
setFocus]=(0,import_react.useState)(!1);props=(0,import_react.useCallback)((props2={},forwardedRef=null)=>({id:helpTextId,...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(forwardedRef,node=>{node&&setHasHelpText(!0)})}),[helpTextId]);const getLabelProps=(0,import_react.useCallback)((props2={},forwardedRef=null)=>{var _a,_b;return{...props2,ref:forwardedRef,"data-focus":(0,import_shared_utils.dataAttr)(isFocused),"data-disabled":(0,import_shared_utils.dataAttr)(isDisabled),"data-invalid":(0,import_shared_utils.dataAttr)(isInvalid),
"data-readonly":(0,import_shared_utils.dataAttr)(isReadOnly),id:null!=(_a=props2.id)?_a:labelId,htmlFor:null!=(_b=props2.htmlFor)?_b:id}},[id,isDisabled,isFocused,isInvalid,isReadOnly,labelId]),getErrorMessageProps=(0,import_react.useCallback)((props2={},forwardedRef=null)=>({id:feedbackId,...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(forwardedRef,node=>{node&&setHasFeedbackText(!0)}),"aria-live":"polite"}),[feedbackId]),getRootProps=(0,import_react.useCallback)((props2={},forwardedRef=
null)=>({...props2,...htmlProps,ref:forwardedRef,role:"group"}),[htmlProps]),getRequiredIndicatorProps=(0,import_react.useCallback)((props2={},forwardedRef=null)=>({...props2,ref:forwardedRef,role:"presentation","aria-hidden":!0,children:props2.children||"*"}),[]);return{isRequired:!!isRequired,isInvalid:!!isInvalid,isReadOnly:!!isReadOnly,isDisabled:!!isDisabled,isFocused:!!isFocused,onFocus:()=>setFocus(!0),onBlur:()=>setFocus(!1),hasFeedbackText,setHasFeedbackText,hasHelpText,setHasHelpText,id,
labelId,feedbackId,helpTextId,htmlProps,getHelpTextProps:props,getErrorMessageProps,getRootProps,getLabelProps,getRequiredIndicatorProps}}function useFormControl(props){const {isDisabled,isInvalid,isReadOnly,isRequired,...rest}=useFormControlProps(props);return{...rest,disabled:isDisabled,readOnly:isReadOnly,required:isRequired,"aria-invalid":(0,import_shared_utils2.ariaAttr)(isInvalid),"aria-required":(0,import_shared_utils2.ariaAttr)(isRequired),"aria-readonly":(0,import_shared_utils2.ariaAttr)(isReadOnly)}}
function useFormControlProps(props){var _a,_b,_c;const field=useFormControlContext(),{id,disabled,readOnly,required,isRequired,isInvalid,isReadOnly,isDisabled,onFocus,onBlur,...rest}=props;props=props["aria-describedby"]?[props["aria-describedby"]]:[];(null==field?0:field.hasFeedbackText)&&(null==field?0:field.isInvalid)&&props.push(field.feedbackId);(null==field?0:field.hasHelpText)&&props.push(field.helpTextId);return{...rest,"aria-describedby":props.join(" ")||void 0,id:null!=id?id:null==field?
void 0:field.id,isDisabled:null!=(_a=null!=disabled?disabled:isDisabled)?_a:null==field?void 0:field.isDisabled,isReadOnly:null!=(_b=null!=readOnly?readOnly:isReadOnly)?_b:null==field?void 0:field.isReadOnly,isRequired:null!=(_c=null!=required?required:isRequired)?_c:null==field?void 0:field.isRequired,isInvalid:null!=isInvalid?isInvalid:null==field?void 0:field.isInvalid,onFocus:(0,import_shared_utils2.callAllHandlers)(null==field?void 0:field.onFocus,onFocus),onBlur:(0,import_shared_utils2.callAllHandlers)(null==
field?void 0:field.onBlur,onBlur)}}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global=
{};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{FormControl:()=>FormControl,FormErrorIcon:()=>FormErrorIcon,FormErrorMessage:()=>FormErrorMessage,FormHelperText:()=>FormHelperText,FormLabel:()=>FormLabel,RequiredIndicator:()=>RequiredIndicator,useFormControl:()=>useFormControl,useFormControlContext:()=>useFormControlContext,useFormControlProps:()=>useFormControlProps,useFormControlStyles:()=>useFormControlStyles,useFormErrorStyles:()=>useFormErrorStyles});
module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);module=require("module$node_modules$$chakra_ui$react_context$dist$index");var import_react_use_merge_refs=require("module$node_modules$$chakra_ui$react_use_merge_refs$dist$index"),import_system=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_react=require("module$node_modules$react$index"),import_jsx_runtime=require("module$node_modules$react$jsx_runtime"),
[FormControlStylesProvider,useFormControlStyles]=(0,module.createContext)({name:"FormControlStylesContext",errorMessage:"useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"\x3cFormControl /\x3e\" "}),[FormControlProvider,useFormControlContext]=(0,module.createContext)({strict:!1,name:"FormControlContext"}),FormControl=(0,import_system.forwardRef)(function(props,ref){const styles=(0,import_system.useMultiStyleConfig)("Form",props),ownProps=(0,import_system.omitThemingProps)(props),
{getRootProps,htmlProps:_,...context}=useFormControlProvider(ownProps);props=(0,import_shared_utils.cx)("chakra-form-control",props.className);return(0,import_jsx_runtime.jsx)(FormControlProvider,{value:context,children:(0,import_jsx_runtime.jsx)(FormControlStylesProvider,{value:styles,children:(0,import_jsx_runtime.jsx)(import_system.chakra.div,{...getRootProps({},ref),className:props,__css:styles.container})})})});FormControl.displayName="FormControl";var FormHelperText=(0,import_system.forwardRef)(function(props,
ref){const field=useFormControlContext(),styles=useFormControlStyles(),className=(0,import_shared_utils.cx)("chakra-form__helper-text",props.className);return(0,import_jsx_runtime.jsx)(import_system.chakra.div,{...(null==field?void 0:field.getHelpTextProps(props,ref)),__css:styles.helperText,className})});FormHelperText.displayName="FormHelperText";var import_shared_utils2=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_icon=require("module$node_modules$$chakra_ui$icon$dist$index");
module=require("module$node_modules$$chakra_ui$react_context$dist$index");var import_system2=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils3=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_jsx_runtime2=require("module$node_modules$react$jsx_runtime"),[FormErrorStylesProvider,useFormErrorStyles]=(0,module.createContext)({name:"FormErrorStylesContext",errorMessage:"useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"\x3cFormError /\x3e\" "}),
FormErrorMessage=(0,import_system2.forwardRef)((props,ref)=>{const styles=(0,import_system2.useMultiStyleConfig)("FormError",props),ownProps=(0,import_system2.omitThemingProps)(props),field=useFormControlContext();return null!=field&&field.isInvalid?(0,import_jsx_runtime2.jsx)(FormErrorStylesProvider,{value:styles,children:(0,import_jsx_runtime2.jsx)(import_system2.chakra.div,{...(null==field?void 0:field.getErrorMessageProps(ownProps,ref)),className:(0,import_shared_utils3.cx)("chakra-form__error-message",
props.className),__css:{display:"flex",alignItems:"center",...styles.text}})}):null});FormErrorMessage.displayName="FormErrorMessage";var FormErrorIcon=(0,import_system2.forwardRef)((props,ref)=>{const styles=useFormErrorStyles();var field=useFormControlContext();if(null==field||!field.isInvalid)return null;field=(0,import_shared_utils3.cx)("chakra-form__error-icon",props.className);return(0,import_jsx_runtime2.jsx)(import_icon.Icon,{ref,"aria-hidden":!0,...props,__css:styles.icon,className:field,
children:(0,import_jsx_runtime2.jsx)("path",{fill:"currentColor",d:"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"})})});FormErrorIcon.displayName="FormErrorIcon";var import_system3=require("module$node_modules$$chakra_ui$system$dist$index"),
import_shared_utils4=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_jsx_runtime3=require("module$node_modules$react$jsx_runtime"),FormLabel=(0,import_system3.forwardRef)(function(passedProps,ref){var _a;const styles=(0,import_system3.useStyleConfig)("FormLabel",passedProps);passedProps=(0,import_system3.omitThemingProps)(passedProps);const {className,children,requiredIndicator=(0,import_jsx_runtime3.jsx)(RequiredIndicator,{}),optionalIndicator=null,...rest}=passedProps,field=
useFormControlContext(),ownProps=null!=(_a=null==field?void 0:field.getLabelProps(rest,ref))?_a:{ref,...rest};return(0,import_jsx_runtime3.jsxs)(import_system3.chakra.label,{...ownProps,className:(0,import_shared_utils4.cx)("chakra-form__label",passedProps.className),__css:{display:"block",textAlign:"start",...styles},children:[children,(null==field?0:field.isRequired)?requiredIndicator:optionalIndicator]})});FormLabel.displayName="FormLabel";var RequiredIndicator=(0,import_system3.forwardRef)(function(props,
ref){const field=useFormControlContext(),styles=useFormControlStyles();if(null==field||!field.isRequired)return null;const className=(0,import_shared_utils4.cx)("chakra-form__required-indicator",props.className);return(0,import_jsx_runtime3.jsx)(import_system3.chakra.span,{...(null==field?void 0:field.getRequiredIndicatorProps(props,ref)),__css:styles.requiredIndicator,className})});RequiredIndicator.displayName="RequiredIndicator"}
//# sourceMappingURL=module$node_modules$$chakra_ui$form_control$dist$index.js.map
