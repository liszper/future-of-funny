["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.cjs.js"],"~:js","shadow$provide.module$node_modules$$motionone$dom$dist$gestures$scroll$on_scroll_handler_cjs=function(global,require,module,exports){function measure(container,target=container,info){info.x.targetOffset=0;info.y.targetOffset=0;if(target!==container){let node=target;for(;node&&node!=container;)info.x.targetOffset+=node.offsetLeft,info.y.targetOffset+=node.offsetTop,node=node.offsetParent}info.x.targetLength=target===container?target.scrollWidth:target.clientWidth;info.y.targetLength=target===container?\ntarget.scrollHeight:target.clientHeight;info.x.containerLength=container.clientWidth;info.y.containerLength=container.clientHeight}function scrubAnimation(controls,axisInfo){controls.pause();controls.forEachNative((animation,{easing})=>{var _a,_b;if(animation.updateDuration)easing||(animation.easing=utils.noopReturn),animation.updateDuration(1);else{const timingOptions={duration:1E3};easing||(timingOptions.easing=\"linear\");null===(_b=null===(_a=animation.effect)||void 0===_a?void 0:_a.updateTiming)||\nvoid 0===_b?void 0:_b.call(_a,timingOptions)}});return()=>{controls.currentTime=axisInfo.progress}}Object.defineProperty(exports,\"__esModule\",{value:!0});var utils=require(\"module$node_modules$$motionone$utils$dist$index_cjs\"),info$jscomp$0=require(\"module$node_modules$$motionone$dom$dist$gestures$scroll$info_cjs\"),index=require(\"module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$index_cjs\");exports.createOnScrollHandler=function(element,onScroll,info$1,options={}){const axis=options.axis||\n\"y\";return{measure:()=>measure(element,options.target,info$1),update:time=>{info$jscomp$0.updateScrollInfo(element,info$1,time);(options.offset||options.target)&&index.resolveOffsets(element,info$1,options)},notify:\"function\"===typeof onScroll?()=>onScroll(info$1):scrubAnimation(onScroll,info$1[axis])}}}","~:source","shadow$provide[\"module$node_modules$$motionone$dom$dist$gestures$scroll$on_scroll_handler_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\nvar info = require('./info.cjs.js');\nvar index = require('./offsets/index.cjs.js');\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node != container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info$1, options = {}) {\n    const axis = options.axis || \"y\";\n    return {\n        measure: () => measure(element, options.target, info$1),\n        update: (time) => {\n            info.updateScrollInfo(element, info$1, time);\n            if (options.offset || options.target) {\n                index.resolveOffsets(element, info$1, options);\n            }\n        },\n        notify: typeof onScroll === \"function\"\n            ? () => onScroll(info$1)\n            : scrubAnimation(onScroll, info$1[axis]),\n    };\n}\nfunction scrubAnimation(controls, axisInfo) {\n    controls.pause();\n    controls.forEachNative((animation, { easing }) => {\n        var _a, _b;\n        if (animation.updateDuration) {\n            if (!easing)\n                animation.easing = utils.noopReturn;\n            animation.updateDuration(1);\n        }\n        else {\n            const timingOptions = { duration: 1000 };\n            if (!easing)\n                timingOptions.easing = \"linear\";\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n        }\n    });\n    return () => {\n        controls.currentTime = axisInfo.progress;\n    };\n}\n\nexports.createOnScrollHandler = createOnScrollHandler;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$motionone$utils$dist$index_cjs","~$module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$index_cjs","~$module$node_modules$$motionone$dom$dist$gestures$scroll$info_cjs"]],"~:properties",["^5",["easing","currentTime","measure","__esModule","targetOffset","update","value","duration","targetLength","createOnScrollHandler","notify","containerLength"]],"~:compiled-at",1681642524801,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$motionone$dom$dist$gestures$scroll$on_scroll_handler_cjs.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$motionone$dom$dist$gestures$scroll$on_scroll_handler_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar utils = require('@motionone/utils');\\nvar info = require('./info.cjs.js');\\nvar index = require('./offsets/index.cjs.js');\\n\\nfunction measure(container, target = container, info) {\\n    /**\\n     * Find inset of target within scrollable container\\n     */\\n    info.x.targetOffset = 0;\\n    info.y.targetOffset = 0;\\n    if (target !== container) {\\n        let node = target;\\n        while (node && node != container) {\\n            info.x.targetOffset += node.offsetLeft;\\n            info.y.targetOffset += node.offsetTop;\\n            node = node.offsetParent;\\n        }\\n    }\\n    info.x.targetLength =\\n        target === container ? target.scrollWidth : target.clientWidth;\\n    info.y.targetLength =\\n        target === container ? target.scrollHeight : target.clientHeight;\\n    info.x.containerLength = container.clientWidth;\\n    info.y.containerLength = container.clientHeight;\\n}\\nfunction createOnScrollHandler(element, onScroll, info$1, options = {}) {\\n    const axis = options.axis || \\\"y\\\";\\n    return {\\n        measure: () => measure(element, options.target, info$1),\\n        update: (time) => {\\n            info.updateScrollInfo(element, info$1, time);\\n            if (options.offset || options.target) {\\n                index.resolveOffsets(element, info$1, options);\\n            }\\n        },\\n        notify: typeof onScroll === \\\"function\\\"\\n            ? () => onScroll(info$1)\\n            : scrubAnimation(onScroll, info$1[axis]),\\n    };\\n}\\nfunction scrubAnimation(controls, axisInfo) {\\n    controls.pause();\\n    controls.forEachNative((animation, { easing }) => {\\n        var _a, _b;\\n        if (animation.updateDuration) {\\n            if (!easing)\\n                animation.easing = utils.noopReturn;\\n            animation.updateDuration(1);\\n        }\\n        else {\\n            const timingOptions = { duration: 1000 };\\n            if (!easing)\\n                timingOptions.easing = \\\"linear\\\";\\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\\n        }\\n    });\\n    return () => {\\n        controls.currentTime = axisInfo.progress;\\n    };\\n}\\n\\nexports.createOnScrollHandler = createOnScrollHandler;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"measure\",\"container\",\"target\",\"info\",\"x\",\"targetOffset\",\"y\",\"node\",\"offsetLeft\",\"offsetTop\",\"offsetParent\",\"targetLength\",\"scrollWidth\",\"clientWidth\",\"scrollHeight\",\"clientHeight\",\"containerLength\",\"scrubAnimation\",\"controls\",\"axisInfo\",\"pause\",\"forEachNative\",\"animation\",\"easing\",\"_a\",\"_b\",\"updateDuration\",\"utils\",\"noopReturn\",\"timingOptions\",\"duration\",\"effect\",\"updateTiming\",\"call\",\"currentTime\",\"progress\",\"Object\",\"defineProperty\",\"value\",\"index\",\"createOnScrollHandler\",\"element\",\"onScroll\",\"info$1\",\"options\",\"axis\",\"update\",\"time\",\"updateScrollInfo\",\"offset\",\"resolveOffsets\",\"notify\"]\n}\n"]