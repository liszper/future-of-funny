shadow$provide.module$node_modules$focus_lock$dist$es5$focusMerge=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.getFocusMerge=void 0;var solver_1=require("module$node_modules$focus_lock$dist$es5$solver"),DOMutils_1=require("module$node_modules$focus_lock$dist$es5$utils$DOMutils"),all_affected_1=require("module$node_modules$focus_lock$dist$es5$utils$all_affected"),auto_focus_1=require("module$node_modules$focus_lock$dist$es5$utils$auto_focus"),
getActiveElement_1=require("module$node_modules$focus_lock$dist$es5$utils$getActiveElement"),is_1=require("module$node_modules$focus_lock$dist$es5$utils$is"),parenting_1=require("module$node_modules$focus_lock$dist$es5$utils$parenting"),reorderNodes=function(srcNodes,dstNodes){var remap=new Map;dstNodes.forEach(function(entity){return remap.set(entity.node,entity)});return srcNodes.map(function(node){return remap.get(node)}).filter(is_1.isDefined)};exports.getFocusMerge=function(topNode,lastNode){var activeElement=
document&&(0,getActiveElement_1.getActiveElement)(),entries=(0,all_affected_1.getAllAffectedNodes)(topNode).filter(is_1.isNotAGuard),commonParent=(0,parenting_1.getTopCommonParent)(activeElement||topNode,topNode,entries);topNode=new Map;var anyFocusable=(0,DOMutils_1.getAllTabbableNodes)(entries,topNode),innerElements=(0,DOMutils_1.getTabbableNodes)(entries,topNode).filter(function(_a){return(0,is_1.isNotAGuard)(_a.node)});if(!innerElements[0]&&(innerElements=anyFocusable,!innerElements[0]))return;
commonParent=(0,DOMutils_1.getAllTabbableNodes)([commonParent],topNode).map(function(_a){return _a.node});innerElements=reorderNodes(commonParent,innerElements);var innerNodes=innerElements.map(function(_a){return _a.node});lastNode=(0,solver_1.newFocus)(innerNodes,commonParent,activeElement,lastNode);if(lastNode===solver_1.NEW_FOCUS){if(entries=(0,auto_focus_1.pickAutofocus)(anyFocusable,innerNodes,(0,parenting_1.allParentAutofocusables)(entries,topNode)))return{node:entries};console.warn("focus-lock: cannot find any node to move focus into")}else return void 0===
lastNode?lastNode:innerElements[lastNode]}}
//# sourceMappingURL=module$node_modules$focus_lock$dist$es5$focusMerge.js.map
