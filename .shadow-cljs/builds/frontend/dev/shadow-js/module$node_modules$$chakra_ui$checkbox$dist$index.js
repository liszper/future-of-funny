["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@chakra-ui/checkbox/dist/index.js"],"~:js","shadow$provide.module$node_modules$$chakra_ui$checkbox$dist$index=function(global,require,module,exports){function isInputEvent(value){return value&&(0,import_shared_utils.isObject)(value)&&(0,import_shared_utils.isObject)(value.target)}function useCheckboxGroup(props={}){const {defaultValue,value:valueProp,onChange,isDisabled,isNative}=props;props=(0,import_react_use_callback_ref.useCallbackRef)(onChange);const [value,setValue]=(0,import_react_use_controllable_state.useControllableState)({value:valueProp,\ndefaultValue:defaultValue||[],onChange:props}),handleChange=(0,import_react.useCallback)(eventOrValue=>{if(value){var isChecked=isInputEvent(eventOrValue)?eventOrValue.target.checked:!value.includes(eventOrValue),selectedValue=isInputEvent(eventOrValue)?eventOrValue.target.value:eventOrValue;eventOrValue=isChecked?[...value,selectedValue]:value.filter(v=>String(v)!==String(selectedValue));setValue(eventOrValue)}},[setValue,value]);props=(0,import_react.useCallback)((props2={})=>({...props2,[isNative?\n\"checked\":\"isChecked\"]:value.some(val=>String(props2.value)===String(val)),onChange:handleChange}),[handleChange,isNative,value]);return{value,isDisabled,onChange:handleChange,setValue,getCheckboxProps:props}}function CheckboxGroup(props){const {colorScheme,size,variant,children,isDisabled}=props,{value,onChange}=useCheckboxGroup(props);props=(0,import_react2.useMemo)(()=>({size,onChange,colorScheme,value,variant,isDisabled}),[size,onChange,colorScheme,value,variant,isDisabled]);return(0,import_jsx_runtime.jsx)(CheckboxGroupProvider,\n{value:props,children})}function CheckIcon(props){return(0,import_jsx_runtime2.jsx)(import_system.chakra.svg,{width:\"1.2em\",viewBox:\"0 0 12 10\",style:{fill:\"none\",strokeWidth:2,stroke:\"currentColor\",strokeDasharray:16},...props,children:(0,import_jsx_runtime2.jsx)(\"polyline\",{points:\"1.5 6 4.5 9 10.5 1\"})})}function IndeterminateIcon(props){return(0,import_jsx_runtime2.jsx)(import_system.chakra.svg,{width:\"1.2em\",viewBox:\"0 0 24 24\",style:{stroke:\"currentColor\",strokeWidth:4},...props,children:(0,import_jsx_runtime2.jsx)(\"line\",\n{x1:\"21\",x2:\"3\",y1:\"12\",y2:\"12\"})})}function CheckboxIcon(props){const {isIndeterminate,isChecked,...rest}=props;props=isIndeterminate?IndeterminateIcon:CheckIcon;return isChecked||isIndeterminate?(0,import_jsx_runtime2.jsx)(import_system.chakra.div,{style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",height:\"100%\"},children:(0,import_jsx_runtime2.jsx)(props,{...rest})}):null}function omit(object,keysToOmit=[]){object=Object.assign({},object);for(const key of keysToOmit)key in object&&\ndelete object[key];return object}function useCheckbox(props={}){var formControlProps=(0,import_form_control.useFormControlProps)(props);const {isDisabled,isReadOnly,isRequired,isInvalid,id,onBlur,onFocus,\"aria-describedby\":ariaDescribedBy}=formControlProps,{defaultChecked,isChecked:checkedProp,isFocusable,onChange,isIndeterminate,name,value,tabIndex,\"aria-label\":ariaLabel,\"aria-labelledby\":ariaLabelledBy,\"aria-invalid\":ariaInvalid,...rest}=props,htmlProps=omit(rest,\"isDisabled isReadOnly isRequired isInvalid id onBlur onFocus aria-describedby\".split(\" \")),\nonChangeProp=(0,import_react_use_callback_ref2.useCallbackRef)(onChange),onBlurProp=(0,import_react_use_callback_ref2.useCallbackRef)(onBlur),onFocusProp=(0,import_react_use_callback_ref2.useCallbackRef)(onFocus),[isFocusVisible,setIsFocusVisible]=(0,import_react3.useState)(!1),[isFocused,setFocused]=(0,import_react3.useState)(!1),[isHovered,setHovered]=(0,import_react3.useState)(!1),[isActive,setActive]=(0,import_react3.useState)(!1);(0,import_react3.useEffect)(()=>(0,import_focus_visible.trackFocusVisible)(setIsFocusVisible),\n[]);const inputRef=(0,import_react3.useRef)(null),[rootIsLabelElement,setRootIsLabelElement]=(0,import_react3.useState)(!0),[checkedState,setCheckedState]=(0,import_react3.useState)(!!defaultChecked),isControlled=void 0!==checkedProp,isChecked=isControlled?checkedProp:checkedState,handleChange=(0,import_react3.useCallback)(event=>{isReadOnly||isDisabled?event.preventDefault():(isControlled||(isChecked?setCheckedState(event.target.checked):setCheckedState(isIndeterminate?!0:event.target.checked)),\nnull==onChangeProp?void 0:onChangeProp(event))},[isReadOnly,isDisabled,isChecked,isControlled,isIndeterminate,onChangeProp]);(0,import_react_use_safe_layout_effect.useSafeLayoutEffect)(()=>{inputRef.current&&(inputRef.current.indeterminate=!!isIndeterminate)},[isIndeterminate]);(0,import_react_use_update_effect.useUpdateEffect)(()=>{isDisabled&&setFocused(!1)},[isDisabled,setFocused]);(0,import_react_use_safe_layout_effect.useSafeLayoutEffect)(()=>{const el=inputRef.current;null!=el&&el.form&&(el.form.onreset=\n()=>{setCheckedState(!!defaultChecked)})},[]);const trulyDisabled=isDisabled&&!isFocusable,onKeyDown=(0,import_react3.useCallback)(event=>{\" \"===event.key&&setActive(!0)},[setActive]),onKeyUp=(0,import_react3.useCallback)(event=>{\" \"===event.key&&setActive(!1)},[setActive]);(0,import_react_use_safe_layout_effect.useSafeLayoutEffect)(()=>{inputRef.current&&inputRef.current.checked!==isChecked&&setCheckedState(inputRef.current.checked)},[inputRef.current]);props=(0,import_react3.useCallback)((props2=\n{},forwardedRef=null)=>({...props2,ref:forwardedRef,\"data-active\":(0,import_shared_utils2.dataAttr)(isActive),\"data-hover\":(0,import_shared_utils2.dataAttr)(isHovered),\"data-checked\":(0,import_shared_utils2.dataAttr)(isChecked),\"data-focus\":(0,import_shared_utils2.dataAttr)(isFocused),\"data-focus-visible\":(0,import_shared_utils2.dataAttr)(isFocused&&isFocusVisible),\"data-indeterminate\":(0,import_shared_utils2.dataAttr)(isIndeterminate),\"data-disabled\":(0,import_shared_utils2.dataAttr)(isDisabled),\n\"data-invalid\":(0,import_shared_utils2.dataAttr)(isInvalid),\"data-readonly\":(0,import_shared_utils2.dataAttr)(isReadOnly),\"aria-hidden\":!0,onMouseDown:(0,import_shared_utils2.callAllHandlers)(props2.onMouseDown,event=>{isFocused&&event.preventDefault();setActive(!0)}),onMouseUp:(0,import_shared_utils2.callAllHandlers)(props2.onMouseUp,()=>setActive(!1)),onMouseEnter:(0,import_shared_utils2.callAllHandlers)(props2.onMouseEnter,()=>setHovered(!0)),onMouseLeave:(0,import_shared_utils2.callAllHandlers)(props2.onMouseLeave,\n()=>setHovered(!1))}),[isActive,isChecked,isDisabled,isFocused,isFocusVisible,isHovered,isIndeterminate,isInvalid,isReadOnly]);formControlProps=(0,import_react3.useCallback)((props2={},forwardedRef=null)=>({...htmlProps,...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(forwardedRef,node=>{node&&setRootIsLabelElement(\"LABEL\"===node.tagName)}),onClick:(0,import_shared_utils2.callAllHandlers)(props2.onClick,()=>{var _a;rootIsLabelElement||(null==(_a=inputRef.current)?void 0:_a.click(),requestAnimationFrame(()=>\n{var _a2;null==(_a2=inputRef.current)?void 0:_a2.focus()}))}),\"data-disabled\":(0,import_shared_utils2.dataAttr)(isDisabled),\"data-checked\":(0,import_shared_utils2.dataAttr)(isChecked),\"data-invalid\":(0,import_shared_utils2.dataAttr)(isInvalid)}),[htmlProps,isDisabled,isChecked,isInvalid,rootIsLabelElement]);const getInputProps=(0,import_react3.useCallback)((props2={},forwardedRef=null)=>({...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(inputRef,forwardedRef),type:\"checkbox\",name,value,id,\ntabIndex,onChange:(0,import_shared_utils2.callAllHandlers)(props2.onChange,handleChange),onBlur:(0,import_shared_utils2.callAllHandlers)(props2.onBlur,onBlurProp,()=>setFocused(!1)),onFocus:(0,import_shared_utils2.callAllHandlers)(props2.onFocus,onFocusProp,()=>setFocused(!0)),onKeyDown:(0,import_shared_utils2.callAllHandlers)(props2.onKeyDown,onKeyDown),onKeyUp:(0,import_shared_utils2.callAllHandlers)(props2.onKeyUp,onKeyUp),required:isRequired,checked:isChecked,disabled:trulyDisabled,readOnly:isReadOnly,\n\"aria-label\":ariaLabel,\"aria-labelledby\":ariaLabelledBy,\"aria-invalid\":ariaInvalid?!!ariaInvalid:isInvalid,\"aria-describedby\":ariaDescribedBy,\"aria-disabled\":isDisabled,style:import_visually_hidden.visuallyHiddenStyle}),[name,value,id,handleChange,onBlurProp,onFocusProp,onKeyDown,onKeyUp,isRequired,isChecked,trulyDisabled,isReadOnly,ariaLabel,ariaLabelledBy,ariaInvalid,isInvalid,ariaDescribedBy,isDisabled,tabIndex]),getLabelProps=(0,import_react3.useCallback)((props2={},forwardedRef=null)=>({...props2,\nref:forwardedRef,onMouseDown:(0,import_shared_utils2.callAllHandlers)(props2.onMouseDown,stopEvent),onTouchStart:(0,import_shared_utils2.callAllHandlers)(props2.onTouchStart,stopEvent),\"data-disabled\":(0,import_shared_utils2.dataAttr)(isDisabled),\"data-checked\":(0,import_shared_utils2.dataAttr)(isChecked),\"data-invalid\":(0,import_shared_utils2.dataAttr)(isInvalid)}),[isChecked,isDisabled,isInvalid]);return{state:{isInvalid,isFocused,isChecked,isActive,isHovered,isIndeterminate,isDisabled,isReadOnly,\nisRequired},getRootProps:formControlProps,getCheckboxProps:props,getInputProps,getLabelProps,htmlProps}}function stopEvent(event){event.preventDefault();event.stopPropagation()}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&\"object\"===typeof from||\"function\"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,\nkey)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{Checkbox:()=>Checkbox,CheckboxGroup:()=>CheckboxGroup,CheckboxIcon:()=>CheckboxIcon,useCheckbox:()=>useCheckbox,useCheckboxGroup:()=>useCheckboxGroup});module.exports=(mod=>__copyProps(__defProp({},\"__esModule\",{value:!0}),mod))(global);var import_react2=require(\"module$node_modules$react$index\");\nmodule=require(\"module$node_modules$$chakra_ui$react_context$dist$index\");var [CheckboxGroupProvider,useCheckboxGroupContext]=(0,module.createContext)({name:\"CheckboxGroupContext\",strict:!1}),import_react_use_callback_ref=require(\"module$node_modules$$chakra_ui$react_use_callback_ref$dist$index\"),import_react_use_controllable_state=require(\"module$node_modules$$chakra_ui$react_use_controllable_state$dist$index\"),import_shared_utils=require(\"module$node_modules$$chakra_ui$shared_utils$dist$index\"),\nimport_react=require(\"module$node_modules$react$index\"),import_jsx_runtime=require(\"module$node_modules$react$jsx_runtime\");CheckboxGroup.displayName=\"CheckboxGroup\";var import_system=require(\"module$node_modules$$chakra_ui$system$dist$index\"),import_jsx_runtime2=require(\"module$node_modules$react$jsx_runtime\"),import_system2=require(\"module$node_modules$$chakra_ui$system$dist$index\"),import_shared_utils3=require(\"module$node_modules$$chakra_ui$shared_utils$dist$index\"),import_react4=require(\"module$node_modules$react$index\"),\nimport_form_control=require(\"module$node_modules$$chakra_ui$form_control$dist$index\"),import_react_use_safe_layout_effect=require(\"module$node_modules$$chakra_ui$react_use_safe_layout_effect$dist$index\"),import_react_use_update_effect=require(\"module$node_modules$$chakra_ui$react_use_update_effect$dist$index\"),import_react_use_callback_ref2=require(\"module$node_modules$$chakra_ui$react_use_callback_ref$dist$index\"),import_react_use_merge_refs=require(\"module$node_modules$$chakra_ui$react_use_merge_refs$dist$index\"),\nimport_shared_utils2=require(\"module$node_modules$$chakra_ui$shared_utils$dist$index\"),import_visually_hidden=require(\"module$node_modules$$chakra_ui$visually_hidden$dist$index\"),import_focus_visible=require(\"module$node_modules$$zag_js$focus_visible$dist$index\"),import_react3=require(\"module$node_modules$react$index\"),import_jsx_runtime3=require(\"module$node_modules$react$jsx_runtime\"),controlStyles={display:\"inline-flex\",alignItems:\"center\",justifyContent:\"center\",verticalAlign:\"top\",userSelect:\"none\",\nflexShrink:0},rootStyles={cursor:\"pointer\",display:\"inline-flex\",alignItems:\"center\",verticalAlign:\"top\",position:\"relative\"},checkAnim=(0,import_system2.keyframes)({from:{opacity:0,strokeDashoffset:16,transform:\"scale(0.95)\"},to:{opacity:1,strokeDashoffset:0,transform:\"scale(1)\"}}),indeterminateOpacityAnim=(0,import_system2.keyframes)({from:{opacity:0},to:{opacity:1}}),indeterminateScaleAnim=(0,import_system2.keyframes)({from:{transform:\"scaleX(0.65)\"},to:{transform:\"scaleX(1)\"}}),Checkbox=(0,import_system2.forwardRef)(function(props,\nref){var group=useCheckboxGroupContext();const styles=(0,import_system2.useMultiStyleConfig)(\"Checkbox\",{...group,...props});props=(0,import_system2.omitThemingProps)(props);const {spacing=\"0.5rem\",className,children,iconColor,iconSize,icon=(0,import_jsx_runtime3.jsx)(CheckboxIcon,{}),isChecked:isCheckedProp,isDisabled=null==group?void 0:group.isDisabled,onChange:onChangeProp,inputProps,...rest}=props;let isChecked=isCheckedProp;(null==group?0:group.value)&&props.value&&(isChecked=group.value.includes(props.value));\nlet onChange=onChangeProp;(null==group?0:group.onChange)&&props.value&&(onChange=(0,import_shared_utils3.callAll)(group.onChange,onChangeProp));const {state,getInputProps,getCheckboxProps,getLabelProps,getRootProps}=useCheckbox({...rest,isDisabled,isChecked,onChange});group=(0,import_react4.useMemo)(()=>({animation:state.isIndeterminate?`${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`:`${checkAnim} 200ms linear`,fontSize:iconSize,color:iconColor,...styles.icon}),[iconColor,\niconSize,,state.isIndeterminate,styles.icon]);group=(0,import_react4.cloneElement)(icon,{__css:group,isIndeterminate:state.isIndeterminate,isChecked:state.isChecked});return(0,import_jsx_runtime3.jsxs)(import_system2.chakra.label,{__css:{...rootStyles,...styles.container},className:(0,import_shared_utils3.cx)(\"chakra-checkbox\",className),...getRootProps(),children:[(0,import_jsx_runtime3.jsx)(\"input\",{className:\"chakra-checkbox__input\",...getInputProps(inputProps,ref)}),(0,import_jsx_runtime3.jsx)(import_system2.chakra.span,\n{__css:{...controlStyles,...styles.control},className:\"chakra-checkbox__control\",...getCheckboxProps(),children:group}),children&&(0,import_jsx_runtime3.jsx)(import_system2.chakra.span,{className:\"chakra-checkbox__label\",...getLabelProps(),__css:{marginStart:spacing,...styles.label},children})]})});Checkbox.displayName=\"Checkbox\"}","~:source","shadow$provide[\"module$node_modules$$chakra_ui$checkbox$dist$index\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Checkbox: () => Checkbox,\n  CheckboxGroup: () => CheckboxGroup,\n  CheckboxIcon: () => CheckboxIcon,\n  useCheckbox: () => useCheckbox,\n  useCheckboxGroup: () => useCheckboxGroup\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/checkbox-group.tsx\nvar import_react2 = require(\"react\");\n\n// src/checkbox-context.ts\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = (0, import_react_context.createContext)({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/use-checkbox-group.ts\nvar import_react_use_callback_ref = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react = require(\"react\");\nfunction isInputEvent(value) {\n  return value && (0, import_shared_utils.isObject)(value) && (0, import_shared_utils.isObject)(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = (0, import_react_use_callback_ref.useCallbackRef)(onChange);\n  const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = (0, import_react.useCallback)(\n    (eventOrValue) => {\n      if (!value)\n        return;\n      const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n      const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n      setValue(nextValue);\n    },\n    [setValue, value]\n  );\n  const getCheckboxProps = (0, import_react.useCallback)(\n    (props2 = {}) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n        onChange: handleChange\n      };\n    },\n    [handleChange, isNative, value]\n  );\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = (0, import_react2.useMemo)(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled]\n  );\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(CheckboxGroupProvider, { value: group, children });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\n// src/checkbox-icon.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\n    import_system.chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\n    import_system.chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\n    import_system.chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\n// src/checkbox.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_react4 = require(\"react\");\n\n// src/use-checkbox.ts\nvar import_form_control = require(\"@chakra-ui/form-control\");\nvar import_react_use_safe_layout_effect = require(\"@chakra-ui/react-use-safe-layout-effect\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_callback_ref2 = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nvar import_visually_hidden = require(\"@chakra-ui/visually-hidden\");\nvar import_focus_visible = require(\"@zag-js/focus-visible\");\nvar import_react3 = require(\"react\");\nfunction useCheckbox(props = {}) {\n  const formControlProps = (0, import_form_control.useFormControlProps)(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = (0, import_react_use_callback_ref2.useCallbackRef)(onChange);\n  const onBlurProp = (0, import_react_use_callback_ref2.useCallbackRef)(onBlur);\n  const onFocusProp = (0, import_react_use_callback_ref2.useCallbackRef)(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = (0, import_react3.useState)(false);\n  const [isFocused, setFocused] = (0, import_react3.useState)(false);\n  const [isHovered, setHovered] = (0, import_react3.useState)(false);\n  const [isActive, setActive] = (0, import_react3.useState)(false);\n  (0, import_react3.useEffect)(() => {\n    return (0, import_focus_visible.trackFocusVisible)(setIsFocusVisible);\n  }, []);\n  const inputRef = (0, import_react3.useRef)(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = (0, import_react3.useState)(true);\n  const [checkedState, setCheckedState] = (0, import_react3.useState)(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = (0, import_react3.useCallback)(\n    (event) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault();\n        return;\n      }\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked);\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked);\n        }\n      }\n      onChangeProp == null ? void 0 : onChangeProp(event);\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp\n    ]\n  );\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = (0, import_react3.useCallback)(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(true);\n      }\n    },\n    [setActive]\n  );\n  const onKeyUp = (0, import_react3.useCallback)(\n    (event) => {\n      if (event.key === \" \") {\n        setActive(false);\n      }\n    },\n    [setActive]\n  );\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = (0, import_react3.useCallback)(\n    (props2 = {}, forwardedRef = null) => {\n      const onPressDown = (event) => {\n        if (isFocused) {\n          event.preventDefault();\n        }\n        setActive(true);\n      };\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-active\": (0, import_shared_utils2.dataAttr)(isActive),\n        \"data-hover\": (0, import_shared_utils2.dataAttr)(isHovered),\n        \"data-checked\": (0, import_shared_utils2.dataAttr)(isChecked),\n        \"data-focus\": (0, import_shared_utils2.dataAttr)(isFocused),\n        \"data-focus-visible\": (0, import_shared_utils2.dataAttr)(isFocused && isFocusVisible),\n        \"data-indeterminate\": (0, import_shared_utils2.dataAttr)(isIndeterminate),\n        \"data-disabled\": (0, import_shared_utils2.dataAttr)(isDisabled),\n        \"data-invalid\": (0, import_shared_utils2.dataAttr)(isInvalid),\n        \"data-readonly\": (0, import_shared_utils2.dataAttr)(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: (0, import_shared_utils2.callAllHandlers)(props2.onMouseDown, onPressDown),\n        onMouseUp: (0, import_shared_utils2.callAllHandlers)(props2.onMouseUp, () => setActive(false)),\n        onMouseEnter: (0, import_shared_utils2.callAllHandlers)(\n          props2.onMouseEnter,\n          () => setHovered(true)\n        ),\n        onMouseLeave: (0, import_shared_utils2.callAllHandlers)(\n          props2.onMouseLeave,\n          () => setHovered(false)\n        )\n      };\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly\n    ]\n  );\n  const getRootProps = (0, import_react3.useCallback)(\n    (props2 = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props2,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: (0, import_shared_utils2.callAllHandlers)(props2.onClick, () => {\n        var _a;\n        if (!rootIsLabelElement) {\n          (_a = inputRef.current) == null ? void 0 : _a.click();\n          requestAnimationFrame(() => {\n            var _a2;\n            (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n          });\n        }\n      }),\n      \"data-disabled\": (0, import_shared_utils2.dataAttr)(isDisabled),\n      \"data-checked\": (0, import_shared_utils2.dataAttr)(isChecked),\n      \"data-invalid\": (0, import_shared_utils2.dataAttr)(isInvalid)\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]\n  );\n  const getInputProps = (0, import_react3.useCallback)(\n    (props2 = {}, forwardedRef = null) => {\n      return {\n        ...props2,\n        ref: (0, import_react_use_merge_refs.mergeRefs)(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: (0, import_shared_utils2.callAllHandlers)(props2.onChange, handleChange),\n        onBlur: (0, import_shared_utils2.callAllHandlers)(\n          props2.onBlur,\n          onBlurProp,\n          () => setFocused(false)\n        ),\n        onFocus: (0, import_shared_utils2.callAllHandlers)(\n          props2.onFocus,\n          onFocusProp,\n          () => setFocused(true)\n        ),\n        onKeyDown: (0, import_shared_utils2.callAllHandlers)(props2.onKeyDown, onKeyDown),\n        onKeyUp: (0, import_shared_utils2.callAllHandlers)(props2.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: import_visually_hidden.visuallyHiddenStyle\n      };\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex\n    ]\n  );\n  const getLabelProps = (0, import_react3.useCallback)(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      onMouseDown: (0, import_shared_utils2.callAllHandlers)(props2.onMouseDown, stopEvent),\n      onTouchStart: (0, import_shared_utils2.callAllHandlers)(props2.onTouchStart, stopEvent),\n      \"data-disabled\": (0, import_shared_utils2.dataAttr)(isDisabled),\n      \"data-checked\": (0, import_shared_utils2.dataAttr)(isChecked),\n      \"data-invalid\": (0, import_shared_utils2.dataAttr)(isInvalid)\n    }),\n    [isChecked, isDisabled, isInvalid]\n  );\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/checkbox.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = (0, import_system2.keyframes)({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = (0, import_system2.keyframes)({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = (0, import_system2.keyframes)({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = (0, import_system2.forwardRef)(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = (0, import_system2.useMultiStyleConfig)(\"Checkbox\", mergedProps);\n  const ownProps = (0, import_system2.omitThemingProps)(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = (0, import_shared_utils3.callAll)(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = (0, import_react4.useMemo)(\n    () => ({\n      animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon\n    }),\n    [iconColor, iconSize, , state.isIndeterminate, styles.icon]\n  );\n  const clonedIcon = (0, import_react4.cloneElement)(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(\n    import_system2.chakra.label,\n    {\n      __css: { ...rootStyles, ...styles.container },\n      className: (0, import_shared_utils3.cx)(\"chakra-checkbox\", className),\n      ...getRootProps(),\n      children: [\n        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\n          \"input\",\n          {\n            className: \"chakra-checkbox__input\",\n            ...getInputProps(inputProps, ref)\n          }\n        ),\n        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\n          import_system2.chakra.span,\n          {\n            __css: { ...controlStyles, ...styles.control },\n            className: \"chakra-checkbox__control\",\n            ...getCheckboxProps(),\n            children: clonedIcon\n          }\n        ),\n        children && /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\n          import_system2.chakra.span,\n          {\n            className: \"chakra-checkbox__label\",\n            ...getLabelProps(),\n            __css: {\n              marginStart: spacing,\n              ...styles.label\n            },\n            children\n          }\n        )\n      ]\n    }\n  );\n});\nCheckbox.displayName = \"Checkbox\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$chakra_ui$system$dist$index","~$module$node_modules$react$jsx_runtime","~$module$node_modules$$chakra_ui$form_control$dist$index","~$module$node_modules$$chakra_ui$shared_utils$dist$index","~$module$node_modules$$chakra_ui$react_use_update_effect$dist$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$chakra_ui$react_context$dist$index","~$module$node_modules$$chakra_ui$visually_hidden$dist$index","~$module$node_modules$$chakra_ui$react_use_callback_ref$dist$index","~$module$node_modules$$zag_js$focus_visible$dist$index","~$module$node_modules$$chakra_ui$react_use_safe_layout_effect$dist$index","~$module$node_modules$$chakra_ui$react_use_controllable_state$dist$index","~$module$node_modules$$chakra_ui$react_use_merge_refs$dist$index"]],"~:properties",["^5",["y1","CheckboxIcon","isActive","width","onChange","x1","height","Checkbox","getInputProps","tabIndex","getRootProps","className","CheckboxGroup","displayName","points","getLabelProps","children","onKeyUp","justifyContent","userSelect","id","transform","viewBox","verticalAlign","strokeDasharray","onMouseLeave","onMouseDown","useCheckbox","position","name","stroke","style","animation","value","enumerable","indeterminate","onFocus","isIndeterminate","onreset","fill","cursor","fontSize","strokeWidth","colorScheme","useCheckboxGroup","onBlur","readOnly","onClick","isDisabled","required","setValue","type","onMouseEnter","x2","state","ref","flexShrink","from","alignItems","display","y2","strict","defaultValue","onKeyDown","size","strokeDashoffset","getCheckboxProps","disabled","isReadOnly","onMouseUp","to","isChecked","__css","get","marginStart","isInvalid","color","checked","htmlProps","opacity","onTouchStart","variant","isHovered","isRequired","isFocused"]],"~:compiled-at",1681642524830,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$chakra_ui$checkbox$dist$index.js\",\n\"lineCount\":28,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@chakra-ui/checkbox/dist/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$chakra_ui$checkbox$dist$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __defProp = Object.defineProperty;\\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\\nvar __getOwnPropNames = Object.getOwnPropertyNames;\\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\\nvar __export = (target, all) => {\\n  for (var name in all)\\n    __defProp(target, name, { get: all[name], enumerable: true });\\n};\\nvar __copyProps = (to, from, except, desc) => {\\n  if (from && typeof from === \\\"object\\\" || typeof from === \\\"function\\\") {\\n    for (let key of __getOwnPropNames(from))\\n      if (!__hasOwnProp.call(to, key) && key !== except)\\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\\n  }\\n  return to;\\n};\\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \\\"__esModule\\\", { value: true }), mod);\\n\\n// src/index.ts\\nvar src_exports = {};\\n__export(src_exports, {\\n  Checkbox: () => Checkbox,\\n  CheckboxGroup: () => CheckboxGroup,\\n  CheckboxIcon: () => CheckboxIcon,\\n  useCheckbox: () => useCheckbox,\\n  useCheckboxGroup: () => useCheckboxGroup\\n});\\nmodule.exports = __toCommonJS(src_exports);\\n\\n// src/checkbox-group.tsx\\nvar import_react2 = require(\\\"react\\\");\\n\\n// src/checkbox-context.ts\\nvar import_react_context = require(\\\"@chakra-ui/react-context\\\");\\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = (0, import_react_context.createContext)({\\n  name: \\\"CheckboxGroupContext\\\",\\n  strict: false\\n});\\n\\n// src/use-checkbox-group.ts\\nvar import_react_use_callback_ref = require(\\\"@chakra-ui/react-use-callback-ref\\\");\\nvar import_react_use_controllable_state = require(\\\"@chakra-ui/react-use-controllable-state\\\");\\nvar import_shared_utils = require(\\\"@chakra-ui/shared-utils\\\");\\nvar import_react = require(\\\"react\\\");\\nfunction isInputEvent(value) {\\n  return value && (0, import_shared_utils.isObject)(value) && (0, import_shared_utils.isObject)(value.target);\\n}\\nfunction useCheckboxGroup(props = {}) {\\n  const {\\n    defaultValue,\\n    value: valueProp,\\n    onChange,\\n    isDisabled,\\n    isNative\\n  } = props;\\n  const onChangeProp = (0, import_react_use_callback_ref.useCallbackRef)(onChange);\\n  const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({\\n    value: valueProp,\\n    defaultValue: defaultValue || [],\\n    onChange: onChangeProp\\n  });\\n  const handleChange = (0, import_react.useCallback)(\\n    (eventOrValue) => {\\n      if (!value)\\n        return;\\n      const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\\n      const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\\n      const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\\n      setValue(nextValue);\\n    },\\n    [setValue, value]\\n  );\\n  const getCheckboxProps = (0, import_react.useCallback)(\\n    (props2 = {}) => {\\n      const checkedKey = isNative ? \\\"checked\\\" : \\\"isChecked\\\";\\n      return {\\n        ...props2,\\n        [checkedKey]: value.some((val) => String(props2.value) === String(val)),\\n        onChange: handleChange\\n      };\\n    },\\n    [handleChange, isNative, value]\\n  );\\n  return {\\n    value,\\n    isDisabled,\\n    onChange: handleChange,\\n    setValue,\\n    getCheckboxProps\\n  };\\n}\\n\\n// src/checkbox-group.tsx\\nvar import_jsx_runtime = require(\\\"react/jsx-runtime\\\");\\nfunction CheckboxGroup(props) {\\n  const { colorScheme, size, variant, children, isDisabled } = props;\\n  const { value, onChange } = useCheckboxGroup(props);\\n  const group = (0, import_react2.useMemo)(\\n    () => ({\\n      size,\\n      onChange,\\n      colorScheme,\\n      value,\\n      variant,\\n      isDisabled\\n    }),\\n    [size, onChange, colorScheme, value, variant, isDisabled]\\n  );\\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(CheckboxGroupProvider, { value: group, children });\\n}\\nCheckboxGroup.displayName = \\\"CheckboxGroup\\\";\\n\\n// src/checkbox-icon.tsx\\nvar import_system = require(\\\"@chakra-ui/system\\\");\\nvar import_jsx_runtime2 = require(\\\"react/jsx-runtime\\\");\\nfunction CheckIcon(props) {\\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\\n    import_system.chakra.svg,\\n    {\\n      width: \\\"1.2em\\\",\\n      viewBox: \\\"0 0 12 10\\\",\\n      style: {\\n        fill: \\\"none\\\",\\n        strokeWidth: 2,\\n        stroke: \\\"currentColor\\\",\\n        strokeDasharray: 16\\n      },\\n      ...props,\\n      children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\\\"polyline\\\", { points: \\\"1.5 6 4.5 9 10.5 1\\\" })\\n    }\\n  );\\n}\\nfunction IndeterminateIcon(props) {\\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\\n    import_system.chakra.svg,\\n    {\\n      width: \\\"1.2em\\\",\\n      viewBox: \\\"0 0 24 24\\\",\\n      style: { stroke: \\\"currentColor\\\", strokeWidth: 4 },\\n      ...props,\\n      children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\\\"line\\\", { x1: \\\"21\\\", x2: \\\"3\\\", y1: \\\"12\\\", y2: \\\"12\\\" })\\n    }\\n  );\\n}\\nfunction CheckboxIcon(props) {\\n  const { isIndeterminate, isChecked, ...rest } = props;\\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\\n  return isChecked || isIndeterminate ? /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\\n    import_system.chakra.div,\\n    {\\n      style: {\\n        display: \\\"flex\\\",\\n        alignItems: \\\"center\\\",\\n        justifyContent: \\\"center\\\",\\n        height: \\\"100%\\\"\\n      },\\n      children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(BaseIcon, { ...rest })\\n    }\\n  ) : null;\\n}\\n\\n// src/checkbox.tsx\\nvar import_system2 = require(\\\"@chakra-ui/system\\\");\\nvar import_shared_utils3 = require(\\\"@chakra-ui/shared-utils\\\");\\nvar import_react4 = require(\\\"react\\\");\\n\\n// src/use-checkbox.ts\\nvar import_form_control = require(\\\"@chakra-ui/form-control\\\");\\nvar import_react_use_safe_layout_effect = require(\\\"@chakra-ui/react-use-safe-layout-effect\\\");\\nvar import_react_use_update_effect = require(\\\"@chakra-ui/react-use-update-effect\\\");\\nvar import_react_use_callback_ref2 = require(\\\"@chakra-ui/react-use-callback-ref\\\");\\nvar import_react_use_merge_refs = require(\\\"@chakra-ui/react-use-merge-refs\\\");\\nvar import_shared_utils2 = require(\\\"@chakra-ui/shared-utils\\\");\\n\\n// ../../utilities/object-utils/src/index.ts\\nfunction omit(object, keysToOmit = []) {\\n  const clone = Object.assign({}, object);\\n  for (const key of keysToOmit) {\\n    if (key in clone)\\n      delete clone[key];\\n  }\\n  return clone;\\n}\\n\\n// src/use-checkbox.ts\\nvar import_visually_hidden = require(\\\"@chakra-ui/visually-hidden\\\");\\nvar import_focus_visible = require(\\\"@zag-js/focus-visible\\\");\\nvar import_react3 = require(\\\"react\\\");\\nfunction useCheckbox(props = {}) {\\n  const formControlProps = (0, import_form_control.useFormControlProps)(props);\\n  const {\\n    isDisabled,\\n    isReadOnly,\\n    isRequired,\\n    isInvalid,\\n    id,\\n    onBlur,\\n    onFocus,\\n    \\\"aria-describedby\\\": ariaDescribedBy\\n  } = formControlProps;\\n  const {\\n    defaultChecked,\\n    isChecked: checkedProp,\\n    isFocusable,\\n    onChange,\\n    isIndeterminate,\\n    name,\\n    value,\\n    tabIndex = void 0,\\n    \\\"aria-label\\\": ariaLabel,\\n    \\\"aria-labelledby\\\": ariaLabelledBy,\\n    \\\"aria-invalid\\\": ariaInvalid,\\n    ...rest\\n  } = props;\\n  const htmlProps = omit(rest, [\\n    \\\"isDisabled\\\",\\n    \\\"isReadOnly\\\",\\n    \\\"isRequired\\\",\\n    \\\"isInvalid\\\",\\n    \\\"id\\\",\\n    \\\"onBlur\\\",\\n    \\\"onFocus\\\",\\n    \\\"aria-describedby\\\"\\n  ]);\\n  const onChangeProp = (0, import_react_use_callback_ref2.useCallbackRef)(onChange);\\n  const onBlurProp = (0, import_react_use_callback_ref2.useCallbackRef)(onBlur);\\n  const onFocusProp = (0, import_react_use_callback_ref2.useCallbackRef)(onFocus);\\n  const [isFocusVisible, setIsFocusVisible] = (0, import_react3.useState)(false);\\n  const [isFocused, setFocused] = (0, import_react3.useState)(false);\\n  const [isHovered, setHovered] = (0, import_react3.useState)(false);\\n  const [isActive, setActive] = (0, import_react3.useState)(false);\\n  (0, import_react3.useEffect)(() => {\\n    return (0, import_focus_visible.trackFocusVisible)(setIsFocusVisible);\\n  }, []);\\n  const inputRef = (0, import_react3.useRef)(null);\\n  const [rootIsLabelElement, setRootIsLabelElement] = (0, import_react3.useState)(true);\\n  const [checkedState, setCheckedState] = (0, import_react3.useState)(!!defaultChecked);\\n  const isControlled = checkedProp !== void 0;\\n  const isChecked = isControlled ? checkedProp : checkedState;\\n  const handleChange = (0, import_react3.useCallback)(\\n    (event) => {\\n      if (isReadOnly || isDisabled) {\\n        event.preventDefault();\\n        return;\\n      }\\n      if (!isControlled) {\\n        if (isChecked) {\\n          setCheckedState(event.target.checked);\\n        } else {\\n          setCheckedState(isIndeterminate ? true : event.target.checked);\\n        }\\n      }\\n      onChangeProp == null ? void 0 : onChangeProp(event);\\n    },\\n    [\\n      isReadOnly,\\n      isDisabled,\\n      isChecked,\\n      isControlled,\\n      isIndeterminate,\\n      onChangeProp\\n    ]\\n  );\\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\\n    if (inputRef.current) {\\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\\n    }\\n  }, [isIndeterminate]);\\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\\n    if (isDisabled) {\\n      setFocused(false);\\n    }\\n  }, [isDisabled, setFocused]);\\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\\n    const el = inputRef.current;\\n    if (!(el == null ? void 0 : el.form))\\n      return;\\n    el.form.onreset = () => {\\n      setCheckedState(!!defaultChecked);\\n    };\\n  }, []);\\n  const trulyDisabled = isDisabled && !isFocusable;\\n  const onKeyDown = (0, import_react3.useCallback)(\\n    (event) => {\\n      if (event.key === \\\" \\\") {\\n        setActive(true);\\n      }\\n    },\\n    [setActive]\\n  );\\n  const onKeyUp = (0, import_react3.useCallback)(\\n    (event) => {\\n      if (event.key === \\\" \\\") {\\n        setActive(false);\\n      }\\n    },\\n    [setActive]\\n  );\\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\\n    if (!inputRef.current)\\n      return;\\n    const notInSync = inputRef.current.checked !== isChecked;\\n    if (notInSync) {\\n      setCheckedState(inputRef.current.checked);\\n    }\\n  }, [inputRef.current]);\\n  const getCheckboxProps = (0, import_react3.useCallback)(\\n    (props2 = {}, forwardedRef = null) => {\\n      const onPressDown = (event) => {\\n        if (isFocused) {\\n          event.preventDefault();\\n        }\\n        setActive(true);\\n      };\\n      return {\\n        ...props2,\\n        ref: forwardedRef,\\n        \\\"data-active\\\": (0, import_shared_utils2.dataAttr)(isActive),\\n        \\\"data-hover\\\": (0, import_shared_utils2.dataAttr)(isHovered),\\n        \\\"data-checked\\\": (0, import_shared_utils2.dataAttr)(isChecked),\\n        \\\"data-focus\\\": (0, import_shared_utils2.dataAttr)(isFocused),\\n        \\\"data-focus-visible\\\": (0, import_shared_utils2.dataAttr)(isFocused && isFocusVisible),\\n        \\\"data-indeterminate\\\": (0, import_shared_utils2.dataAttr)(isIndeterminate),\\n        \\\"data-disabled\\\": (0, import_shared_utils2.dataAttr)(isDisabled),\\n        \\\"data-invalid\\\": (0, import_shared_utils2.dataAttr)(isInvalid),\\n        \\\"data-readonly\\\": (0, import_shared_utils2.dataAttr)(isReadOnly),\\n        \\\"aria-hidden\\\": true,\\n        onMouseDown: (0, import_shared_utils2.callAllHandlers)(props2.onMouseDown, onPressDown),\\n        onMouseUp: (0, import_shared_utils2.callAllHandlers)(props2.onMouseUp, () => setActive(false)),\\n        onMouseEnter: (0, import_shared_utils2.callAllHandlers)(\\n          props2.onMouseEnter,\\n          () => setHovered(true)\\n        ),\\n        onMouseLeave: (0, import_shared_utils2.callAllHandlers)(\\n          props2.onMouseLeave,\\n          () => setHovered(false)\\n        )\\n      };\\n    },\\n    [\\n      isActive,\\n      isChecked,\\n      isDisabled,\\n      isFocused,\\n      isFocusVisible,\\n      isHovered,\\n      isIndeterminate,\\n      isInvalid,\\n      isReadOnly\\n    ]\\n  );\\n  const getRootProps = (0, import_react3.useCallback)(\\n    (props2 = {}, forwardedRef = null) => ({\\n      ...htmlProps,\\n      ...props2,\\n      ref: (0, import_react_use_merge_refs.mergeRefs)(forwardedRef, (node) => {\\n        if (!node)\\n          return;\\n        setRootIsLabelElement(node.tagName === \\\"LABEL\\\");\\n      }),\\n      onClick: (0, import_shared_utils2.callAllHandlers)(props2.onClick, () => {\\n        var _a;\\n        if (!rootIsLabelElement) {\\n          (_a = inputRef.current) == null ? void 0 : _a.click();\\n          requestAnimationFrame(() => {\\n            var _a2;\\n            (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\\n          });\\n        }\\n      }),\\n      \\\"data-disabled\\\": (0, import_shared_utils2.dataAttr)(isDisabled),\\n      \\\"data-checked\\\": (0, import_shared_utils2.dataAttr)(isChecked),\\n      \\\"data-invalid\\\": (0, import_shared_utils2.dataAttr)(isInvalid)\\n    }),\\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]\\n  );\\n  const getInputProps = (0, import_react3.useCallback)(\\n    (props2 = {}, forwardedRef = null) => {\\n      return {\\n        ...props2,\\n        ref: (0, import_react_use_merge_refs.mergeRefs)(inputRef, forwardedRef),\\n        type: \\\"checkbox\\\",\\n        name,\\n        value,\\n        id,\\n        tabIndex,\\n        onChange: (0, import_shared_utils2.callAllHandlers)(props2.onChange, handleChange),\\n        onBlur: (0, import_shared_utils2.callAllHandlers)(\\n          props2.onBlur,\\n          onBlurProp,\\n          () => setFocused(false)\\n        ),\\n        onFocus: (0, import_shared_utils2.callAllHandlers)(\\n          props2.onFocus,\\n          onFocusProp,\\n          () => setFocused(true)\\n        ),\\n        onKeyDown: (0, import_shared_utils2.callAllHandlers)(props2.onKeyDown, onKeyDown),\\n        onKeyUp: (0, import_shared_utils2.callAllHandlers)(props2.onKeyUp, onKeyUp),\\n        required: isRequired,\\n        checked: isChecked,\\n        disabled: trulyDisabled,\\n        readOnly: isReadOnly,\\n        \\\"aria-label\\\": ariaLabel,\\n        \\\"aria-labelledby\\\": ariaLabelledBy,\\n        \\\"aria-invalid\\\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\\n        \\\"aria-describedby\\\": ariaDescribedBy,\\n        \\\"aria-disabled\\\": isDisabled,\\n        style: import_visually_hidden.visuallyHiddenStyle\\n      };\\n    },\\n    [\\n      name,\\n      value,\\n      id,\\n      handleChange,\\n      onBlurProp,\\n      onFocusProp,\\n      onKeyDown,\\n      onKeyUp,\\n      isRequired,\\n      isChecked,\\n      trulyDisabled,\\n      isReadOnly,\\n      ariaLabel,\\n      ariaLabelledBy,\\n      ariaInvalid,\\n      isInvalid,\\n      ariaDescribedBy,\\n      isDisabled,\\n      tabIndex\\n    ]\\n  );\\n  const getLabelProps = (0, import_react3.useCallback)(\\n    (props2 = {}, forwardedRef = null) => ({\\n      ...props2,\\n      ref: forwardedRef,\\n      onMouseDown: (0, import_shared_utils2.callAllHandlers)(props2.onMouseDown, stopEvent),\\n      onTouchStart: (0, import_shared_utils2.callAllHandlers)(props2.onTouchStart, stopEvent),\\n      \\\"data-disabled\\\": (0, import_shared_utils2.dataAttr)(isDisabled),\\n      \\\"data-checked\\\": (0, import_shared_utils2.dataAttr)(isChecked),\\n      \\\"data-invalid\\\": (0, import_shared_utils2.dataAttr)(isInvalid)\\n    }),\\n    [isChecked, isDisabled, isInvalid]\\n  );\\n  const state = {\\n    isInvalid,\\n    isFocused,\\n    isChecked,\\n    isActive,\\n    isHovered,\\n    isIndeterminate,\\n    isDisabled,\\n    isReadOnly,\\n    isRequired\\n  };\\n  return {\\n    state,\\n    getRootProps,\\n    getCheckboxProps,\\n    getInputProps,\\n    getLabelProps,\\n    htmlProps\\n  };\\n}\\nfunction stopEvent(event) {\\n  event.preventDefault();\\n  event.stopPropagation();\\n}\\n\\n// src/checkbox.tsx\\nvar import_jsx_runtime3 = require(\\\"react/jsx-runtime\\\");\\nvar controlStyles = {\\n  display: \\\"inline-flex\\\",\\n  alignItems: \\\"center\\\",\\n  justifyContent: \\\"center\\\",\\n  verticalAlign: \\\"top\\\",\\n  userSelect: \\\"none\\\",\\n  flexShrink: 0\\n};\\nvar rootStyles = {\\n  cursor: \\\"pointer\\\",\\n  display: \\\"inline-flex\\\",\\n  alignItems: \\\"center\\\",\\n  verticalAlign: \\\"top\\\",\\n  position: \\\"relative\\\"\\n};\\nvar checkAnim = (0, import_system2.keyframes)({\\n  from: {\\n    opacity: 0,\\n    strokeDashoffset: 16,\\n    transform: \\\"scale(0.95)\\\"\\n  },\\n  to: {\\n    opacity: 1,\\n    strokeDashoffset: 0,\\n    transform: \\\"scale(1)\\\"\\n  }\\n});\\nvar indeterminateOpacityAnim = (0, import_system2.keyframes)({\\n  from: {\\n    opacity: 0\\n  },\\n  to: {\\n    opacity: 1\\n  }\\n});\\nvar indeterminateScaleAnim = (0, import_system2.keyframes)({\\n  from: {\\n    transform: \\\"scaleX(0.65)\\\"\\n  },\\n  to: {\\n    transform: \\\"scaleX(1)\\\"\\n  }\\n});\\nvar Checkbox = (0, import_system2.forwardRef)(function Checkbox2(props, ref) {\\n  const group = useCheckboxGroupContext();\\n  const mergedProps = { ...group, ...props };\\n  const styles = (0, import_system2.useMultiStyleConfig)(\\\"Checkbox\\\", mergedProps);\\n  const ownProps = (0, import_system2.omitThemingProps)(props);\\n  const {\\n    spacing = \\\"0.5rem\\\",\\n    className,\\n    children,\\n    iconColor,\\n    iconSize,\\n    icon = /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(CheckboxIcon, {}),\\n    isChecked: isCheckedProp,\\n    isDisabled = group == null ? void 0 : group.isDisabled,\\n    onChange: onChangeProp,\\n    inputProps,\\n    ...rest\\n  } = ownProps;\\n  let isChecked = isCheckedProp;\\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\\n    isChecked = group.value.includes(ownProps.value);\\n  }\\n  let onChange = onChangeProp;\\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\\n    onChange = (0, import_shared_utils3.callAll)(group.onChange, onChangeProp);\\n  }\\n  const {\\n    state,\\n    getInputProps,\\n    getCheckboxProps,\\n    getLabelProps,\\n    getRootProps\\n  } = useCheckbox({\\n    ...rest,\\n    isDisabled,\\n    isChecked,\\n    onChange\\n  });\\n  const iconStyles = (0, import_react4.useMemo)(\\n    () => ({\\n      animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\\n      fontSize: iconSize,\\n      color: iconColor,\\n      ...styles.icon\\n    }),\\n    [iconColor, iconSize, , state.isIndeterminate, styles.icon]\\n  );\\n  const clonedIcon = (0, import_react4.cloneElement)(icon, {\\n    __css: iconStyles,\\n    isIndeterminate: state.isIndeterminate,\\n    isChecked: state.isChecked\\n  });\\n  return /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(\\n    import_system2.chakra.label,\\n    {\\n      __css: { ...rootStyles, ...styles.container },\\n      className: (0, import_shared_utils3.cx)(\\\"chakra-checkbox\\\", className),\\n      ...getRootProps(),\\n      children: [\\n        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\\n          \\\"input\\\",\\n          {\\n            className: \\\"chakra-checkbox__input\\\",\\n            ...getInputProps(inputProps, ref)\\n          }\\n        ),\\n        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\\n          import_system2.chakra.span,\\n          {\\n            __css: { ...controlStyles, ...styles.control },\\n            className: \\\"chakra-checkbox__control\\\",\\n            ...getCheckboxProps(),\\n            children: clonedIcon\\n          }\\n        ),\\n        children && /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(\\n          import_system2.chakra.span,\\n          {\\n            className: \\\"chakra-checkbox__label\\\",\\n            ...getLabelProps(),\\n            __css: {\\n              marginStart: spacing,\\n              ...styles.label\\n            },\\n            children\\n          }\\n        )\\n      ]\\n    }\\n  );\\n});\\nCheckbox.displayName = \\\"Checkbox\\\";\\n// Annotate the CommonJS export names for ESM import in node:\\n0 && (module.exports = {\\n  Checkbox,\\n  CheckboxGroup,\\n  CheckboxIcon,\\n  useCheckbox,\\n  useCheckboxGroup\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isInputEvent\",\"value\",\"import_shared_utils\",\"isObject\",\"target\",\"useCheckboxGroup\",\"props\",\"defaultValue\",\"valueProp\",\"onChange\",\"isDisabled\",\"isNative\",\"onChangeProp\",\"import_react_use_callback_ref\",\"useCallbackRef\",\"setValue\",\"import_react_use_controllable_state\",\"useControllableState\",\"handleChange\",\"import_react\",\"useCallback\",\"eventOrValue\",\"isChecked\",\"checked\",\"includes\",\"selectedValue\",\"nextValue\",\"filter\",\"v\",\"String\",\"getCheckboxProps\",\"props2\",\"checkedKey\",\"some\",\"val\",\"CheckboxGroup\",\"colorScheme\",\"size\",\"variant\",\"children\",\"group\",\"import_react2\",\"useMemo\",\"import_jsx_runtime\",\"jsx\",\"CheckboxGroupProvider\",\"CheckIcon\",\"import_jsx_runtime2\",\"import_system\",\"chakra\",\"svg\",\"width\",\"viewBox\",\"style\",\"fill\",\"strokeWidth\",\"stroke\",\"strokeDasharray\",\"points\",\"IndeterminateIcon\",\"x1\",\"x2\",\"y1\",\"y2\",\"CheckboxIcon\",\"isIndeterminate\",\"rest\",\"BaseIcon\",\"div\",\"display\",\"alignItems\",\"justifyContent\",\"height\",\"omit\",\"object\",\"keysToOmit\",\"clone\",\"Object\",\"assign\",\"key\",\"useCheckbox\",\"formControlProps\",\"import_form_control\",\"useFormControlProps\",\"isReadOnly\",\"isRequired\",\"isInvalid\",\"id\",\"onBlur\",\"onFocus\",\"ariaDescribedBy\",\"defaultChecked\",\"checkedProp\",\"isFocusable\",\"name\",\"tabIndex\",\"ariaLabel\",\"ariaLabelledBy\",\"ariaInvalid\",\"htmlProps\",\"import_react_use_callback_ref2\",\"onBlurProp\",\"onFocusProp\",\"isFocusVisible\",\"setIsFocusVisible\",\"import_react3\",\"useState\",\"isFocused\",\"setFocused\",\"isHovered\",\"setHovered\",\"isActive\",\"setActive\",\"useEffect\",\"import_focus_visible\",\"trackFocusVisible\",\"inputRef\",\"useRef\",\"rootIsLabelElement\",\"setRootIsLabelElement\",\"checkedState\",\"setCheckedState\",\"isControlled\",\"event\",\"preventDefault\",\"import_react_use_safe_layout_effect\",\"useSafeLayoutEffect\",\"current\",\"indeterminate\",\"import_react_use_update_effect\",\"useUpdateEffect\",\"el\",\"form\",\"onreset\",\"el.form.onreset\",\"trulyDisabled\",\"onKeyDown\",\"onKeyUp\",\"forwardedRef\",\"ref\",\"import_shared_utils2\",\"dataAttr\",\"onMouseDown\",\"callAllHandlers\",\"onPressDown\",\"onMouseUp\",\"onMouseEnter\",\"onMouseLeave\",\"getRootProps\",\"import_react_use_merge_refs\",\"mergeRefs\",\"node\",\"tagName\",\"onClick\",\"_a\",\"click\",\"requestAnimationFrame\",\"_a2\",\"focus\",\"getInputProps\",\"type\",\"required\",\"disabled\",\"readOnly\",\"import_visually_hidden\",\"visuallyHiddenStyle\",\"getLabelProps\",\"stopEvent\",\"onTouchStart\",\"state\",\"stopPropagation\",\"__defProp\",\"defineProperty\",\"__getOwnPropDesc\",\"getOwnPropertyDescriptor\",\"__getOwnPropNames\",\"getOwnPropertyNames\",\"__hasOwnProp\",\"prototype\",\"hasOwnProperty\",\"__copyProps\",\"to\",\"from\",\"except\",\"desc\",\"call\",\"get\",\"enumerable\",\"src_exports\",\"__export\",\"all\",\"Checkbox\",\"__toCommonJS\",\"mod\",\"import_react_context\",\"useCheckboxGroupContext\",\"createContext\",\"strict\",\"displayName\",\"import_system2\",\"import_shared_utils3\",\"import_react4\",\"import_jsx_runtime3\",\"controlStyles\",\"verticalAlign\",\"userSelect\",\"flexShrink\",\"rootStyles\",\"cursor\",\"position\",\"checkAnim\",\"keyframes\",\"opacity\",\"strokeDashoffset\",\"transform\",\"indeterminateOpacityAnim\",\"indeterminateScaleAnim\",\"forwardRef\",\"Checkbox2\",\"styles\",\"useMultiStyleConfig\",\"mergedProps\",\"ownProps\",\"omitThemingProps\",\"spacing\",\"className\",\"iconColor\",\"iconSize\",\"icon\",\"isCheckedProp\",\"inputProps\",\"callAll\",\"iconStyles\",\"animation\",\"fontSize\",\"color\",\"clonedIcon\",\"cloneElement\",\"__css\",\"jsxs\",\"label\",\"container\",\"cx\",\"span\",\"control\",\"marginStart\"]\n}\n"]