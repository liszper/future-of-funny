{
"version":3,
"file":"module$node_modules$engine_DOT_io_client$build$cjs$transports$polling.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/engine_DOT_io-client/build/cjs/transports/polling.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$engine_DOT_io_client$build$cjs$transports$polling\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Request = exports.Polling = void 0;\nconst transport_js_1 = require(\"../transport.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst xmlhttprequest_js_1 = require(\"./xmlhttprequest.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst util_js_1 = require(\"../util.js\");\nconst globalThis_js_1 = require(\"../globalThis.js\");\nconst debug = (0, debug_1.default)(\"engine.io-client:polling\"); // debug()\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new xmlhttprequest_js_1.XHR({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nclass Polling extends transport_js_1.Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            debug(\"paused\");\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                debug(\"we are currently polling - waiting to pause\");\n                total++;\n                this.once(\"pollComplete\", function () {\n                    debug(\"pre-pause polling complete\");\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                debug(\"we are currently writing - waiting to pause\");\n                total++;\n                this.once(\"drain\", function () {\n                    debug(\"pre-pause writing complete\");\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        debug(\"polling\");\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        debug(\"polling got data %s\", data);\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0, engine_io_parser_1.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n                debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            debug(\"writing close packet\");\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            debug(\"transport open - closing\");\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug(\"transport not open - deferring close\");\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        (0, engine_io_parser_1.encodePayload)(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = (0, parseqs_js_1.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        debug(\"xhr poll\");\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexports.Polling = Polling;\nclass Request extends component_emitter_1.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new xmlhttprequest_js_1.XHR(opts));\n        try {\n            debug(\"xhr open %s: %s\", this.method, this.uri);\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            debug(\"xhr data %s\", this.data);\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis_js_1.globalThisShim ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","empty","unloadHandler","i","Request","requests","hasOwnProperty","abort","__importDefault","mod","__esModule","Object","defineProperty","value","Polling","transport_js_1","debug_1","yeast_js_1","parseqs_js_1","engine_io_parser_1","xmlhttprequest_js_1","component_emitter_1","util_js_1","globalThis_js_1","debug","default","hasXHR2","responseType","xhr","XHR","xdomain","Transport","constructor","opts","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","doOpen","poll","pause","onPause","readyState","writable","total","once","doPoll","emitReserved","onData","data","decodePayload","socket","binaryType","forEach","packet","callback","type","onOpen","onClose","description","onPacket","doClose","close","write","packets","encodePayload","doWrite","uri","query","schema","timestampRequests","timestampParam","yeast","sid","b64","Number","encodedQuery","encode","ipv6","indexOf","path","length","request","assign","fn","req","method","on","xhrStatus","context","onError","bind","pollXhr","Emitter","installTimerFunctions","async","undefined","create","pick","xscheme","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","xhr.onreadystatechange","status","onLoad","setTimeoutFn","send","document","index","requestsCount","err","cleanup","fromError","responseText","attachEvent","addEventListener","terminationEvent","globalThisShim"]
}
