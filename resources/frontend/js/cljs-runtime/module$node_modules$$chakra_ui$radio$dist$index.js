shadow$provide.module$node_modules$$chakra_ui$radio$dist$index=function(global,require,module,exports){function useRadioGroup(props={}){const {onChange:onChangeProp,value:valueProp,defaultValue,name:nameProp,isDisabled,isFocusable,isNative,...htmlProps}=props,[valueState,setValue]=(0,import_react.useState)(defaultValue||""),isControlled="undefined"!==typeof valueProp,value=isControlled?valueProp:valueState,ref=(0,import_react.useRef)(null);props=(0,import_react.useCallback)(()=>{var rootNode=ref.current;
if(rootNode){var firstEnabledAndCheckedInput=rootNode.querySelector("input:not(:disabled):checked");firstEnabledAndCheckedInput?firstEnabledAndCheckedInput.focus():(rootNode=rootNode.querySelector("input:not(:disabled)"),null==rootNode?void 0:rootNode.focus())}},[]);var uuid=(0,import_react.useId)();const name=nameProp||`radio-${uuid}`,onChange=(0,import_react.useCallback)(eventOrValue=>{eventOrValue=eventOrValue&&(0,import_shared_utils.isObject)(eventOrValue)&&(0,import_shared_utils.isObject)(eventOrValue.target)?
eventOrValue.target.value:eventOrValue;isControlled||setValue(eventOrValue);null==onChangeProp?void 0:onChangeProp(String(eventOrValue))},[onChangeProp,isControlled]);uuid=(0,import_react.useCallback)((props2={},forwardedRef=null)=>({...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(forwardedRef,ref),role:"radiogroup"}),[]);const getRadioProps=(0,import_react.useCallback)((props2={},ref2=null)=>({...props2,ref:ref2,name,[isNative?"checked":"isChecked"]:null!=value?props2.value===value:void 0,
onChange(event){onChange(event)},"data-radiogroup":!0}),[isNative,name,onChange,value]);return{getRootProps:uuid,getRadioProps,name,ref,focus:props,setValue,value,onChange,isDisabled,isFocusable,htmlProps}}function useRadio(props={}){const {defaultChecked,isChecked:isCheckedProp,isFocusable,isDisabled:isDisabledProp,isReadOnly:isReadOnlyProp,isRequired:isRequiredProp,onChange,isInvalid:isInvalidProp,name,value,id:idProp,"data-radiogroup":dataRadioGroup,"aria-describedby":ariaDescribedBy,...htmlProps}=
props;var uuid=`radio-${(0,import_react3.useId)()}`;props=(0,import_form_control.useFormControlContext)();const group=useRadioGroupContext();let id=!props||group||dataRadioGroup?uuid:props.id;id=null!=idProp?idProp:id;const isDisabled=null!=isDisabledProp?isDisabledProp:null==props?void 0:props.isDisabled,isReadOnly=null!=isReadOnlyProp?isReadOnlyProp:null==props?void 0:props.isReadOnly,isRequired=null!=isRequiredProp?isRequiredProp:null==props?void 0:props.isRequired,isInvalid=null!=isInvalidProp?
isInvalidProp:null==props?void 0:props.isInvalid,[isFocusVisible,setIsFocusVisible]=(0,import_react3.useState)(!1),[isFocused,setFocused]=(0,import_react3.useState)(!1),[isHovered,setHovering]=(0,import_react3.useState)(!1),[isActive,setActive]=(0,import_react3.useState)(!1),[isCheckedState,setChecked]=(0,import_react3.useState)(!!defaultChecked),isControlled="undefined"!==typeof isCheckedProp,isChecked=isControlled?isCheckedProp:isCheckedState;(0,import_react3.useEffect)(()=>(0,import_focus_visible.trackFocusVisible)(setIsFocusVisible),
[]);const handleChange=(0,import_react3.useCallback)(event=>{isReadOnly||isDisabled?event.preventDefault():(isControlled||setChecked(event.target.checked),null==onChange?void 0:onChange(event))},[isControlled,isDisabled,isReadOnly,onChange]),onKeyDown=(0,import_react3.useCallback)(event=>{" "===event.key&&setActive(!0)},[setActive]),onKeyUp=(0,import_react3.useCallback)(event=>{" "===event.key&&setActive(!1)},[setActive]);uuid=(0,import_react3.useCallback)((props2={},ref=null)=>({...props2,ref,"data-active":(0,import_shared_utils3.dataAttr)(isActive),
"data-hover":(0,import_shared_utils3.dataAttr)(isHovered),"data-disabled":(0,import_shared_utils3.dataAttr)(isDisabled),"data-invalid":(0,import_shared_utils3.dataAttr)(isInvalid),"data-checked":(0,import_shared_utils3.dataAttr)(isChecked),"data-focus":(0,import_shared_utils3.dataAttr)(isFocused),"data-focus-visible":(0,import_shared_utils3.dataAttr)(isFocused&&isFocusVisible),"data-readonly":(0,import_shared_utils3.dataAttr)(isReadOnly),"aria-hidden":!0,onMouseDown:(0,import_shared_utils3.callAllHandlers)(props2.onMouseDown,
()=>setActive(!0)),onMouseUp:(0,import_shared_utils3.callAllHandlers)(props2.onMouseUp,()=>setActive(!1)),onMouseEnter:(0,import_shared_utils3.callAllHandlers)(props2.onMouseEnter,()=>setHovering(!0)),onMouseLeave:(0,import_shared_utils3.callAllHandlers)(props2.onMouseLeave,()=>setHovering(!1))}),[isActive,isHovered,isDisabled,isInvalid,isChecked,isFocused,isReadOnly,isFocusVisible]);const {onFocus,onBlur}=null!=props?props:{};props=(0,import_react3.useCallback)((props2={},ref=null)=>{const trulyDisabled=
isDisabled&&!isFocusable;return{...props2,id,ref,type:"radio",name,value,onChange:(0,import_shared_utils3.callAllHandlers)(props2.onChange,handleChange),onBlur:(0,import_shared_utils3.callAllHandlers)(onBlur,props2.onBlur,()=>setFocused(!1)),onFocus:(0,import_shared_utils3.callAllHandlers)(onFocus,props2.onFocus,()=>setFocused(!0)),onKeyDown:(0,import_shared_utils3.callAllHandlers)(props2.onKeyDown,onKeyDown),onKeyUp:(0,import_shared_utils3.callAllHandlers)(props2.onKeyUp,onKeyUp),checked:isChecked,
disabled:trulyDisabled,readOnly:isReadOnly,required:isRequired,"aria-invalid":(0,import_shared_utils3.ariaAttr)(isInvalid),"aria-disabled":(0,import_shared_utils3.ariaAttr)(trulyDisabled),"aria-required":(0,import_shared_utils3.ariaAttr)(isRequired),"data-readonly":(0,import_shared_utils3.dataAttr)(isReadOnly),"aria-describedby":ariaDescribedBy,style:visuallyHiddenStyle}},[isDisabled,isFocusable,id,name,value,handleChange,onBlur,onFocus,onKeyDown,onKeyUp,isChecked,isReadOnly,isRequired,isInvalid,
ariaDescribedBy]);return{state:{isInvalid,isFocused,isChecked,isActive,isHovered,isDisabled,isReadOnly,isRequired},getCheckboxProps:uuid,getInputProps:props,getLabelProps:(props2={},ref=null)=>({...props2,ref,onMouseDown:(0,import_shared_utils3.callAllHandlers)(props2.onMouseDown,stop),onTouchStart:(0,import_shared_utils3.callAllHandlers)(props2.onTouchStart,stop),"data-disabled":(0,import_shared_utils3.dataAttr)(isDisabled),"data-checked":(0,import_shared_utils3.dataAttr)(isChecked),"data-invalid":(0,import_shared_utils3.dataAttr)(isInvalid)}),
getRootProps:(props2,ref=null)=>({...props2,ref,"data-disabled":(0,import_shared_utils3.dataAttr)(isDisabled),"data-checked":(0,import_shared_utils3.dataAttr)(isChecked),"data-invalid":(0,import_shared_utils3.dataAttr)(isInvalid)}),htmlProps}}function stop(event){event.preventDefault();event.stopPropagation()}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,
from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{Radio:()=>Radio,RadioGroup:()=>RadioGroup,useRadio:()=>useRadio,useRadioGroup:()=>useRadioGroup,useRadioGroupContext:()=>useRadioGroupContext});
module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_system2=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils4=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_system=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils2=require("module$node_modules$$chakra_ui$shared_utils$dist$index");module=require("module$node_modules$$chakra_ui$react_context$dist$index");var import_shared_utils=
require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_react_use_merge_refs=require("module$node_modules$$chakra_ui$react_use_merge_refs$dist$index"),import_react=require("module$node_modules$react$index"),import_react2=require("module$node_modules$react$index"),import_jsx_runtime=require("module$node_modules$react$jsx_runtime"),[RadioGroupProvider,useRadioGroupContext]=(0,module.createContext)({name:"RadioGroupContext",strict:!1}),RadioGroup=(0,import_system.forwardRef)((props,
ref)=>{const {colorScheme,size,variant,children,className,isDisabled,isFocusable,...rest}=props,{value,onChange,getRootProps,name,htmlProps}=useRadioGroup(rest);props=(0,import_react2.useMemo)(()=>({name,size,onChange,colorScheme,value,variant,isDisabled,isFocusable}),[name,size,onChange,colorScheme,value,variant,isDisabled,isFocusable]);return(0,import_jsx_runtime.jsx)(RadioGroupProvider,{value:props,children:(0,import_jsx_runtime.jsx)(import_system.chakra.div,{...getRootProps(htmlProps,ref),className:(0,import_shared_utils2.cx)("chakra-radio-group",
className),children})})});RadioGroup.displayName="RadioGroup";var import_form_control=require("module$node_modules$$chakra_ui$form_control$dist$index"),import_shared_utils3=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),visuallyHiddenStyle={border:"0",clip:"rect(0, 0, 0, 0)",height:"1px",width:"1px",margin:"-1px",padding:"0",overflow:"hidden",whiteSpace:"nowrap",position:"absolute"},import_focus_visible=require("module$node_modules$$zag_js$focus_visible$dist$index"),import_react3=
require("module$node_modules$react$index"),import_jsx_runtime2=require("module$node_modules$react$jsx_runtime"),Radio=(0,import_system2.forwardRef)((props,ref)=>{var _a,group=useRadioGroupContext();const {onChange:onChangeProp,value:valueProp}=props,styles=(0,import_system2.useMultiStyleConfig)("Radio",{...group,...props});var ownProps=(0,import_system2.omitThemingProps)(props);const {spacing="0.5rem",children,isDisabled=null==group?void 0:group.isDisabled,isFocusable=null==group?void 0:group.isFocusable,
inputProps:htmlInputProps,...rest}=ownProps;ownProps=props.isChecked;null!=(null==group?void 0:group.value)&&null!=valueProp&&(ownProps=group.value===valueProp);var onChange=onChangeProp;(null==group?0:group.onChange)&&null!=valueProp&&(onChange=(0,import_shared_utils4.callAll)(group.onChange,onChangeProp));props=null!=(_a=null==props?void 0:props.name)?_a:null==group?void 0:group.name;const {getInputProps,getCheckboxProps,getLabelProps,getRootProps,htmlProps}=useRadio({...rest,isChecked:ownProps,
isFocusable,isDisabled,onChange,name:props});_a=import_system2.layoutPropNames;group={};props={};for(const [key,value]of Object.entries(htmlProps))_a.includes(key)?group[key]=value:props[key]=value;const [layoutProps,otherProps]=[group,props];_a=getCheckboxProps(otherProps);ref=getInputProps(htmlInputProps,ref);group=getLabelProps();props=Object.assign({},layoutProps,getRootProps());ownProps={display:"inline-flex",alignItems:"center",justifyContent:"center",flexShrink:0,...styles.control};onChange=
{userSelect:"none",marginStart:spacing,...styles.label};return(0,import_jsx_runtime2.jsxs)(import_system2.chakra.label,{className:"chakra-radio",...props,__css:{display:"inline-flex",alignItems:"center",verticalAlign:"top",cursor:"pointer",position:"relative",...styles.container},children:[(0,import_jsx_runtime2.jsx)("input",{className:"chakra-radio__input",...ref}),(0,import_jsx_runtime2.jsx)(import_system2.chakra.span,{className:"chakra-radio__control",..._a,__css:ownProps}),children&&(0,import_jsx_runtime2.jsx)(import_system2.chakra.span,
{className:"chakra-radio__label",...group,__css:onChange,children})]})});Radio.displayName="Radio"}
//# sourceMappingURL=module$node_modules$$chakra_ui$radio$dist$index.js.map
