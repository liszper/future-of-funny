["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/engine_DOT_io-parser/build/cjs/decodePacket.browser.js"],"~:js","shadow$provide.module$node_modules$engine_DOT_io_parser$build$cjs$decodePacket_browser=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});const commons_js_1=require(\"module$node_modules$engine_DOT_io_parser$build$cjs$commons\"),base64_arraybuffer_js_1=require(\"module$node_modules$engine_DOT_io_parser$build$cjs$contrib$base64_arraybuffer\"),withNativeArrayBuffer=\"function\"===typeof ArrayBuffer,mapBinary=(data,binaryType)=>{switch(binaryType){case \"blob\":return data instanceof\nArrayBuffer?new Blob([data]):data;default:return data}};exports.default=(encodedPacket,binaryType)=>{if(\"string\"!==typeof encodedPacket)return{type:\"message\",data:mapBinary(encodedPacket,binaryType)};const type=encodedPacket.charAt(0);return\"b\"===type?(encodedPacket=encodedPacket.substring(1),withNativeArrayBuffer?(encodedPacket=(0,base64_arraybuffer_js_1.decode)(encodedPacket),binaryType=mapBinary(encodedPacket,binaryType)):binaryType={base64:!0,data:encodedPacket},{type:\"message\",data:binaryType}):\ncommons_js_1.PACKET_TYPES_REVERSE[type]?1<encodedPacket.length?{type:commons_js_1.PACKET_TYPES_REVERSE[type],data:encodedPacket.substring(1)}:{type:commons_js_1.PACKET_TYPES_REVERSE[type]}:commons_js_1.ERROR_PACKET}}","~:source","shadow$provide[\"module$node_modules$engine_DOT_io_parser$build$cjs$decodePacket_browser\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst commons_js_1 = require(\"./commons.js\");\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return commons_js_1.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = (0, base64_arraybuffer_js_1.decode)(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexports.default = decodePacket;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$engine_DOT_io_parser$build$cjs$contrib$base64_arraybuffer","~$shadow.js","~$module$node_modules$engine_DOT_io_parser$build$cjs$commons"]],"~:properties",["^5",["__esModule","base64","value","type","data","default"]],"~:compiled-at",1681642524927,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$engine_DOT_io_parser$build$cjs$decodePacket_browser.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,aAAeN,OAAA,CAAQ,4DAAR,CAArB,CACMO,wBAA0BP,OAAA,CAAQ,+EAAR,CADhC,CAEMQ,sBAA+C,UAA/CA,GAAwB,MAAOC,YAFrC,CAuCMC,UAAY,CAACC,IAAD,CAAOC,UAAP,CAAAF,EAAsB,CACpC,OAAQE,UAAR,EACI,KAAK,MAAL,CACI,MAAOD,KAAA;AAAgBF,WAAhB,CAA8B,IAAII,IAAJ,CAAS,CAACF,IAAD,CAAT,CAA9B,CAAiDA,IAE5D,SACI,MAAOA,KALf,CADoC,CASxCT,QAAQY,CAAAA,OAAR,CA7CqB,CAACC,aAAD,CAAgBH,UAAhB,CAAAI,EAA+B,CAChD,GAA6B,QAA7B,GAAI,MAAOD,cAAX,CACI,MAAO,CACHE,KAAM,SADH,CAEHN,KAAMD,SAAA,CAAUK,aAAV,CAAyBH,UAAzB,CAFH,CAKX,OAAMK,KAAOF,aAAcG,CAAAA,MAAd,CAAqB,CAArB,CACb,OAAa,GAAb,GAAID,IAAJ,EAGiC,aAFtB,CAEsBF,aAAcI,CAAAA,SAAd,CAAwB,CAAxB,CAFtB,CAmBPX,qBAAJ,EACUY,aACN,CADgB,GAAIb,uBAAwBc,CAAAA,MAA5B,EAAoCV,aAApC,CAChB,CAAA,UAAA,CAAOD,SAAA,CAAUU,aAAV,CAnBkDR,UAmBlD,CAFX,EAKI,UALJ,CAKW,CAAEU,OAAQ,CAAA,CAAV,CAAgBX,KAAAA,aAAhB,CAxBA,CAAA,CACHM,KAAM,SADH,CAEHN,KAAM,UAFH,CADX;AAMmBL,YAAaiB,CAAAA,oBAAbC,CAAkCP,IAAlCO,CACnB,CAG8B,CAAvB,CAAAT,aAAcU,CAAAA,MAAd,CACD,CACER,KAAMX,YAAaiB,CAAAA,oBAAb,CAAkCN,IAAlC,CADR,CAEEN,KAAMI,aAAcI,CAAAA,SAAd,CAAwB,CAAxB,CAFR,CADC,CAKD,CACEF,KAAMX,YAAaiB,CAAAA,oBAAb,CAAkCN,IAAlC,CADR,CARN,CACWX,YAAaoB,CAAAA,YAhBwB,CANgF;\",\n\"sources\":[\"node_modules/engine_DOT_io-parser/build/cjs/decodePacket.browser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$engine_DOT_io_parser$build$cjs$decodePacket_browser\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst commons_js_1 = require(\\\"./commons.js\\\");\\nconst base64_arraybuffer_js_1 = require(\\\"./contrib/base64-arraybuffer.js\\\");\\nconst withNativeArrayBuffer = typeof ArrayBuffer === \\\"function\\\";\\nconst decodePacket = (encodedPacket, binaryType) => {\\n    if (typeof encodedPacket !== \\\"string\\\") {\\n        return {\\n            type: \\\"message\\\",\\n            data: mapBinary(encodedPacket, binaryType)\\n        };\\n    }\\n    const type = encodedPacket.charAt(0);\\n    if (type === \\\"b\\\") {\\n        return {\\n            type: \\\"message\\\",\\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\\n        };\\n    }\\n    const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\\n    if (!packetType) {\\n        return commons_js_1.ERROR_PACKET;\\n    }\\n    return encodedPacket.length > 1\\n        ? {\\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\\n            data: encodedPacket.substring(1)\\n        }\\n        : {\\n            type: commons_js_1.PACKET_TYPES_REVERSE[type]\\n        };\\n};\\nconst decodeBase64Packet = (data, binaryType) => {\\n    if (withNativeArrayBuffer) {\\n        const decoded = (0, base64_arraybuffer_js_1.decode)(data);\\n        return mapBinary(decoded, binaryType);\\n    }\\n    else {\\n        return { base64: true, data }; // fallback for old browsers\\n    }\\n};\\nconst mapBinary = (data, binaryType) => {\\n    switch (binaryType) {\\n        case \\\"blob\\\":\\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\\n        case \\\"arraybuffer\\\":\\n        default:\\n            return data; // assuming the data is already an ArrayBuffer\\n    }\\n};\\nexports.default = decodePacket;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"commons_js_1\",\"base64_arraybuffer_js_1\",\"withNativeArrayBuffer\",\"ArrayBuffer\",\"mapBinary\",\"data\",\"binaryType\",\"Blob\",\"default\",\"encodedPacket\",\"decodePacket\",\"type\",\"charAt\",\"substring\",\"decoded\",\"decode\",\"base64\",\"PACKET_TYPES_REVERSE\",\"packetType\",\"length\",\"ERROR_PACKET\"]\n}\n"]