shadow$provide.module$node_modules$$chakra_ui$provider$dist$index=function(global,require,module,exports){var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=
__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{ChakraProvider:()=>ChakraProvider});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_css_reset=require("module$node_modules$$chakra_ui$css_reset$dist$index"),import_portal=require("module$node_modules$$chakra_ui$portal$dist$index"),import_system=require("module$node_modules$$chakra_ui$system$dist$index"),
import_react_env=require("module$node_modules$$chakra_ui$react_env$dist$index"),import_jsx_runtime=require("module$node_modules$react$jsx_runtime"),ChakraProvider=props=>{const {children,colorModeManager,portalZIndex,resetCSS=!0,theme={},environment,cssVarsRoot}=props;props=(0,import_jsx_runtime.jsx)(import_react_env.EnvironmentProvider,{environment,children});return(0,import_jsx_runtime.jsx)(import_system.ThemeProvider,{theme,cssVarsRoot,children:(0,import_jsx_runtime.jsxs)(import_system.ColorModeProvider,
{colorModeManager,options:theme.config,children:[resetCSS?(0,import_jsx_runtime.jsx)(import_css_reset.CSSReset,{}):(0,import_jsx_runtime.jsx)(import_css_reset.CSSPolyfill,{}),(0,import_jsx_runtime.jsx)(import_system.GlobalStyle,{}),portalZIndex?(0,import_jsx_runtime.jsx)(import_portal.PortalManager,{zIndex:portalZIndex,children:props}):props]})})}}
//# sourceMappingURL=module$node_modules$$chakra_ui$provider$dist$index.js.map
