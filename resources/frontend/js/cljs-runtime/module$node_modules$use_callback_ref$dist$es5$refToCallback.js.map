{
"version":3,
"file":"module$node_modules$use_callback_ref$dist$es5$refToCallback.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CASxHC,QAASA,cAAa,CAACC,GAAD,CAAM,CACxB,MAAO,SAAS,CAACC,QAAD,CAAW,CACJ,UAAnB,GAAI,MAAOD,IAAX,CACIA,GAAA,CAAIC,QAAJ,CADJ,CAGSD,GAHT,GAIIA,GAAIE,CAAAA,OAJR,CAIkBD,QAJlB,CADuB,CADH,CAP5BE,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAAEO,MAAO,CAAA,CAAT,CAA7C,CACAP,QAAQQ,CAAAA,gBAAR,CAA2BR,OAAQC,CAAAA,aAAnC,CAAmD,IAAK,EAgBxDD,QAAQC,CAAAA,aAAR,CAAwBA,aACxB,KAAIQ,aAAeA,QAAS,EAAG,CAAE,MAAO,KAAT,CAA/B,CAGIC,QAAU,IAAIC,OA8BlBX,QAAQQ,CAAAA,gBAAR,CAHAA,QAAyB,CAACN,GAAD,CAAM,CAzBvBU,GAAAA,CA0BeV,GA1BfU,EAAiBH,YACrB;IAAII,UAAYH,OAAQI,CAAAA,GAAR,CAAYF,GAAZ,CACZC,UAAJ,CACI,GADJ,CACWA,SADX,EAGIE,SAEJ,CAFSd,aAAA,CAAcW,GAAd,CAET,CADAF,OAAQM,CAAAA,GAAR,CAAYJ,GAAZ,CAAqBG,SAArB,CACA,CAAA,GAAA,CAAOA,SALP,CAwBA,OAAO,IADoB,CAlDyF;",
"sources":["node_modules/use-callback-ref/dist/es5/refToCallback.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$use_callback_ref$dist$es5$refToCallback\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useRefToCallback = exports.refToCallback = void 0;\n/**\n * Unmemoized version of {@link useRefToCallback}\n * @see {@link useRefToCallback}\n * @param ref\n */\nfunction refToCallback(ref) {\n    return function (newValue) {\n        if (typeof ref === 'function') {\n            ref(newValue);\n        }\n        else if (ref) {\n            ref.current = newValue;\n        }\n    };\n}\nexports.refToCallback = refToCallback;\nvar nullCallback = function () { return null; };\n// lets maintain a weak ref to, well, ref :)\n// not using `kashe` to keep this package small\nvar weakMem = new WeakMap();\nvar weakMemoize = function (ref) {\n    var usedRef = ref || nullCallback;\n    var storedRef = weakMem.get(usedRef);\n    if (storedRef) {\n        return storedRef;\n    }\n    var cb = refToCallback(usedRef);\n    weakMem.set(usedRef, cb);\n    return cb;\n};\n/**\n * Transforms a given `ref` into `callback`.\n *\n * To transform `callback` into ref use {@link useCallbackRef|useCallbackRef(undefined, callback)}\n *\n * @param {ReactRef} ref\n * @returns {Function}\n *\n * @see https://github.com/theKashey/use-callback-ref#reftocallback\n *\n * @example\n * const ref = useRef(0);\n * const setRef = useRefToCallback(ref);\n * \ud83d\udc49 setRef(10);\n * \u2705 ref.current === 10\n */\nfunction useRefToCallback(ref) {\n    return weakMemoize(ref);\n}\nexports.useRefToCallback = useRefToCallback;\n\n};"],
"names":["shadow$provide","global","require","module","exports","refToCallback","ref","newValue","current","Object","defineProperty","value","useRefToCallback","nullCallback","weakMem","WeakMap","usedRef","storedRef","get","cb","set"]
}
