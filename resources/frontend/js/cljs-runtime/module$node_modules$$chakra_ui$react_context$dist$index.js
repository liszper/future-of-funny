shadow$provide.module$node_modules$$chakra_ui$react_context$dist$index=function(global,require,module,exports){function createContext(options={}){function useContext(){var _a,context=(0,import_react.useContext)(Context);if(!context&&strict)throw context=Error(null!=errorMessage?errorMessage:`${hookName} returned \`undefined\`. Seems you forgot to wrap component within ${providerName}`),context.name="ContextError",null==(_a=Error.captureStackTrace)?void 0:_a.call(Error,context,useContext),context;
return context}const {name,strict=!0,hookName="useContext",providerName="Provider",errorMessage}=options,Context=(0,import_react.createContext)(void 0);Context.displayName=name;return[Context.Provider,useContext,Context]}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,
key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{createContext:()=>createContext});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_react=require("module$node_modules$react$index")}
//# sourceMappingURL=module$node_modules$$chakra_ui$react_context$dist$index.js.map
