["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/use-callback-ref/dist/es5/assignRef.js"],"~:js","shadow$provide.module$node_modules$use_callback_ref$dist$es5$assignRef=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.assignRef=void 0;exports.assignRef=function(ref,value){\"function\"===typeof ref?ref(value):ref&&(ref.current=value);return ref}}","~:source","shadow$provide[\"module$node_modules$use_callback_ref$dist$es5$assignRef\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignRef = void 0;\n/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nfunction assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\nexports.assignRef = assignRef;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","current","assignRef"]],"~:compiled-at",1681642524881,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$use_callback_ref$dist$es5$assignRef.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,SAAR,CAAoB,IAAK,EAuBzBJ,QAAQI,CAAAA,SAAR,CATAA,QAAkB,CAACC,GAAD,CAAMF,KAAN,CAAa,CACR,UAAnB,GAAI,MAAOE,IAAX,CACIA,GAAA,CAAIF,KAAJ,CADJ,CAGSE,GAHT,GAIIA,GAAIC,CAAAA,OAJR,CAIkBH,KAJlB,CAMA,OAAOE,IAPoB,CAjBqF;\",\n\"sources\":[\"node_modules/use-callback-ref/dist/es5/assignRef.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$use_callback_ref$dist$es5$assignRef\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.assignRef = void 0;\\n/**\\n * Assigns a value for a given ref, no matter of the ref format\\n * @param {RefObject} ref - a callback function or ref object\\n * @param value - a new value\\n *\\n * @see https://github.com/theKashey/use-callback-ref#assignref\\n * @example\\n * const refObject = useRef();\\n * const refFn = (ref) => {....}\\n *\\n * assignRef(refObject, \\\"refValue\\\");\\n * assignRef(refFn, \\\"refValue\\\");\\n */\\nfunction assignRef(ref, value) {\\n    if (typeof ref === 'function') {\\n        ref(value);\\n    }\\n    else if (ref) {\\n        ref.current = value;\\n    }\\n    return ref;\\n}\\nexports.assignRef = assignRef;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"assignRef\",\"ref\",\"current\"]\n}\n"]