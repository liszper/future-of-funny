["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/socket_DOT_io-client/build/cjs/contrib/backo2.js"],"~:js","shadow$provide.module$node_modules$socket_DOT_io_client$build$cjs$contrib$backo2=function(global,require,module,exports){function Backoff(opts){opts=opts||{};this.ms=opts.min||100;this.max=opts.max||1E4;this.factor=opts.factor||2;this.jitter=0<opts.jitter&&1>=opts.jitter?opts.jitter:0;this.attempts=0}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.Backoff=void 0;exports.Backoff=Backoff;Backoff.prototype.duration=function(){var ms=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var rand=\nMath.random(),deviation=Math.floor(rand*this.jitter*ms);ms=0==(Math.floor(10*rand)&1)?ms-deviation:ms+deviation}return Math.min(ms,this.max)|0};Backoff.prototype.reset=function(){this.attempts=0};Backoff.prototype.setMin=function(min){this.ms=min};Backoff.prototype.setMax=function(max){this.max=max};Backoff.prototype.setJitter=function(jitter){this.jitter=jitter}}","~:source","shadow$provide[\"module$node_modules$socket_DOT_io_client$build$cjs$contrib$backo2\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Backoff = void 0;\nfunction Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\nexports.Backoff = Backoff;\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["setMax","factor","__esModule","max","reset","value","ms","attempts","jitter","setJitter","duration","setMin","Backoff"]],"~:compiled-at",1681642524941,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$socket_DOT_io_client$build$cjs$contrib$backo2.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,iEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAe9HC,QAASA,QAAO,CAACC,IAAD,CAAO,CACnBA,IAAA,CAAOA,IAAP,EAAe,EACf,KAAKC,CAAAA,EAAL,CAAUD,IAAKE,CAAAA,GAAf,EAAsB,GACtB,KAAKC,CAAAA,GAAL,CAAWH,IAAKG,CAAAA,GAAhB,EAAuB,GACvB,KAAKC,CAAAA,MAAL,CAAcJ,IAAKI,CAAAA,MAAnB,EAA6B,CAC7B,KAAKC,CAAAA,MAAL,CAA4B,CAAd,CAAAL,IAAKK,CAAAA,MAAL,EAAkC,CAAlC,EAAmBL,IAAKK,CAAAA,MAAxB,CAAsCL,IAAKK,CAAAA,MAA3C,CAAoD,CAClE,KAAKC,CAAAA,QAAL,CAAgB,CANG,CAFvBC,MAAOC,CAAAA,cAAP,CAAsBV,OAAtB,CAA+B,YAA/B,CAA6C,CAAEW,MAAO,CAAA,CAAT,CAA7C,CACAX,QAAQC,CAAAA,OAAR,CAAkB,IAAK,EASvBD,QAAQC,CAAAA,OAAR,CAAkBA,OAOlBA,QAAQW,CAAAA,SAAUC,CAAAA,QAAlB,CAA6BC,QAAS,EAAG,CACrC,IAAIX,GAAK,IAAKA,CAAAA,EAAVA,CAAeY,IAAKC,CAAAA,GAAL,CAAS,IAAKV,CAAAA,MAAd,CAAsB,IAAKE,CAAAA,QAAL,EAAtB,CACnB,IAAI,IAAKD,CAAAA,MAAT,CAAiB,CACb,IAAIU;AAAOF,IAAKG,CAAAA,MAAL,EAAX,CACIC,UAAYJ,IAAKK,CAAAA,KAAL,CAAWH,IAAX,CAAkB,IAAKV,CAAAA,MAAvB,CAAgCJ,EAAhC,CAChBA,GAAA,CAAoC,CAA/B,GAACY,IAAKK,CAAAA,KAAL,CAAkB,EAAlB,CAAWH,IAAX,CAAD,CAAyB,CAAzB,EAAmCd,EAAnC,CAAwCgB,SAAxC,CAAoDhB,EAApD,CAAyDgB,SAHjD,CAKjB,MAAOJ,KAAKX,CAAAA,GAAL,CAASD,EAAT,CAAa,IAAKE,CAAAA,GAAlB,CAAP,CAAgC,CAPK,CAczCJ,QAAQW,CAAAA,SAAUS,CAAAA,KAAlB,CAA0BC,QAAS,EAAG,CAClC,IAAKd,CAAAA,QAAL,CAAgB,CADkB,CAQtCP,QAAQW,CAAAA,SAAUW,CAAAA,MAAlB,CAA2BC,QAAS,CAACpB,GAAD,CAAM,CACtC,IAAKD,CAAAA,EAAL,CAAUC,GAD4B,CAQ1CH,QAAQW,CAAAA,SAAUa,CAAAA,MAAlB,CAA2BC,QAAS,CAACrB,GAAD,CAAM,CACtC,IAAKA,CAAAA,GAAL,CAAWA,GAD2B,CAQ1CJ,QAAQW,CAAAA,SAAUe,CAAAA,SAAlB,CAA8BC,QAAS,CAACrB,MAAD,CAAS,CAC5C,IAAKA,CAAAA,MAAL,CAAcA,MAD8B,CApE8E;\",\n\"sources\":[\"node_modules/socket_DOT_io-client/build/cjs/contrib/backo2.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$socket_DOT_io_client$build$cjs$contrib$backo2\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n/**\\n * Initialize backoff timer with `opts`.\\n *\\n * - `min` initial timeout in milliseconds [100]\\n * - `max` max timeout [10000]\\n * - `jitter` [0]\\n * - `factor` [2]\\n *\\n * @param {Object} opts\\n * @api public\\n */\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.Backoff = void 0;\\nfunction Backoff(opts) {\\n    opts = opts || {};\\n    this.ms = opts.min || 100;\\n    this.max = opts.max || 10000;\\n    this.factor = opts.factor || 2;\\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\\n    this.attempts = 0;\\n}\\nexports.Backoff = Backoff;\\n/**\\n * Return the backoff duration.\\n *\\n * @return {Number}\\n * @api public\\n */\\nBackoff.prototype.duration = function () {\\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\\n    if (this.jitter) {\\n        var rand = Math.random();\\n        var deviation = Math.floor(rand * this.jitter * ms);\\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\\n    }\\n    return Math.min(ms, this.max) | 0;\\n};\\n/**\\n * Reset the number of attempts.\\n *\\n * @api public\\n */\\nBackoff.prototype.reset = function () {\\n    this.attempts = 0;\\n};\\n/**\\n * Set the minimum duration\\n *\\n * @api public\\n */\\nBackoff.prototype.setMin = function (min) {\\n    this.ms = min;\\n};\\n/**\\n * Set the maximum duration\\n *\\n * @api public\\n */\\nBackoff.prototype.setMax = function (max) {\\n    this.max = max;\\n};\\n/**\\n * Set the jitter\\n *\\n * @api public\\n */\\nBackoff.prototype.setJitter = function (jitter) {\\n    this.jitter = jitter;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Backoff\",\"opts\",\"ms\",\"min\",\"max\",\"factor\",\"jitter\",\"attempts\",\"Object\",\"defineProperty\",\"value\",\"prototype\",\"duration\",\"Backoff.prototype.duration\",\"Math\",\"pow\",\"rand\",\"random\",\"deviation\",\"floor\",\"reset\",\"Backoff.prototype.reset\",\"setMin\",\"Backoff.prototype.setMin\",\"setMax\",\"Backoff.prototype.setMax\",\"setJitter\",\"Backoff.prototype.setJitter\"]\n}\n"]