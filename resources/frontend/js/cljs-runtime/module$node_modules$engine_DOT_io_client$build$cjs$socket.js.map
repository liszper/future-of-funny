{
"version":3,
"file":"module$node_modules$engine_DOT_io_client$build$cjs$socket.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAElHC,MAAAA,CAAmB,IAAnBA,EAA2B,IAAKA,CAAAA,eAAhCA,EAAoD,QAAS,CAACC,GAAD,CAAM,CACnE,MAAQA,IAAD,EAAQA,GAAIC,CAAAA,UAAZ,CAA0BD,GAA1B,CAAgC,CAAE,UAAWA,GAAb,CAD4B,CAGvEE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAAEM,MAAO,CAAA,CAAT,CAA7C,CACAN,QAAQO,CAAAA,MAAR,CAAiB,IAAK,EACtB,OAAMC,WAAaV,OAAA,CAAQ,qEAAR,CAAnB,CACMW,UAAYX,OAAA,CAAQ,yDAAR,CADlB,CAEMY,aAAeZ,OAAA,CAAQ,oEAAR,CAFrB;AAGMa,cAAgBb,OAAA,CAAQ,qEAAR,CAChBc,OAAAA,CAAUX,MAAA,CAAgBH,OAAA,CAAQ,yEAAR,CAAhB,CACVe,OAAAA,CAAsBf,OAAA,CAAQ,4DAAR,CAC5B,OAAMgB,mBAAqBhB,OAAA,CAAQ,0DAAR,CAA3B,CACMiB,MAAQ,GAAIH,MAAQI,CAAAA,OAAZ,EAAqB,yBAArB,CACd,MAAMT,OAAN,QAAqBM,OAAoBI,CAAAA,OAAzC,CAQIC,WAAW,CAACC,GAAD,CAAMC,IAAA,CAAO,EAAb,CAAiB,CACxB,KAAA,EACID,IAAJ,EAAW,QAAX,GAAwB,MAAOA,IAA/B;CACIC,IACA,CADOD,GACP,CAAAA,GAAA,CAAM,IAFV,CAIIA,IAAJ,EACIA,GAIA,CAJM,GAAIR,aAAcU,CAAAA,KAAlB,EAAyBF,GAAzB,CAIN,CAHAC,IAAKE,CAAAA,QAGL,CAHgBH,GAAII,CAAAA,IAGpB,CAFAH,IAAKI,CAAAA,MAEL,CAF+B,OAE/B,GAFcL,GAAIM,CAAAA,QAElB,EAF2D,KAE3D,GAF0CN,GAAIM,CAAAA,QAE9C,CADAL,IAAKM,CAAAA,IACL,CADYP,GAAIO,CAAAA,IAChB,CAAIP,GAAIQ,CAAAA,KAAR,GACIP,IAAKO,CAAAA,KADT,CACiBR,GAAIQ,CAAAA,KADrB,CALJ,EAQSP,IAAKG,CAAAA,IARd,GASIH,IAAKE,CAAAA,QATT,CASoB,GAAIX,aAAcU,CAAAA,KAAlB,EAAyBD,IAAKG,CAAAA,IAA9B,CAAoCA,CAAAA,IATxD,CAWA,IAAId,SAAUmB,CAAAA,qBAAd,EAAqC,IAArC,CAA2CR,IAA3C,CACA,KAAKI,CAAAA,MAAL,CACI,IAAA,EAAQJ,IAAKI,CAAAA,MAAb,CACMJ,IAAKI,CAAAA,MADX,CAE0B,WAF1B,GAEM,MAAOK,SAFb,EAEyC,QAFzC,GAEsDA,QAASJ,CAAAA,QAC/DL,KAAKE,CAAAA,QAAT,EAAqB,CAACF,IAAKM,CAAAA,IAA3B,GAEIN,IAAKM,CAAAA,IAFT,CAEgB,IAAKF,CAAAA,MAAL,CAAc,KAAd,CAAsB,IAFtC,CAIA,KAAKF,CAAAA,QAAL,CACIF,IAAKE,CAAAA,QADT,GAE6B,WAApB;AAAA,MAAOO,SAAP,CAAkCA,QAASP,CAAAA,QAA3C,CAAsD,WAF/D,CAGA,KAAKI,CAAAA,IAAL,CACIN,IAAKM,CAAAA,IADT,GAE6B,WAApB,GAAA,MAAOG,SAAP,EAAmCA,QAASH,CAAAA,IAA5C,CACKG,QAASH,CAAAA,IADd,CAEK,IAAKF,CAAAA,MAAL,CACI,KADJ,CAEI,IANlB,CAOA,KAAKM,CAAAA,UAAL,CAAkBV,IAAKU,CAAAA,UAAvB,EAAqC,CAAC,SAAD,CAAY,WAAZ,CACrC,KAAKC,CAAAA,UAAL,CAAkB,EAClB,KAAKC,CAAAA,WAAL,CAAmB,EACnB,KAAKC,CAAAA,aAAL,CAAqB,CACrB,KAAKb,CAAAA,IAAL,CAAYhB,MAAO8B,CAAAA,MAAP,CAAc,CACtBC,KAAM,YADgB,CAEtBC,MAAO,CAAA,CAFe,CAGtBC,gBAAiB,CAAA,CAHK,CAItBC,QAAS,CAAA,CAJa,CAKtBC,eAAgB,GALM,CAMtBC,gBAAiB,CAAA,CANK,CAOtBC,mBAAoB,CAAA,CAPE,CAQtBC,kBAAmB,CACfC,UAAW,IADI,CARG,CAWtBC,iBAAkB,EAXI,CAYtBC,oBAAqB,CAAA,CAZC,CAAd,CAaTzB,IAbS,CAcZ,KAAKA,CAAAA,IAAKe,CAAAA,IAAV;AAAiB,IAAKf,CAAAA,IAAKe,CAAAA,IAAKW,CAAAA,OAAf,CAAuB,KAAvB,CAA8B,EAA9B,CAAjB,CAAqD,GACtB,SAA/B,GAAI,MAAO,KAAK1B,CAAAA,IAAKO,CAAAA,KAArB,GACI,IAAKP,CAAAA,IAAKO,CAAAA,KADd,CACsB,GAAIjB,YAAaqC,CAAAA,MAAjB,EAAyB,IAAK3B,CAAAA,IAAKO,CAAAA,KAAnC,CADtB,CASA,KAAKqB,CAAAA,gBAAL,CAFA,IAAKC,CAAAA,WAEL,CAHA,IAAKC,CAAAA,YAGL,CAJA,IAAKC,CAAAA,QAIL,CALA,IAAKC,CAAAA,EAKL,CALU,IAMsB,WAAhC,GAAI,MAAOC,iBAAX,GACQ,IAAKjC,CAAAA,IAAKyB,CAAAA,mBAad,GATI,IAAKS,CAAAA,yBAOL,CAPiC,EAAAC,EAAM,CAC/B,IAAKC,CAAAA,SAAT,GAEI,IAAKA,CAAAA,SAAUC,CAAAA,kBAAf,EACA,CAAA,IAAKD,CAAAA,SAAUE,CAAAA,KAAf,EAHJ,CADmC,CAOvC,CAAAL,gBAAA,CAAiB,cAAjB,CAAiC,IAAKC,CAAAA,yBAAtC,CAAiE,CAAA,CAAjE,CAEJ,EAAsB,WAAtB,GAAI,IAAKhC,CAAAA,QAAT,GACI,IAAKqC,CAAAA,oBAKL;AAL4B,EAAAC,EAAM,CAC9B,IAAKC,CAAAA,OAAL,CAAa,iBAAb,CAAgC,CAC5BC,YAAa,yBADe,CAAhC,CAD8B,CAKlC,CAAAT,gBAAA,CAAiB,SAAjB,CAA4B,IAAKM,CAAAA,oBAAjC,CAAuD,CAAA,CAAvD,CANJ,CAdJ,CAuBA,KAAKI,CAAAA,IAAL,EAxFwB,CAiG5BC,eAAe,CAACC,IAAD,CAAO,CAClBlD,KAAA,CAAM,yBAAN,CAAiCkD,IAAjC,CACA,KAAMtC,MAAQvB,MAAO8B,CAAAA,MAAP,CAAc,EAAd,CAAkB,IAAKd,CAAAA,IAAKO,CAAAA,KAA5B,CAEdA,MAAMuC,CAAAA,GAAN,CAAYpD,kBAAmBW,CAAAA,QAE/BE,MAAM6B,CAAAA,SAAN,CAAkBS,IAEd,KAAKb,CAAAA,EAAT,GACIzB,KAAMwC,CAAAA,GADV,CACgB,IAAKf,CAAAA,EADrB,CAEMhC,MAAAA,CAAOhB,MAAO8B,CAAAA,MAAP,CAAc,EAAd,CAAkB,IAAKd,CAAAA,IAAKwB,CAAAA,gBAAV,CAA2BqB,IAA3B,CAAlB,CAAoD,IAAK7C,CAAAA,IAAzD,CAA+D,CACxEO,KADwE,CAExEyC,OAAQ,IAFgE,CAGxE9C,SAAU,IAAKA,CAAAA,QAHyD,CAIxEE,OAAQ,IAAKA,CAAAA,MAJ2D,CAKxEE,KAAM,IAAKA,CAAAA,IAL6D,CAA/D,CAObX,MAAA,CAAM,aAAN;AAAqBK,KAArB,CACA,OAAO,KAAIZ,UAAWsB,CAAAA,UAAX,CAAsBmC,IAAtB,CAAJ,CAAgC7C,KAAhC,CAlBW,CAyBtB2C,IAAI,EAAG,CACH,IAAIP,SACJ,IAAI,IAAKpC,CAAAA,IAAKoB,CAAAA,eAAd,EACIjC,MAAO8D,CAAAA,qBADX,EAE6C,CAAC,CAF9C,GAEI,IAAKvC,CAAAA,UAAWwC,CAAAA,OAAhB,CAAwB,WAAxB,CAFJ,CAGId,SAAA,CAAY,WAHhB,KAKK,CAAA,GAAI,CAAJ,GAAU,IAAK1B,CAAAA,UAAWyC,CAAAA,MAA1B,CAAkC,CAEnC,IAAKC,CAAAA,YAAL,CAAkB,EAAA,EAAM,CACpB,IAAKC,CAAAA,YAAL,CAAkB,OAAlB,CAA2B,yBAA3B,CADoB,CAAxB,CAEG,CAFH,CAGA,OALmC,CAQnCjB,SAAA,CAAY,IAAK1B,CAAAA,UAAL,CAAgB,CAAhB,CARX,CAUL,IAAKC,CAAAA,UAAL,CAAkB,SAElB,IAAI,CACAyB,SAAA,CAAY,IAAKQ,CAAAA,eAAL,CAAqBR,SAArB,CADZ,CAGJ,MAAOkB,CAAP,CAAU,CACN3D,KAAA,CAAM,oCAAN,CAA4C2D,CAA5C,CACA,KAAK5C,CAAAA,UAAW6C,CAAAA,KAAhB,EACA;IAAKZ,CAAAA,IAAL,EACA,OAJM,CAMVP,SAAUO,CAAAA,IAAV,EACA,KAAKa,CAAAA,YAAL,CAAkBpB,SAAlB,CA7BG,CAoCPoB,YAAY,CAACpB,SAAD,CAAY,CACpBzC,KAAA,CAAM,sBAAN,CAA8ByC,SAAUS,CAAAA,IAAxC,CACI,KAAKT,CAAAA,SAAT,GACIzC,KAAA,CAAM,gCAAN,CAAwC,IAAKyC,CAAAA,SAAUS,CAAAA,IAAvD,CACA,CAAA,IAAKT,CAAAA,SAAUC,CAAAA,kBAAf,EAFJ,CAKA,KAAKD,CAAAA,SAAL,CAAiBA,SAEjBA,UACKqB,CAAAA,EADL,CACQ,OADR,CACiB,IAAKC,CAAAA,OAAQC,CAAAA,IAAb,CAAkB,IAAlB,CADjB,CAEKF,CAAAA,EAFL,CAEQ,QAFR,CAEkB,IAAKG,CAAAA,QAASD,CAAAA,IAAd,CAAmB,IAAnB,CAFlB,CAGKF,CAAAA,EAHL,CAGQ,OAHR,CAGiB,IAAKI,CAAAA,OAAQF,CAAAA,IAAb,CAAkB,IAAlB,CAHjB,CAIKF,CAAAA,EAJL,CAIQ,OAJR,CAIiBK,MAAA,EAAU,IAAKrB,CAAAA,OAAL,CAAa,iBAAb,CAAgCqB,MAAhC,CAJ3B,CAToB,CAqBxBC,KAAK,CAAClB,IAAD,CAAO,CA6CRmB,QAASA,gBAAe,EAAG,CACnBC,MAAJ,GAGAA,MAGA;AAHS,CAAA,CAGT,CAFAC,OAAA,EAEA,CADA9B,SAAUE,CAAAA,KAAV,EACA,CAAAF,SAAA,CAAY,IANZ,CADuB,CAkB3B+B,QAASA,iBAAgB,EAAG,CACxBC,OAAA,CAAQ,kBAAR,CADwB,CAI5BC,QAASA,QAAO,EAAG,CACfD,OAAA,CAAQ,eAAR,CADe,CAInBE,QAASA,UAAS,CAACC,EAAD,CAAK,CACfnC,SAAJ,EAAiBmC,EAAG1B,CAAAA,IAApB,GAA6BT,SAAUS,CAAAA,IAAvC,GACIlD,KAAA,CAAM,4BAAN,CAAoC4E,EAAG1B,CAAAA,IAAvC,CAA6CT,SAAUS,CAAAA,IAAvD,CACA,CAAAmB,eAAA,EAFJ,CADmB,CAtEvBrE,KAAA,CAAM,wBAAN,CAAgCkD,IAAhC,CACA,KAAIT,UAAY,IAAKQ,CAAAA,eAAL,CAAqBC,IAArB,CAAhB,CACIoB,OAAS,CAAA,CACb9E,OAAO8D,CAAAA,qBAAP,CAA+B,CAAA,CAC/B,OAAMuB,gBAAkB,EAAAA,EAAM,CACtBP,MAAJ,GAEAtE,KAAA,CAAM,6BAAN,CAAqCkD,IAArC,CAEA,CADAT,SAAUqC,CAAAA,IAAV,CAAe,CAAC,CAAEC,KAAM,MAAR;AAAgBC,KAAM,OAAtB,CAAD,CAAf,CACA,CAAAvC,SAAUwC,CAAAA,IAAV,CAAe,QAAf,CAAyBC,GAAA,EAAO,CACxBZ,MAAJ,GAEI,MAAJ,GAAeY,GAAIH,CAAAA,IAAnB,EAA2B,OAA3B,GAAuCG,GAAIF,CAAAA,IAA3C,EACIhF,KAAA,CAAM,2BAAN,CAAmCkD,IAAnC,CAGA,CAFA,IAAKiC,CAAAA,SAEL,CAFiB,CAAA,CAEjB,CADA,IAAKzB,CAAAA,YAAL,CAAkB,WAAlB,CAA+BjB,SAA/B,CACA,CAAKA,SAAL,GAEAjD,MAAO8D,CAAAA,qBAEP,CAF+B,WAE/B,GAF+Cb,SAAUS,CAAAA,IAEzD,CADAlD,KAAA,CAAM,gCAAN,CAAwC,IAAKyC,CAAAA,SAAUS,CAAAA,IAAvD,CACA,CAAA,IAAKT,CAAAA,SAAU2C,CAAAA,KAAf,CAAqB,EAAA,EAAM,CACnBd,MAAJ,EAEI,QAFJ,GAEiB,IAAKtD,CAAAA,UAFtB,GAIAhB,KAAA,CAAM,+CAAN,CAOA,CANAuE,OAAA,EAMA,CALA,IAAKV,CAAAA,YAAL,CAAkBpB,SAAlB,CAKA,CAJAA,SAAUqC,CAAAA,IAAV,CAAe,CAAC,CAAEC,KAAM,SAAR,CAAD,CAAf,CAIA;AAHA,IAAKrB,CAAAA,YAAL,CAAkB,SAAlB,CAA6BjB,SAA7B,CAGA,CAFAA,SAEA,CAFY,IAEZ,CADA,IAAK0C,CAAAA,SACL,CADiB,CAAA,CACjB,CAAA,IAAKE,CAAAA,KAAL,EAXA,CADuB,CAA3B,CAJA,CAJJ,GAwBIrF,KAAA,CAAM,6BAAN,CAAqCkD,IAArC,CAIA,CAHMoC,GAGN,CAHgBC,KAAJ,CAAU,aAAV,CAGZ,CADAD,GAAI7C,CAAAA,SACJ,CADgBA,SAAUS,CAAAA,IAC1B,CAAA,IAAKQ,CAAAA,YAAL,CAAkB,cAAlB,CAAkC4B,GAAlC,CA5BJ,CAFA,CAD4B,CAAhC,CAJA,CAD0B,CAA9B,CAkDMb,QAAUa,GAAAb,EAAO,CACnB,MAAMe,MAAYD,KAAJ,CAAU,eAAV,CAA4BD,GAA5B,CAEdE,MAAM/C,CAAAA,SAAN,CAAkBA,SAAUS,CAAAA,IAC5BmB,gBAAA,EACArE,MAAA,CAAM,kDAAN,CAA0DkD,IAA1D,CAAgEoC,GAAhE,CACA,KAAK5B,CAAAA,YAAL,CAAkB,cAAlB,CAAkC8B,KAAlC,CANmB,CAlDvB,CAyEMjB,QAAU,EAAAA,EAAM,CAClB9B,SAAUgD,CAAAA,cAAV,CAAyB,MAAzB,CAAiCZ,eAAjC,CACApC;SAAUgD,CAAAA,cAAV,CAAyB,OAAzB,CAAkChB,OAAlC,CACAhC,UAAUgD,CAAAA,cAAV,CAAyB,OAAzB,CAAkCjB,gBAAlC,CACA,KAAKkB,CAAAA,GAAL,CAAS,OAAT,CAAkBhB,OAAlB,CACA,KAAKgB,CAAAA,GAAL,CAAS,WAAT,CAAsBf,SAAtB,CALkB,CAOtBlC,UAAUwC,CAAAA,IAAV,CAAe,MAAf,CAAuBJ,eAAvB,CACApC,UAAUwC,CAAAA,IAAV,CAAe,OAAf,CAAwBR,OAAxB,CACAhC,UAAUwC,CAAAA,IAAV,CAAe,OAAf,CAAwBT,gBAAxB,CACA,KAAKS,CAAAA,IAAL,CAAU,OAAV,CAAmBP,OAAnB,CACA,KAAKO,CAAAA,IAAL,CAAU,WAAV,CAAuBN,SAAvB,CACAlC,UAAUO,CAAAA,IAAV,EA1FQ,CAiGZ2C,MAAM,EAAG,CACL3F,KAAA,CAAM,aAAN,CACA,KAAKgB,CAAAA,UAAL,CAAkB,MAClBxB,OAAO8D,CAAAA,qBAAP,CAA+B,WAA/B,GAA+C,IAAKb,CAAAA,SAAUS,CAAAA,IAC9D,KAAKQ,CAAAA,YAAL,CAAkB,MAAlB,CACA,KAAK2B,CAAAA,KAAL,EAGA,IAAI,MAAJ;AAAe,IAAKrE,CAAAA,UAApB,EACI,IAAKX,CAAAA,IAAKkB,CAAAA,OADd,EAEI,IAAKkB,CAAAA,SAAU2C,CAAAA,KAFnB,CAE0B,CACtBpF,KAAA,CAAM,yBAAN,CACA,KAAI4F,EAAI,CACR,OAAMC,EAAI,IAAKzD,CAAAA,QAASoB,CAAAA,MACxB,KAAA,CAAOoC,CAAP,CAAWC,CAAX,CAAcD,CAAA,EAAd,CACI,IAAKxB,CAAAA,KAAL,CAAW,IAAKhC,CAAAA,QAAL,CAAcwD,CAAd,CAAX,CALkB,CAVrB,CAwBT3B,QAAQ,CAAC6B,MAAD,CAAS,CACb,GAAI,SAAJ,GAAkB,IAAK9E,CAAAA,UAAvB,EACI,MADJ,GACe,IAAKA,CAAAA,UADpB,EAEI,SAFJ,GAEkB,IAAKA,CAAAA,UAFvB,CAOI,OAJAhB,KAAA,CAAM,sCAAN,CAA8C8F,MAAOf,CAAAA,IAArD,CAA2De,MAAOd,CAAAA,IAAlE,CAIeD,CAHf,IAAKrB,CAAAA,YAAL,CAAkB,QAAlB,CAA4BoC,MAA5B,CAGef,CADf,IAAKrB,CAAAA,YAAL,CAAkB,WAAlB,CACeqB,CAAPe,MAAOf,CAAAA,IAAf,EACI,KAAK,MAAL,CACI,IAAKgB,CAAAA,WAAL,CAAiBC,IAAK1F,CAAAA,KAAL,CAAWwF,MAAOd,CAAAA,IAAlB,CAAjB,CACA,MACJ,MAAK,MAAL,CACI,IAAKiB,CAAAA,gBAAL,EACA;IAAKC,CAAAA,UAAL,CAAgB,MAAhB,CACA,KAAKxC,CAAAA,YAAL,CAAkB,MAAlB,CACA,KAAKA,CAAAA,YAAL,CAAkB,MAAlB,CACA,MACJ,MAAK,OAAL,CACI,MAAM4B,IAAUC,KAAJ,CAAU,cAAV,CAEZD,IAAIa,CAAAA,IAAJ,CAAWL,MAAOd,CAAAA,IAClB,KAAKd,CAAAA,OAAL,CAAaoB,GAAb,CACA,MACJ,MAAK,SAAL,CACI,IAAK5B,CAAAA,YAAL,CAAkB,MAAlB,CAA0BoC,MAAOd,CAAAA,IAAjC,CACA,CAAA,IAAKtB,CAAAA,YAAL,CAAkB,SAAlB,CAA6BoC,MAAOd,CAAAA,IAApC,CAlBR,CAPJ,IA8BIhF,MAAA,CAAM,6CAAN,CAAqD,IAAKgB,CAAAA,UAA1D,CA/BS,CAwCjB+E,WAAW,CAACf,IAAD,CAAO,CACd,IAAKtB,CAAAA,YAAL,CAAkB,WAAlB,CAA+BsB,IAA/B,CACA,KAAK3C,CAAAA,EAAL,CAAU2C,IAAK5B,CAAAA,GACf,KAAKX,CAAAA,SAAU7B,CAAAA,KAAMwC,CAAAA,GAArB,CAA2B4B,IAAK5B,CAAAA,GAChC,KAAKhB,CAAAA,QAAL,CAAgB,IAAKgE,CAAAA,cAAL,CAAoBpB,IAAK5C,CAAAA,QAAzB,CAChB,KAAKD,CAAAA,YAAL;AAAoB6C,IAAK7C,CAAAA,YACzB,KAAKD,CAAAA,WAAL,CAAmB8C,IAAK9C,CAAAA,WACxB,KAAKmE,CAAAA,UAAL,CAAkBrB,IAAKqB,CAAAA,UACvB,KAAKV,CAAAA,MAAL,EAEI,SAAJ,GAAiB,IAAK3E,CAAAA,UAAtB,EAEA,IAAKiF,CAAAA,gBAAL,EAZc,CAmBlBA,gBAAgB,EAAG,CACf,IAAKK,CAAAA,cAAL,CAAoB,IAAKrE,CAAAA,gBAAzB,CACA,KAAKA,CAAAA,gBAAL,CAAwB,IAAKwB,CAAAA,YAAL,CAAkB,EAAA,EAAM,CAC5C,IAAKX,CAAAA,OAAL,CAAa,cAAb,CAD4C,CAAxB,CAErB,IAAKX,CAAAA,YAFgB,CAED,IAAKD,CAAAA,WAFJ,CAGpB,KAAK7B,CAAAA,IAAKkG,CAAAA,SAAd,EACI,IAAKtE,CAAAA,gBAAiBuE,CAAAA,KAAtB,EANW,CAcnBzC,OAAO,EAAG,CACN,IAAK9C,CAAAA,WAAYwF,CAAAA,MAAjB,CAAwB,CAAxB,CAA2B,IAAKvF,CAAAA,aAAhC,CAIA,KAAKA,CAAAA,aAAL,CAAqB,CACjB,EAAJ,GAAU,IAAKD,CAAAA,WAAYuC,CAAAA,MAA3B,CACI,IAAKE,CAAAA,YAAL,CAAkB,OAAlB,CADJ;AAII,IAAK2B,CAAAA,KAAL,EAVE,CAkBVA,KAAK,EAAG,CACJ,GAAI,QAAJ,GAAiB,IAAKrE,CAAAA,UAAtB,EACI,IAAKyB,CAAAA,SAAUiE,CAAAA,QADnB,EAEI,CAAC,IAAKvB,CAAAA,SAFV,EAGI,IAAKlE,CAAAA,WAAYuC,CAAAA,MAHrB,CAG6B,CACzB,MAAMmD,QAAU,IAAKC,CAAAA,kBAAL,EAChB5G,MAAA,CAAM,+BAAN,CAAuC2G,OAAQnD,CAAAA,MAA/C,CACA,KAAKf,CAAAA,SAAUqC,CAAAA,IAAf,CAAoB6B,OAApB,CAGA,KAAKzF,CAAAA,aAAL,CAAqByF,OAAQnD,CAAAA,MAC7B,KAAKE,CAAAA,YAAL,CAAkB,OAAlB,CAPyB,CAJzB,CAoBRkD,kBAAkB,EAAG,CAIjB,GAAI,EAH2B,IAAKP,CAAAA,UAGhC,EAFwB,SAExB,GAFA,IAAK5D,CAAAA,SAAUS,CAAAA,IAEf,EAD0B,CAC1B,CADA,IAAKjC,CAAAA,WAAYuC,CAAAA,MACjB,CAAJ,CACI,MAAO,KAAKvC,CAAAA,WAEhB,KAAI4F,YAAc,CAClB,KAAK,IAAIjB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAK3E,CAAAA,WAAYuC,CAAAA,MAArC,CAA6CoC,CAAA,EAA7C,CAAkD,CAC9C,MAAMZ;AAAO,IAAK/D,CAAAA,WAAL,CAAiB2E,CAAjB,CAAoBZ,CAAAA,IAC7BA,KAAJ,GACI6B,WADJ,EACmB,GAAInH,SAAUoH,CAAAA,UAAd,EAA0B9B,IAA1B,CADnB,CAGA,IAAQ,CAAR,CAAIY,CAAJ,EAAaiB,WAAb,CAA2B,IAAKR,CAAAA,UAAhC,CAEI,MADArG,MAAA,CAAM,gCAAN,CAAwC4F,CAAxC,CAA2C,IAAK3E,CAAAA,WAAYuC,CAAAA,MAA5D,CACO,CAAA,IAAKvC,CAAAA,WAAY8F,CAAAA,KAAjB,CAAuB,CAAvB,CAA0BnB,CAA1B,CAEXiB,YAAA,EAAe,CAT+B,CAWlD7G,KAAA,CAAM,8BAAN,CAAsC6G,WAAtC,CAAmD,IAAKR,CAAAA,UAAxD,CACA,OAAO,KAAKpF,CAAAA,WApBK,CA+BrB+F,KAAK,CAAC9B,GAAD,CAAM+B,OAAN,CAAeC,EAAf,CAAmB,CACpB,IAAKhB,CAAAA,UAAL,CAAgB,SAAhB,CAA2BhB,GAA3B,CAAgC+B,OAAhC,CAAyCC,EAAzC,CACA,OAAO,KAFa,CAIxBpC,IAAI,CAACI,GAAD,CAAM+B,OAAN,CAAeC,EAAf,CAAmB,CACnB,IAAKhB,CAAAA,UAAL,CAAgB,SAAhB,CAA2BhB,GAA3B,CAAgC+B,OAAhC,CAAyCC,EAAzC,CACA,OAAO,KAFY,CAavBhB,UAAU,CAACnB,IAAD,CAAOC,IAAP,CAAaiC,OAAb,CAAsBC,EAAtB,CAA0B,CAC5B,UAAJ;AAAmB,MAAOlC,KAA1B,GACIkC,EACA,CADKlC,IACL,CAAAA,IAAA,CAAOmC,IAAAA,EAFX,CAII,WAAJ,GAAmB,MAAOF,QAA1B,GACIC,EACA,CADKD,OACL,CAAAA,OAAA,CAAU,IAFd,CAIA,IAAI,SAAJ,GAAkB,IAAKjG,CAAAA,UAAvB,EAAqC,QAArC,GAAkD,IAAKA,CAAAA,UAAvD,CAAA,CAGAiG,OAAA,CAAUA,OAAV,EAAqB,EACrBA,QAAQG,CAAAA,QAAR,CAAmB,CAAA,CAAnB,GAA6BH,OAAQG,CAAAA,QAC/BtB,KAAAA,CAAS,CACLf,IADK,CAELC,IAFK,CAGFiC,OAHE,CAKf,KAAKvD,CAAAA,YAAL,CAAkB,cAAlB,CAAkCoC,IAAlC,CACA,KAAK7E,CAAAA,WAAYoG,CAAAA,IAAjB,CAAsBvB,IAAtB,CACA,IAAIoB,EAAJ,CACI,IAAKjC,CAAAA,IAAL,CAAU,OAAV,CAAmBiC,EAAnB,CACJ,KAAK7B,CAAAA,KAAL,EAdA,CATgC,CA8BpC1C,KAAK,EAAG,CACJ,MAAMA,MAAQ,EAAAA,EAAM,CAChB,IAAKG,CAAAA,OAAL,CAAa,cAAb,CACA9C,MAAA,CAAM,6CAAN,CACA,KAAKyC,CAAAA,SAAUE,CAAAA,KAAf,EAHgB,CAApB,CAKM2E,gBAAkB,EAAAA,EAAM,CAC1B,IAAK5B,CAAAA,GAAL,CAAS,SAAT;AAAoB4B,eAApB,CACA,KAAK5B,CAAAA,GAAL,CAAS,cAAT,CAAyB4B,eAAzB,CACA3E,MAAA,EAH0B,CAL9B,CAUM4E,eAAiB,EAAAA,EAAM,CAEzB,IAAKtC,CAAAA,IAAL,CAAU,SAAV,CAAqBqC,eAArB,CACA,KAAKrC,CAAAA,IAAL,CAAU,cAAV,CAA0BqC,eAA1B,CAHyB,CAK7B,IAAI,SAAJ,GAAkB,IAAKtG,CAAAA,UAAvB,EAAqC,MAArC,GAAgD,IAAKA,CAAAA,UAArD,CAEI,GADA,IAAKA,CAAAA,UACgBwC,CADH,SACGA,CAAjB,IAAKvC,CAAAA,WAAYuC,CAAAA,MAArB,CACI,IAAKyB,CAAAA,IAAL,CAAU,OAAV,CAAmB,EAAA,EAAM,CACjB,IAAKE,CAAAA,SAAT,CACIoC,cAAA,EADJ,CAII5E,KAAA,EALiB,CAAzB,CADJ,KAUS,KAAKwC,CAAAA,SAAT,CACDoC,cAAA,EADC,CAID5E,KAAA,EAGR,OAAO,KAnCH,CA0CRuB,OAAO,CAACoB,GAAD,CAAM,CACTtF,KAAA,CAAM,iBAAN,CAAyBsF,GAAzB,CACA9F,OAAO8D,CAAAA,qBAAP,CAA+B,CAAA,CAC/B,KAAKI,CAAAA,YAAL,CAAkB,OAAlB,CAA2B4B,GAA3B,CACA;IAAKxC,CAAAA,OAAL,CAAa,iBAAb,CAAgCwC,GAAhC,CAJS,CAWbxC,OAAO,CAACqB,MAAD,CAASpB,WAAT,CAAsB,CACzB,GAAI,SAAJ,GAAkB,IAAK/B,CAAAA,UAAvB,EACI,MADJ,GACe,IAAKA,CAAAA,UADpB,EAEI,SAFJ,GAEkB,IAAKA,CAAAA,UAFvB,CAGIhB,KAAA,CAAM,gCAAN,CAAwCmE,MAAxC,CAsBA,CApBA,IAAKmC,CAAAA,cAAL,CAAoB,IAAKrE,CAAAA,gBAAzB,CAoBA,CAlBA,IAAKQ,CAAAA,SAAUC,CAAAA,kBAAf,CAAkC,OAAlC,CAkBA,CAhBA,IAAKD,CAAAA,SAAUE,CAAAA,KAAf,EAgBA,CAdA,IAAKF,CAAAA,SAAUC,CAAAA,kBAAf,EAcA,CAbmC,UAanC,GAbI,MAAO8E,oBAaX,GAZIA,mBAAA,CAAoB,cAApB,CAAoC,IAAKjF,CAAAA,yBAAzC,CAAoE,CAAA,CAApE,CACA,CAAAiF,mBAAA,CAAoB,SAApB,CAA+B,IAAK5E,CAAAA,oBAApC;AAA0D,CAAA,CAA1D,CAWJ,EARA,IAAK5B,CAAAA,UAQL,CARkB,QAQlB,CANA,IAAKqB,CAAAA,EAML,CANU,IAMV,CAJA,IAAKqB,CAAAA,YAAL,CAAkB,OAAlB,CAA2BS,MAA3B,CAAmCpB,WAAnC,CAIA,CADA,IAAK9B,CAAAA,WACL,CADmB,EACnB,CAAA,IAAKC,CAAAA,aAAL,CAAqB,CA1BA,CAoC7BkF,cAAc,CAAChE,QAAD,CAAW,CACrB,MAAMqF,iBAAmB,EACzB,KAAI7B,EAAI,CACR,OAAM8B,EAAItF,QAASoB,CAAAA,MACnB,KAAA,CAAOoC,CAAP,CAAW8B,CAAX,CAAc9B,CAAA,EAAd,CACQ,CAAC,IAAK7E,CAAAA,UAAWwC,CAAAA,OAAhB,CAAwBnB,QAAA,CAASwD,CAAT,CAAxB,CAAL,EACI6B,gBAAiBJ,CAAAA,IAAjB,CAAsBjF,QAAA,CAASwD,CAAT,CAAtB,CAER,OAAO6B,iBARc,CA1kB7B,CAqlBAxI,OAAQO,CAAAA,MAAR,CAAiBA,MACjBA,OAAOkB,CAAAA,QAAP,CAAkBX,kBAAmBW,CAAAA,QArmBiF;",
"sources":["node_modules/engine_DOT_io-client/build/cjs/socket.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$engine_DOT_io_client$build$cjs$socket\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst index_js_1 = require(\"./transports/index.js\");\nconst util_js_1 = require(\"./util.js\");\nconst parseqs_js_1 = require(\"./contrib/parseqs.js\");\nconst parseuri_js_1 = require(\"./contrib/parseuri.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst debug = (0, debug_1.default)(\"engine.io-client:socket\"); // debug()\nclass Socket extends component_emitter_1.Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = (0, parseuri_js_1.parse)(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = (0, parseuri_js_1.parse)(opts.host).host;\n        }\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = (0, parseqs_js_1.decode)(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        debug('creating transport \"%s\"', name);\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = engine_io_parser_1.protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        debug(\"options: %j\", opts);\n        return new index_js_1.transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            debug(\"error while creating transport: %s\", e);\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        debug(\"setting transport %s\", transport.name);\n        if (this.transport) {\n            debug(\"clearing existing transport %s\", this.transport.name);\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        debug('probing transport \"%s\"', name);\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            debug('probe transport \"%s\" opened', name);\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    debug('probe transport \"%s\" pong', name);\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    debug('pausing current transport \"%s\"', this.transport.name);\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        debug(\"changing transport and sending upgrade packet\");\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    debug('probe transport \"%s\" failed', name);\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            debug('probe transport \"%s\" failed because of error: %s', name, err);\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        debug(\"socket open\");\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            debug(\"starting upgrade probes\");\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n            debug('packet received with socket readyState \"%s\"', this.readyState);\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            debug(\"flushing %d packets in socket\", packets.length);\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += (0, util_js_1.byteLength)(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                debug(\"only send %d out of %d packets\", i, this.writeBuffer.length);\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        debug(\"payload size is %d (max: %d)\", payloadSize, this.maxPayload);\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            debug(\"socket closing - telling transport to close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        debug(\"socket error %j\", err);\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            debug('socket close with reason: \"%s\"', reason);\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nexports.Socket = Socket;\nSocket.protocol = engine_io_parser_1.protocol;\n\n};"],
"names":["shadow$provide","global","require","module","exports","__importDefault","mod","__esModule","Object","defineProperty","value","Socket","index_js_1","util_js_1","parseqs_js_1","parseuri_js_1","debug_1","component_emitter_1","engine_io_parser_1","debug","default","Emitter","constructor","uri","opts","parse","hostname","host","secure","protocol","port","query","installTimerFunctions","location","transports","readyState","writeBuffer","prevBufferLen","assign","path","agent","withCredentials","upgrade","timestampParam","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","replace","decode","pingTimeoutTimer","pingTimeout","pingInterval","upgrades","id","addEventListener","beforeunloadEventListener","this.beforeunloadEventListener","transport","removeAllListeners","close","offlineEventListener","this.offlineEventListener","onClose","description","open","createTransport","name","EIO","sid","socket","priorWebsocketSuccess","indexOf","length","setTimeoutFn","emitReserved","e","shift","setTransport","on","onDrain","bind","onPacket","onError","reason","probe","freezeTransport","failed","cleanup","onTransportClose","onerror","onclose","onupgrade","to","onTransportOpen","send","type","data","once","msg","upgrading","pause","flush","err","Error","error","removeListener","off","onOpen","i","l","packet","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","clearTimeoutFn","autoUnref","unref","splice","writable","packets","getWritablePackets","payloadSize","byteLength","slice","write","options","fn","undefined","compress","push","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","j"]
}
