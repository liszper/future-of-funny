["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@motionone/dom/dist/animate/style.cjs.js"],"~:js","shadow$provide.module$node_modules$$motionone$dom$dist$animate$style_cjs=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});var cssVar=require(\"module$node_modules$$motionone$dom$dist$animate$utils$css_var_cjs\"),getStyleName=require(\"module$node_modules$$motionone$dom$dist$animate$utils$get_style_name_cjs\"),transforms=require(\"module$node_modules$$motionone$dom$dist$animate$utils$transforms_cjs\");exports.style={get:(element,name)=>{name=getStyleName.getStyleName(name);\nelement=cssVar.isCssVar(name)?element.style.getPropertyValue(name):getComputedStyle(element)[name];!element&&0!==element&&(name=transforms.transformDefinitions.get(name))&&(element=name.initialValue);return element},set:(element,name,value)=>{name=getStyleName.getStyleName(name);cssVar.isCssVar(name)?element.style.setProperty(name,value):element.style[name]=value}}}","~:source","shadow$provide[\"module$node_modules$$motionone$dom$dist$animate$style_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cssVar = require('./utils/css-var.cjs.js');\nvar getStyleName = require('./utils/get-style-name.cjs.js');\nvar transforms = require('./utils/transforms.cjs.js');\n\nconst style = {\n    get: (element, name) => {\n        name = getStyleName.getStyleName(name);\n        let value = cssVar.isCssVar(name)\n            ? element.style.getPropertyValue(name)\n            : getComputedStyle(element)[name];\n        if (!value && value !== 0) {\n            const definition = transforms.transformDefinitions.get(name);\n            if (definition)\n                value = definition.initialValue;\n        }\n        return value;\n    },\n    set: (element, name, value) => {\n        name = getStyleName.getStyleName(name);\n        if (cssVar.isCssVar(name)) {\n            element.style.setProperty(name, value);\n        }\n        else {\n            element.style[name] = value;\n        }\n    },\n};\n\nexports.style = style;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$motionone$dom$dist$animate$utils$transforms_cjs","~$module$node_modules$$motionone$dom$dist$animate$utils$get_style_name_cjs","~$module$node_modules$$motionone$dom$dist$animate$utils$css_var_cjs","~$shadow.js"]],"~:properties",["^5",["__esModule","style","value","set","get"]],"~:compiled-at",1681642524795,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$motionone$dom$dist$animate$style_cjs.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,OAASN,OAAA,CAAQ,mEAAR,CAAb,CACIO,aAAeP,OAAA,CAAQ,0EAAR,CADnB,CAEIQ,WAAaR,OAAA,CAAQ,sEAAR,CA0BjBE,QAAQO,CAAAA,KAAR,CAxBcA,CACVC,IAAK,CAACC,OAAD,CAAUC,IAAV,CAAAF,EAAmB,CACpBE,IAAA,CAAOL,YAAaA,CAAAA,YAAb,CAA0BK,IAA1B,CACHP;OAAAA,CAAQC,MAAOO,CAAAA,QAAP,CAAgBD,IAAhB,CAAA,CACND,OAAQF,CAAAA,KAAMK,CAAAA,gBAAd,CAA+BF,IAA/B,CADM,CAENG,gBAAA,CAAiBJ,OAAjB,CAAA,CAA0BC,IAA1B,CACF,EAACP,OAAL,EAAwB,CAAxB,GAAcA,OAAd,GACUW,IADV,CACuBR,UAAWS,CAAAA,oBAAqBP,CAAAA,GAAhC,CAAoCE,IAApC,CADvB,IAGQP,OAHR,CAGgBW,IAAWE,CAAAA,YAH3B,CAKA,OAAOb,QAVa,CADdI,CAaVU,IAAK,CAACR,OAAD,CAAUC,IAAV,CAAgBP,KAAhB,CAAAc,EAA0B,CAC3BP,IAAA,CAAOL,YAAaA,CAAAA,YAAb,CAA0BK,IAA1B,CACHN,OAAOO,CAAAA,QAAP,CAAgBD,IAAhB,CAAJ,CACID,OAAQF,CAAAA,KAAMW,CAAAA,WAAd,CAA0BR,IAA1B,CAAgCP,KAAhC,CADJ,CAIIM,OAAQF,CAAAA,KAAR,CAAcG,IAAd,CAJJ,CAI0BP,KANC,CAbrBI,CATwG;\",\n\"sources\":[\"node_modules/@motionone/dom/dist/animate/style.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$motionone$dom$dist$animate$style_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar cssVar = require('./utils/css-var.cjs.js');\\nvar getStyleName = require('./utils/get-style-name.cjs.js');\\nvar transforms = require('./utils/transforms.cjs.js');\\n\\nconst style = {\\n    get: (element, name) => {\\n        name = getStyleName.getStyleName(name);\\n        let value = cssVar.isCssVar(name)\\n            ? element.style.getPropertyValue(name)\\n            : getComputedStyle(element)[name];\\n        if (!value && value !== 0) {\\n            const definition = transforms.transformDefinitions.get(name);\\n            if (definition)\\n                value = definition.initialValue;\\n        }\\n        return value;\\n    },\\n    set: (element, name, value) => {\\n        name = getStyleName.getStyleName(name);\\n        if (cssVar.isCssVar(name)) {\\n            element.style.setProperty(name, value);\\n        }\\n        else {\\n            element.style[name] = value;\\n        }\\n    },\\n};\\n\\nexports.style = style;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"cssVar\",\"getStyleName\",\"transforms\",\"style\",\"get\",\"element\",\"name\",\"isCssVar\",\"getPropertyValue\",\"getComputedStyle\",\"definition\",\"transformDefinitions\",\"initialValue\",\"set\",\"setProperty\"]\n}\n"]