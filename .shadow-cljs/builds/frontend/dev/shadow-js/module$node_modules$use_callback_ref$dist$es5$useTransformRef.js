["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/use-callback-ref/dist/es5/useTransformRef.js"],"~:js","shadow$provide.module$node_modules$use_callback_ref$dist$es5$useTransformRef=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.useTransformRef=void 0;var assignRef_1=require(\"module$node_modules$use_callback_ref$dist$es5$assignRef\"),useRef_1=require(\"module$node_modules$use_callback_ref$dist$es5$useRef\");exports.useTransformRef=function(ref,transformer){return(0,useRef_1.useCallbackRef)(null,function(value){return(0,assignRef_1.assignRef)(ref,transformer(value))})}}","~:source","shadow$provide[\"module$node_modules$use_callback_ref$dist$es5$useTransformRef\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTransformRef = void 0;\nvar assignRef_1 = require(\"./assignRef\");\nvar useRef_1 = require(\"./useRef\");\n/**\n * Create a _lense_ on Ref, making it possible to transform ref value\n * @param {ReactRef} ref\n * @param {Function} transformer. \uD83D\uDC49 Ref would be __NOT updated__ on `transformer` update.\n * @returns {RefObject}\n *\n * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\n * @example\n *\n * const ResizableWithRef = forwardRef((props, ref) =>\n *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\n * );\n */\nfunction useTransformRef(ref, transformer) {\n    return (0, useRef_1.useCallbackRef)(null, function (value) { return (0, assignRef_1.assignRef)(ref, transformer(value)); });\n}\nexports.useTransformRef = useTransformRef;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$use_callback_ref$dist$es5$assignRef","~$module$node_modules$use_callback_ref$dist$es5$useRef"]],"~:properties",["^5",["__esModule","value","useTransformRef"]],"~:compiled-at",1681642524882,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$use_callback_ref$dist$es5$useTransformRef.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,eAAR,CAA0B,IAAK,EAC/B,KAAIC,YAAcP,OAAA,CAAQ,yDAAR,CAAlB,CACIQ,SAAWR,OAAA,CAAQ,sDAAR,CAiBfE,QAAQI,CAAAA,eAAR,CAHAA,QAAwB,CAACG,GAAD,CAAMC,WAAN,CAAmB,CACvC,MAAO,GAAIF,QAASG,CAAAA,cAAb,EAA6B,IAA7B,CAAmC,QAAS,CAACN,KAAD,CAAQ,CAAE,MAAO,GAAIE,WAAYK,CAAAA,SAAhB,EAA2BH,GAA3B,CAAgCC,WAAA,CAAYL,KAAZ,CAAhC,CAAT,CAApD,CADgC,CAnB+E;\",\n\"sources\":[\"node_modules/use-callback-ref/dist/es5/useTransformRef.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$use_callback_ref$dist$es5$useTransformRef\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.useTransformRef = void 0;\\nvar assignRef_1 = require(\\\"./assignRef\\\");\\nvar useRef_1 = require(\\\"./useRef\\\");\\n/**\\n * Create a _lense_ on Ref, making it possible to transform ref value\\n * @param {ReactRef} ref\\n * @param {Function} transformer. \\ud83d\\udc49 Ref would be __NOT updated__ on `transformer` update.\\n * @returns {RefObject}\\n *\\n * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\\n * @example\\n *\\n * const ResizableWithRef = forwardRef((props, ref) =>\\n *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\\n * );\\n */\\nfunction useTransformRef(ref, transformer) {\\n    return (0, useRef_1.useCallbackRef)(null, function (value) { return (0, assignRef_1.assignRef)(ref, transformer(value)); });\\n}\\nexports.useTransformRef = useTransformRef;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"useTransformRef\",\"assignRef_1\",\"useRef_1\",\"ref\",\"transformer\",\"useCallbackRef\",\"assignRef\"]\n}\n"]