["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/focus-lock/dist/es5/utils/parenting.js"],"~:js","shadow$provide.module$node_modules$focus_lock$dist$es5$utils$parenting=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.allParentAutofocusables=exports.getTopCommonParent=exports.getCommonParent=void 0;var DOMutils_1=require(\"module$node_modules$focus_lock$dist$es5$utils$DOMutils\"),DOMutils_2=require(\"module$node_modules$focus_lock$dist$es5$utils$DOMutils\"),array_1=require(\"module$node_modules$focus_lock$dist$es5$utils$array\"),getParents=function(node,\nparents){void 0===parents&&(parents=[]);parents.push(node);node.parentNode&&getParents(node.parentNode.host||node.parentNode,parents);return parents};exports.getCommonParent=function(nodeA,nodeB){nodeA=getParents(nodeA);nodeB=getParents(nodeB);for(var i=0;i<nodeA.length;i+=1){var currentParent=nodeA[i];if(0<=nodeB.indexOf(currentParent))return currentParent}return!1};exports.getTopCommonParent=function(baseActiveElement,leftEntry,rightEntries){baseActiveElement=(0,array_1.asArray)(baseActiveElement);\nleftEntry=(0,array_1.asArray)(leftEntry);var activeElement=baseActiveElement[0],topCommon=!1;leftEntry.filter(Boolean).forEach(function(entry){topCommon=(0,exports.getCommonParent)(topCommon||entry,entry)||topCommon;rightEntries.filter(Boolean).forEach(function(subEntry){(subEntry=(0,exports.getCommonParent)(activeElement,subEntry))&&(topCommon=!topCommon||(0,DOMutils_2.contains)(subEntry,topCommon)?subEntry:(0,exports.getCommonParent)(subEntry,topCommon))})});return topCommon};exports.allParentAutofocusables=\nfunction(entries,visibilityCache){return entries.reduce(function(acc,node){return acc.concat((0,DOMutils_1.parentAutofocusables)(node,visibilityCache))},[])}}","~:source","shadow$provide[\"module$node_modules$focus_lock$dist$es5$utils$parenting\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.allParentAutofocusables = exports.getTopCommonParent = exports.getCommonParent = void 0;\nvar DOMutils_1 = require(\"./DOMutils\");\nvar DOMutils_2 = require(\"./DOMutils\");\nvar array_1 = require(\"./array\");\nvar getParents = function (node, parents) {\n    if (parents === void 0) { parents = []; }\n    parents.push(node);\n    if (node.parentNode) {\n        getParents(node.parentNode.host || node.parentNode, parents);\n    }\n    return parents;\n};\n/**\n * finds a parent for both nodeA and nodeB\n * @param nodeA\n * @param nodeB\n * @returns {boolean|*}\n */\nvar getCommonParent = function (nodeA, nodeB) {\n    var parentsA = getParents(nodeA);\n    var parentsB = getParents(nodeB);\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < parentsA.length; i += 1) {\n        var currentParent = parentsA[i];\n        if (parentsB.indexOf(currentParent) >= 0) {\n            return currentParent;\n        }\n    }\n    return false;\n};\nexports.getCommonParent = getCommonParent;\nvar getTopCommonParent = function (baseActiveElement, leftEntry, rightEntries) {\n    var activeElements = (0, array_1.asArray)(baseActiveElement);\n    var leftEntries = (0, array_1.asArray)(leftEntry);\n    var activeElement = activeElements[0];\n    var topCommon = false;\n    leftEntries.filter(Boolean).forEach(function (entry) {\n        topCommon = (0, exports.getCommonParent)(topCommon || entry, entry) || topCommon;\n        rightEntries.filter(Boolean).forEach(function (subEntry) {\n            var common = (0, exports.getCommonParent)(activeElement, subEntry);\n            if (common) {\n                if (!topCommon || (0, DOMutils_2.contains)(common, topCommon)) {\n                    topCommon = common;\n                }\n                else {\n                    topCommon = (0, exports.getCommonParent)(common, topCommon);\n                }\n            }\n        });\n    });\n    // TODO: add assert here?\n    return topCommon;\n};\nexports.getTopCommonParent = getTopCommonParent;\n/**\n * return list of nodes which are expected to be autofocused inside a given top nodes\n * @param entries\n * @param visibilityCache\n */\nvar allParentAutofocusables = function (entries, visibilityCache) {\n    return entries.reduce(function (acc, node) { return acc.concat((0, DOMutils_1.parentAutofocusables)(node, visibilityCache)); }, []);\n};\nexports.allParentAutofocusables = allParentAutofocusables;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$focus_lock$dist$es5$utils$DOMutils","~$module$node_modules$focus_lock$dist$es5$utils$array","~$shadow.js"]],"~:properties",["^5",["getTopCommonParent","allParentAutofocusables","__esModule","value","getCommonParent"]],"~:compiled-at",1681642524892,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$focus_lock$dist$es5$utils$parenting.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/focus-lock/dist/es5/utils/parenting.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$focus_lock$dist$es5$utils$parenting\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.allParentAutofocusables = exports.getTopCommonParent = exports.getCommonParent = void 0;\\nvar DOMutils_1 = require(\\\"./DOMutils\\\");\\nvar DOMutils_2 = require(\\\"./DOMutils\\\");\\nvar array_1 = require(\\\"./array\\\");\\nvar getParents = function (node, parents) {\\n    if (parents === void 0) { parents = []; }\\n    parents.push(node);\\n    if (node.parentNode) {\\n        getParents(node.parentNode.host || node.parentNode, parents);\\n    }\\n    return parents;\\n};\\n/**\\n * finds a parent for both nodeA and nodeB\\n * @param nodeA\\n * @param nodeB\\n * @returns {boolean|*}\\n */\\nvar getCommonParent = function (nodeA, nodeB) {\\n    var parentsA = getParents(nodeA);\\n    var parentsB = getParents(nodeB);\\n    // tslint:disable-next-line:prefer-for-of\\n    for (var i = 0; i < parentsA.length; i += 1) {\\n        var currentParent = parentsA[i];\\n        if (parentsB.indexOf(currentParent) >= 0) {\\n            return currentParent;\\n        }\\n    }\\n    return false;\\n};\\nexports.getCommonParent = getCommonParent;\\nvar getTopCommonParent = function (baseActiveElement, leftEntry, rightEntries) {\\n    var activeElements = (0, array_1.asArray)(baseActiveElement);\\n    var leftEntries = (0, array_1.asArray)(leftEntry);\\n    var activeElement = activeElements[0];\\n    var topCommon = false;\\n    leftEntries.filter(Boolean).forEach(function (entry) {\\n        topCommon = (0, exports.getCommonParent)(topCommon || entry, entry) || topCommon;\\n        rightEntries.filter(Boolean).forEach(function (subEntry) {\\n            var common = (0, exports.getCommonParent)(activeElement, subEntry);\\n            if (common) {\\n                if (!topCommon || (0, DOMutils_2.contains)(common, topCommon)) {\\n                    topCommon = common;\\n                }\\n                else {\\n                    topCommon = (0, exports.getCommonParent)(common, topCommon);\\n                }\\n            }\\n        });\\n    });\\n    // TODO: add assert here?\\n    return topCommon;\\n};\\nexports.getTopCommonParent = getTopCommonParent;\\n/**\\n * return list of nodes which are expected to be autofocused inside a given top nodes\\n * @param entries\\n * @param visibilityCache\\n */\\nvar allParentAutofocusables = function (entries, visibilityCache) {\\n    return entries.reduce(function (acc, node) { return acc.concat((0, DOMutils_1.parentAutofocusables)(node, visibilityCache)); }, []);\\n};\\nexports.allParentAutofocusables = allParentAutofocusables;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"allParentAutofocusables\",\"getTopCommonParent\",\"getCommonParent\",\"DOMutils_1\",\"DOMutils_2\",\"array_1\",\"getParents\",\"node\",\"parents\",\"push\",\"parentNode\",\"host\",\"nodeA\",\"nodeB\",\"parentsA\",\"parentsB\",\"i\",\"length\",\"currentParent\",\"indexOf\",\"baseActiveElement\",\"leftEntry\",\"rightEntries\",\"activeElements\",\"asArray\",\"leftEntries\",\"activeElement\",\"topCommon\",\"filter\",\"Boolean\",\"forEach\",\"entry\",\"subEntry\",\"common\",\"contains\",\"entries\",\"visibilityCache\",\"reduce\",\"acc\",\"concat\",\"parentAutofocusables\"]\n}\n"]