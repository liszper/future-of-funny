["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/engine_DOT_io-client/build/cjs/contrib/yeast.js"],"~:js","shadow$provide.module$node_modules$engine_DOT_io_client$build$cjs$contrib$yeast=function(global,require,module,exports){function encode(num){let encoded=\"\";do encoded=alphabet[num%64]+encoded,num=Math.floor(num/64);while(0<num);return encoded}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.yeast=exports.decode=exports.encode=void 0;const alphabet=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\"\"),map={};let seed=0,i=0,prev;exports.encode=encode;exports.decode=\nfunction(str){let decoded=0;for(i=0;i<str.length;i++)decoded=64*decoded+map[str.charAt(i)];return decoded};for(exports.yeast=function(){const now=encode(+new Date);return now!==prev?(seed=0,prev=now):now+\".\"+encode(seed++)};64>i;i++)map[alphabet[i]]=i}","~:source","shadow$provide[\"module$node_modules$engine_DOT_io_client$build$cjs$contrib$yeast\"] = function(global,require,module,exports) {\n// imported from https://github.com/unshiftio/yeast\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.yeast = exports.decode = exports.encode = void 0;\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\nexports.encode = encode;\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\nexports.decode = decode;\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\nexports.yeast = yeast;\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["decode","__esModule","value","encode","yeast"]],"~:compiled-at",1681642524929,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$engine_DOT_io_client$build$cjs$contrib$yeast.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc7HC,QAASA,OAAM,CAACC,GAAD,CAAM,CACjB,IAAIC,QAAU,EACd,GACIA,QACA,CADUC,QAAA,CAASF,GAAT,CAZsFG,EAYtF,CACV,CADmCF,OACnC,CAAAD,GAAA,CAAMI,IAAKC,CAAAA,KAAL,CAAWL,GAAX,CAb0FG,EAa1F,CAFV,OAGe,CAHf,CAGSH,GAHT,CAIA,OAAOC,QANU,CAXrBK,MAAOC,CAAAA,cAAP,CAAsBT,OAAtB,CAA+B,YAA/B,CAA6C,CAAEU,MAAO,CAAA,CAAT,CAA7C,CACAV,QAAQW,CAAAA,KAAR,CAAgBX,OAAQY,CAAAA,MAAxB,CAAiCZ,OAAQC,CAAAA,MAAzC,CAAkD,IAAK,EAJsE,OAKvHG,SAAW,kEAAA,CAAA,KAAA,CAAA,EAAA,CAL4G,CAKjBS,IAAM,EALW,KAMzHC,KAAO,CANkH,CAM/GC,EAAI,CAN2G,CAMxGC,IAgBrBhB,QAAQC,CAAAA,MAAR,CAAiBA,MAejBD,QAAQY,CAAAA,MAAR;AAPAA,QAAe,CAACK,GAAD,CAAM,CACjB,IAAIC,QAAU,CACd,KAAKH,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBE,GAAIZ,CAAAA,MAApB,CAA4BU,CAAA,EAA5B,CACIG,OAAA,CA5BgGb,EA4BhG,CAAUa,OAAV,CAA6BL,GAAA,CAAII,GAAIE,CAAAA,MAAJ,CAAWJ,CAAX,CAAJ,CAEjC,OAAOG,QALU,CAwBrB,KAJAlB,OAAQW,CAAAA,KAIR,CAVAA,QAAc,EAAG,CACb,MAAMS,IAAMnB,MAAA,CAAO,CAAC,IAAIoB,IAAZ,CACZ,OAAID,IAAJ,GAAYJ,IAAZ,EACWF,IAAA,CAAO,CAAP,CAAUE,IAAV,CAAiBI,GAD5B,EAEOA,GAFP,CAEa,GAFb,CAEmBnB,MAAA,CAAOa,IAAA,EAAP,CAJN,CAUjB,CAjDwGT,EAiDxG,CAAOU,CAAP,CAAmBA,CAAA,EAAnB,CACIF,GAAA,CAAIT,QAAA,CAASW,CAAT,CAAJ,CAAA,CAAmBA,CAvDsG;\",\n\"sources\":[\"node_modules/engine_DOT_io-client/build/cjs/contrib/yeast.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$engine_DOT_io_client$build$cjs$contrib$yeast\\\"] = function(global,require,module,exports) {\\n// imported from https://github.com/unshiftio/yeast\\n'use strict';\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.yeast = exports.decode = exports.encode = void 0;\\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\\nlet seed = 0, i = 0, prev;\\n/**\\n * Return a string representing the specified number.\\n *\\n * @param {Number} num The number to convert.\\n * @returns {String} The string representation of the number.\\n * @api public\\n */\\nfunction encode(num) {\\n    let encoded = '';\\n    do {\\n        encoded = alphabet[num % length] + encoded;\\n        num = Math.floor(num / length);\\n    } while (num > 0);\\n    return encoded;\\n}\\nexports.encode = encode;\\n/**\\n * Return the integer value specified by the given string.\\n *\\n * @param {String} str The string to convert.\\n * @returns {Number} The integer value represented by the string.\\n * @api public\\n */\\nfunction decode(str) {\\n    let decoded = 0;\\n    for (i = 0; i < str.length; i++) {\\n        decoded = decoded * length + map[str.charAt(i)];\\n    }\\n    return decoded;\\n}\\nexports.decode = decode;\\n/**\\n * Yeast: A tiny growing id generator.\\n *\\n * @returns {String} A unique id.\\n * @api public\\n */\\nfunction yeast() {\\n    const now = encode(+new Date());\\n    if (now !== prev)\\n        return seed = 0, prev = now;\\n    return now + '.' + encode(seed++);\\n}\\nexports.yeast = yeast;\\n//\\n// Map each character to its index.\\n//\\nfor (; i < length; i++)\\n    map[alphabet[i]] = i;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"encode\",\"num\",\"encoded\",\"alphabet\",\"length\",\"Math\",\"floor\",\"Object\",\"defineProperty\",\"value\",\"yeast\",\"decode\",\"map\",\"seed\",\"i\",\"prev\",\"str\",\"decoded\",\"charAt\",\"now\",\"Date\"]\n}\n"]