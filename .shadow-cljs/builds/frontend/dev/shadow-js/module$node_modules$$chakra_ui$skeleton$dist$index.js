["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@chakra-ui/skeleton/dist/index.js"],"~:js","shadow$provide.module$node_modules$$chakra_ui$skeleton$dist$index=function(global,require,module,exports){function useIsFirstRender(){const isFirstRender=(0,import_react.useRef)(!0);(0,import_react.useEffect)(()=>{isFirstRender.current=!1},[]);return isFirstRender.current}function range(count){return Array(count).fill(1).map((_,index)=>index+1)}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,\n__copyProps=(to,from,except,desc)=>{if(from&&\"object\"===typeof from||\"function\"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{Skeleton:()=>Skeleton,SkeletonCircle:()=>SkeletonCircle,SkeletonText:()=>SkeletonText});module.exports=(mod=>\n__copyProps(__defProp({},\"__esModule\",{value:!0}),mod))(global);var import_react_use_previous=require(\"module$node_modules$$chakra_ui$react_use_previous$dist$index\"),import_shared_utils=require(\"module$node_modules$$chakra_ui$shared_utils$dist$index\"),import_system=require(\"module$node_modules$$chakra_ui$system$dist$index\"),import_react=require(\"module$node_modules$react$index\"),import_jsx_runtime=require(\"module$node_modules$react$jsx_runtime\"),StyledSkeleton=(0,import_system.chakra)(\"div\",{baseStyle:{boxShadow:\"none\",\nbackgroundClip:\"padding-box\",cursor:\"default\",color:\"transparent\",pointerEvents:\"none\",userSelect:\"none\",\"\\x26::before, \\x26::after, *\":{visibility:\"hidden\"}}}),$startColor=(0,import_system.cssVar)(\"skeleton-start-color\"),$endColor=(0,import_system.cssVar)(\"skeleton-end-color\"),fade=(0,import_system.keyframes)({from:{opacity:0},to:{opacity:1}}),bgFade=(0,import_system.keyframes)({from:{borderColor:$startColor.reference,background:$startColor.reference},to:{borderColor:$endColor.reference,background:$endColor.reference}}),\nSkeleton=(0,import_system.forwardRef)((props,ref)=>{var skeletonProps={fadeDuration:.4,speed:.8,...props};props=(0,import_system.useStyleConfig)(\"Skeleton\",skeletonProps);const isFirstRender=useIsFirstRender(),{startColor=\"\",endColor=\"\",isLoaded,fadeDuration,speed,className,fitContent,...rest}=(0,import_system.omitThemingProps)(skeletonProps),[startColorVar,endColorVar]=(0,import_system.useToken)(\"colors\",[startColor,endColor]);skeletonProps=(0,import_react_use_previous.usePrevious)(isLoaded);const _className=\n(0,import_shared_utils.cx)(\"chakra-skeleton\",className),cssVarStyles={...(startColorVar&&{[$startColor.variable]:startColorVar}),...(endColorVar&&{[$endColor.variable]:endColorVar})};return isLoaded?(0,import_jsx_runtime.jsx)(import_system.chakra.div,{ref,className:_className,__css:{animation:isFirstRender||skeletonProps?\"none\":`${fade} ${fadeDuration}s`},...rest}):(0,import_jsx_runtime.jsx)(StyledSkeleton,{ref,className:_className,...rest,__css:{width:fitContent?\"fit-content\":void 0,...props,...cssVarStyles,\n_dark:{...props._dark,...cssVarStyles},animation:`${speed}s linear infinite alternate ${bgFade}`}})});Skeleton.displayName=\"Skeleton\";var import_media_query=require(\"module$node_modules$$chakra_ui$media_query$dist$index\"),import_system2=require(\"module$node_modules$$chakra_ui$system$dist$index\"),import_shared_utils2=require(\"module$node_modules$$chakra_ui$shared_utils$dist$index\"),import_jsx_runtime2=require(\"module$node_modules$react$jsx_runtime\"),SkeletonText=props=>{const {noOfLines=3,spacing=\n\"0.5rem\",skeletonHeight=\"0.5rem\",className,startColor,endColor,isLoaded,fadeDuration,speed,children,...rest}=props,noOfLinesValue=(0,import_media_query.useBreakpointValue)(\"number\"===typeof noOfLines?[noOfLines]:noOfLines)||3,numbers=range(noOfLinesValue);props=(0,import_shared_utils2.cx)(\"chakra-skeleton__group\",className);return(0,import_jsx_runtime2.jsx)(import_system2.chakra.div,{className:props,...rest,children:numbers.map((number,index)=>{if(isLoaded&&0<index)return null;if(isLoaded)var JSCompiler_temp=\nnull;else{JSCompiler_temp=number===numbers.length?\"0\":spacing;var JSCompiler_inline_result=1<noOfLinesValue?number===numbers.length?\"80%\":\"100%\":\"100%\";JSCompiler_temp={mb:JSCompiler_temp,width:JSCompiler_inline_result,height:skeletonHeight}}return(0,import_jsx_runtime2.jsx)(Skeleton,{startColor,endColor,isLoaded,fadeDuration,speed,...JSCompiler_temp,children:0===index?children:void 0},numbers.length.toString()+number)})})};SkeletonText.displayName=\"SkeletonText\";var import_jsx_runtime3=require(\"module$node_modules$react$jsx_runtime\"),\nSkeletonCircle=({size=\"2rem\",...rest})=>(0,import_jsx_runtime3.jsx)(Skeleton,{borderRadius:\"full\",boxSize:size,...rest});SkeletonCircle.displayName=\"SkeletonCircle\"}","~:source","shadow$provide[\"module$node_modules$$chakra_ui$skeleton$dist$index\"] = function(global,require,module,exports) {\n\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Skeleton: () => Skeleton,\n  SkeletonCircle: () => SkeletonCircle,\n  SkeletonText: () => SkeletonText\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/skeleton.tsx\nvar import_react_use_previous = require(\"@chakra-ui/react-use-previous\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// src/use-is-first-render.ts\nvar import_react = require(\"react\");\nfunction useIsFirstRender() {\n  const isFirstRender = (0, import_react.useRef)(true);\n  (0, import_react.useEffect)(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\n// src/skeleton.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar StyledSkeleton = (0, import_system.chakra)(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = (0, import_system.cssVar)(\"skeleton-start-color\");\nvar $endColor = (0, import_system.cssVar)(\"skeleton-end-color\");\nvar fade = (0, import_system.keyframes)({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = (0, import_system.keyframes)({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = (0, import_system.forwardRef)((props, ref) => {\n  const skeletonProps = {\n    fadeDuration: 0.4,\n    speed: 0.8,\n    ...props\n  };\n  const styles = (0, import_system.useStyleConfig)(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = (0, import_system.omitThemingProps)(skeletonProps);\n  const [startColorVar, endColorVar] = (0, import_system.useToken)(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = (0, import_react_use_previous.usePrevious)(isLoaded);\n  const _className = (0, import_shared_utils.cx)(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(\n      import_system.chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\n// src/skeleton-text.tsx\nvar import_media_query = require(\"@chakra-ui/media-query\");\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = (0, import_media_query.useBreakpointValue)(\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\n  ) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = (0, import_shared_utils2.cx)(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_system2.chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\n      Skeleton,\n      {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        ...sizeProps,\n        children: index === 0 ? children : void 0\n      },\n      numbers.length.toString() + number\n    );\n  }) });\n};\nSkeletonText.displayName = \"SkeletonText\";\n\n// src/skeleton-circle.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar SkeletonCircle = ({\n  size = \"2rem\",\n  ...rest\n}) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Skeleton, { borderRadius: \"full\", boxSize: size, ...rest });\nSkeletonCircle.displayName = \"SkeletonCircle\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Skeleton,\n  SkeletonCircle,\n  SkeletonText\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$chakra_ui$system$dist$index","~$module$node_modules$react$jsx_runtime","~$module$node_modules$$chakra_ui$shared_utils$dist$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$chakra_ui$react_use_previous$dist$index","~$module$node_modules$$chakra_ui$media_query$dist$index"]],"~:properties",["^5",["endColor","isLoaded","width","baseStyle","startColor","height","className","displayName","children","userSelect","SkeletonCircle","mb","visibility","animation","value","enumerable","cursor","fadeDuration","borderRadius","current","borderColor","SkeletonText","boxShadow","ref","from","backgroundClip","boxSize","to","speed","__css","background","get","_dark","color","opacity","pointerEvents","Skeleton"]],"~:compiled-at",1681642524904,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$chakra_ui$skeleton$dist$index.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@chakra-ui/skeleton/dist/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$chakra_ui$skeleton$dist$index\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nvar __defProp = Object.defineProperty;\\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\\nvar __getOwnPropNames = Object.getOwnPropertyNames;\\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\\nvar __export = (target, all) => {\\n  for (var name in all)\\n    __defProp(target, name, { get: all[name], enumerable: true });\\n};\\nvar __copyProps = (to, from, except, desc) => {\\n  if (from && typeof from === \\\"object\\\" || typeof from === \\\"function\\\") {\\n    for (let key of __getOwnPropNames(from))\\n      if (!__hasOwnProp.call(to, key) && key !== except)\\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\\n  }\\n  return to;\\n};\\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \\\"__esModule\\\", { value: true }), mod);\\n\\n// src/index.ts\\nvar src_exports = {};\\n__export(src_exports, {\\n  Skeleton: () => Skeleton,\\n  SkeletonCircle: () => SkeletonCircle,\\n  SkeletonText: () => SkeletonText\\n});\\nmodule.exports = __toCommonJS(src_exports);\\n\\n// src/skeleton.tsx\\nvar import_react_use_previous = require(\\\"@chakra-ui/react-use-previous\\\");\\nvar import_shared_utils = require(\\\"@chakra-ui/shared-utils\\\");\\nvar import_system = require(\\\"@chakra-ui/system\\\");\\n\\n// src/use-is-first-render.ts\\nvar import_react = require(\\\"react\\\");\\nfunction useIsFirstRender() {\\n  const isFirstRender = (0, import_react.useRef)(true);\\n  (0, import_react.useEffect)(() => {\\n    isFirstRender.current = false;\\n  }, []);\\n  return isFirstRender.current;\\n}\\n\\n// src/skeleton.tsx\\nvar import_jsx_runtime = require(\\\"react/jsx-runtime\\\");\\nvar StyledSkeleton = (0, import_system.chakra)(\\\"div\\\", {\\n  baseStyle: {\\n    boxShadow: \\\"none\\\",\\n    backgroundClip: \\\"padding-box\\\",\\n    cursor: \\\"default\\\",\\n    color: \\\"transparent\\\",\\n    pointerEvents: \\\"none\\\",\\n    userSelect: \\\"none\\\",\\n    \\\"&::before, &::after, *\\\": {\\n      visibility: \\\"hidden\\\"\\n    }\\n  }\\n});\\nvar $startColor = (0, import_system.cssVar)(\\\"skeleton-start-color\\\");\\nvar $endColor = (0, import_system.cssVar)(\\\"skeleton-end-color\\\");\\nvar fade = (0, import_system.keyframes)({\\n  from: { opacity: 0 },\\n  to: { opacity: 1 }\\n});\\nvar bgFade = (0, import_system.keyframes)({\\n  from: {\\n    borderColor: $startColor.reference,\\n    background: $startColor.reference\\n  },\\n  to: {\\n    borderColor: $endColor.reference,\\n    background: $endColor.reference\\n  }\\n});\\nvar Skeleton = (0, import_system.forwardRef)((props, ref) => {\\n  const skeletonProps = {\\n    fadeDuration: 0.4,\\n    speed: 0.8,\\n    ...props\\n  };\\n  const styles = (0, import_system.useStyleConfig)(\\\"Skeleton\\\", skeletonProps);\\n  const isFirstRender = useIsFirstRender();\\n  const {\\n    startColor = \\\"\\\",\\n    endColor = \\\"\\\",\\n    isLoaded,\\n    fadeDuration,\\n    speed,\\n    className,\\n    fitContent,\\n    ...rest\\n  } = (0, import_system.omitThemingProps)(skeletonProps);\\n  const [startColorVar, endColorVar] = (0, import_system.useToken)(\\\"colors\\\", [\\n    startColor,\\n    endColor\\n  ]);\\n  const wasPreviouslyLoaded = (0, import_react_use_previous.usePrevious)(isLoaded);\\n  const _className = (0, import_shared_utils.cx)(\\\"chakra-skeleton\\\", className);\\n  const cssVarStyles = {\\n    ...startColorVar && { [$startColor.variable]: startColorVar },\\n    ...endColorVar && { [$endColor.variable]: endColorVar }\\n  };\\n  if (isLoaded) {\\n    const animation = isFirstRender || wasPreviouslyLoaded ? \\\"none\\\" : `${fade} ${fadeDuration}s`;\\n    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(\\n      import_system.chakra.div,\\n      {\\n        ref,\\n        className: _className,\\n        __css: { animation },\\n        ...rest\\n      }\\n    );\\n  }\\n  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(\\n    StyledSkeleton,\\n    {\\n      ref,\\n      className: _className,\\n      ...rest,\\n      __css: {\\n        width: fitContent ? \\\"fit-content\\\" : void 0,\\n        ...styles,\\n        ...cssVarStyles,\\n        _dark: { ...styles[\\\"_dark\\\"], ...cssVarStyles },\\n        animation: `${speed}s linear infinite alternate ${bgFade}`\\n      }\\n    }\\n  );\\n});\\nSkeleton.displayName = \\\"Skeleton\\\";\\n\\n// src/skeleton-text.tsx\\nvar import_media_query = require(\\\"@chakra-ui/media-query\\\");\\nvar import_system2 = require(\\\"@chakra-ui/system\\\");\\nvar import_shared_utils2 = require(\\\"@chakra-ui/shared-utils\\\");\\nvar import_jsx_runtime2 = require(\\\"react/jsx-runtime\\\");\\nfunction range(count) {\\n  return Array(count).fill(1).map((_, index) => index + 1);\\n}\\nvar defaultNoOfLines = 3;\\nvar SkeletonText = (props) => {\\n  const {\\n    noOfLines = defaultNoOfLines,\\n    spacing = \\\"0.5rem\\\",\\n    skeletonHeight = \\\"0.5rem\\\",\\n    className,\\n    startColor,\\n    endColor,\\n    isLoaded,\\n    fadeDuration,\\n    speed,\\n    children,\\n    ...rest\\n  } = props;\\n  const noOfLinesValue = (0, import_media_query.useBreakpointValue)(\\n    typeof noOfLines === \\\"number\\\" ? [noOfLines] : noOfLines\\n  ) || defaultNoOfLines;\\n  const numbers = range(noOfLinesValue);\\n  const getWidth = (index) => {\\n    if (noOfLinesValue > 1) {\\n      return index === numbers.length ? \\\"80%\\\" : \\\"100%\\\";\\n    }\\n    return \\\"100%\\\";\\n  };\\n  const _className = (0, import_shared_utils2.cx)(\\\"chakra-skeleton__group\\\", className);\\n  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_system2.chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\\n    if (isLoaded && index > 0) {\\n      return null;\\n    }\\n    const sizeProps = isLoaded ? null : {\\n      mb: number === numbers.length ? \\\"0\\\" : spacing,\\n      width: getWidth(number),\\n      height: skeletonHeight\\n    };\\n    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(\\n      Skeleton,\\n      {\\n        startColor,\\n        endColor,\\n        isLoaded,\\n        fadeDuration,\\n        speed,\\n        ...sizeProps,\\n        children: index === 0 ? children : void 0\\n      },\\n      numbers.length.toString() + number\\n    );\\n  }) });\\n};\\nSkeletonText.displayName = \\\"SkeletonText\\\";\\n\\n// src/skeleton-circle.tsx\\nvar import_jsx_runtime3 = require(\\\"react/jsx-runtime\\\");\\nvar SkeletonCircle = ({\\n  size = \\\"2rem\\\",\\n  ...rest\\n}) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Skeleton, { borderRadius: \\\"full\\\", boxSize: size, ...rest });\\nSkeletonCircle.displayName = \\\"SkeletonCircle\\\";\\n// Annotate the CommonJS export names for ESM import in node:\\n0 && (module.exports = {\\n  Skeleton,\\n  SkeletonCircle,\\n  SkeletonText\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"useIsFirstRender\",\"isFirstRender\",\"import_react\",\"useRef\",\"useEffect\",\"current\",\"range\",\"count\",\"Array\",\"fill\",\"map\",\"_\",\"index\",\"__defProp\",\"Object\",\"defineProperty\",\"__getOwnPropDesc\",\"getOwnPropertyDescriptor\",\"__getOwnPropNames\",\"getOwnPropertyNames\",\"__hasOwnProp\",\"prototype\",\"hasOwnProperty\",\"__copyProps\",\"to\",\"from\",\"except\",\"desc\",\"key\",\"call\",\"get\",\"enumerable\",\"src_exports\",\"__export\",\"target\",\"all\",\"name\",\"Skeleton\",\"SkeletonCircle\",\"SkeletonText\",\"__toCommonJS\",\"mod\",\"value\",\"import_react_use_previous\",\"import_shared_utils\",\"import_system\",\"import_jsx_runtime\",\"StyledSkeleton\",\"chakra\",\"baseStyle\",\"boxShadow\",\"backgroundClip\",\"cursor\",\"color\",\"pointerEvents\",\"userSelect\",\"visibility\",\"$startColor\",\"cssVar\",\"$endColor\",\"fade\",\"keyframes\",\"opacity\",\"bgFade\",\"borderColor\",\"reference\",\"background\",\"forwardRef\",\"props\",\"ref\",\"skeletonProps\",\"fadeDuration\",\"speed\",\"styles\",\"useStyleConfig\",\"startColor\",\"endColor\",\"isLoaded\",\"className\",\"fitContent\",\"rest\",\"omitThemingProps\",\"startColorVar\",\"endColorVar\",\"useToken\",\"wasPreviouslyLoaded\",\"usePrevious\",\"_className\",\"cx\",\"cssVarStyles\",\"variable\",\"jsx\",\"div\",\"__css\",\"animation\",\"width\",\"_dark\",\"displayName\",\"import_media_query\",\"import_system2\",\"import_shared_utils2\",\"import_jsx_runtime2\",\"noOfLines\",\"defaultNoOfLines\",\"spacing\",\"skeletonHeight\",\"children\",\"noOfLinesValue\",\"useBreakpointValue\",\"numbers\",\"number\",\"length\",\"sizeProps\",\"toString\",\"import_jsx_runtime3\",\"size\",\"borderRadius\",\"boxSize\"]\n}\n"]