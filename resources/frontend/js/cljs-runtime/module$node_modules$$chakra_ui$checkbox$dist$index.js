shadow$provide.module$node_modules$$chakra_ui$checkbox$dist$index=function(global,require,module,exports){function isInputEvent(value){return value&&(0,import_shared_utils.isObject)(value)&&(0,import_shared_utils.isObject)(value.target)}function useCheckboxGroup(props={}){const {defaultValue,value:valueProp,onChange,isDisabled,isNative}=props;props=(0,import_react_use_callback_ref.useCallbackRef)(onChange);const [value,setValue]=(0,import_react_use_controllable_state.useControllableState)({value:valueProp,
defaultValue:defaultValue||[],onChange:props}),handleChange=(0,import_react.useCallback)(eventOrValue=>{if(value){var isChecked=isInputEvent(eventOrValue)?eventOrValue.target.checked:!value.includes(eventOrValue),selectedValue=isInputEvent(eventOrValue)?eventOrValue.target.value:eventOrValue;eventOrValue=isChecked?[...value,selectedValue]:value.filter(v=>String(v)!==String(selectedValue));setValue(eventOrValue)}},[setValue,value]);props=(0,import_react.useCallback)((props2={})=>({...props2,[isNative?
"checked":"isChecked"]:value.some(val=>String(props2.value)===String(val)),onChange:handleChange}),[handleChange,isNative,value]);return{value,isDisabled,onChange:handleChange,setValue,getCheckboxProps:props}}function CheckboxGroup(props){const {colorScheme,size,variant,children,isDisabled}=props,{value,onChange}=useCheckboxGroup(props);props=(0,import_react2.useMemo)(()=>({size,onChange,colorScheme,value,variant,isDisabled}),[size,onChange,colorScheme,value,variant,isDisabled]);return(0,import_jsx_runtime.jsx)(CheckboxGroupProvider,
{value:props,children})}function CheckIcon(props){return(0,import_jsx_runtime2.jsx)(import_system.chakra.svg,{width:"1.2em",viewBox:"0 0 12 10",style:{fill:"none",strokeWidth:2,stroke:"currentColor",strokeDasharray:16},...props,children:(0,import_jsx_runtime2.jsx)("polyline",{points:"1.5 6 4.5 9 10.5 1"})})}function IndeterminateIcon(props){return(0,import_jsx_runtime2.jsx)(import_system.chakra.svg,{width:"1.2em",viewBox:"0 0 24 24",style:{stroke:"currentColor",strokeWidth:4},...props,children:(0,import_jsx_runtime2.jsx)("line",
{x1:"21",x2:"3",y1:"12",y2:"12"})})}function CheckboxIcon(props){const {isIndeterminate,isChecked,...rest}=props;props=isIndeterminate?IndeterminateIcon:CheckIcon;return isChecked||isIndeterminate?(0,import_jsx_runtime2.jsx)(import_system.chakra.div,{style:{display:"flex",alignItems:"center",justifyContent:"center",height:"100%"},children:(0,import_jsx_runtime2.jsx)(props,{...rest})}):null}function omit(object,keysToOmit=[]){object=Object.assign({},object);for(const key of keysToOmit)key in object&&
delete object[key];return object}function useCheckbox(props={}){var formControlProps=(0,import_form_control.useFormControlProps)(props);const {isDisabled,isReadOnly,isRequired,isInvalid,id,onBlur,onFocus,"aria-describedby":ariaDescribedBy}=formControlProps,{defaultChecked,isChecked:checkedProp,isFocusable,onChange,isIndeterminate,name,value,tabIndex,"aria-label":ariaLabel,"aria-labelledby":ariaLabelledBy,"aria-invalid":ariaInvalid,...rest}=props,htmlProps=omit(rest,"isDisabled isReadOnly isRequired isInvalid id onBlur onFocus aria-describedby".split(" ")),
onChangeProp=(0,import_react_use_callback_ref2.useCallbackRef)(onChange),onBlurProp=(0,import_react_use_callback_ref2.useCallbackRef)(onBlur),onFocusProp=(0,import_react_use_callback_ref2.useCallbackRef)(onFocus),[isFocusVisible,setIsFocusVisible]=(0,import_react3.useState)(!1),[isFocused,setFocused]=(0,import_react3.useState)(!1),[isHovered,setHovered]=(0,import_react3.useState)(!1),[isActive,setActive]=(0,import_react3.useState)(!1);(0,import_react3.useEffect)(()=>(0,import_focus_visible.trackFocusVisible)(setIsFocusVisible),
[]);const inputRef=(0,import_react3.useRef)(null),[rootIsLabelElement,setRootIsLabelElement]=(0,import_react3.useState)(!0),[checkedState,setCheckedState]=(0,import_react3.useState)(!!defaultChecked),isControlled=void 0!==checkedProp,isChecked=isControlled?checkedProp:checkedState,handleChange=(0,import_react3.useCallback)(event=>{isReadOnly||isDisabled?event.preventDefault():(isControlled||(isChecked?setCheckedState(event.target.checked):setCheckedState(isIndeterminate?!0:event.target.checked)),
null==onChangeProp?void 0:onChangeProp(event))},[isReadOnly,isDisabled,isChecked,isControlled,isIndeterminate,onChangeProp]);(0,import_react_use_safe_layout_effect.useSafeLayoutEffect)(()=>{inputRef.current&&(inputRef.current.indeterminate=!!isIndeterminate)},[isIndeterminate]);(0,import_react_use_update_effect.useUpdateEffect)(()=>{isDisabled&&setFocused(!1)},[isDisabled,setFocused]);(0,import_react_use_safe_layout_effect.useSafeLayoutEffect)(()=>{const el=inputRef.current;null!=el&&el.form&&(el.form.onreset=
()=>{setCheckedState(!!defaultChecked)})},[]);const trulyDisabled=isDisabled&&!isFocusable,onKeyDown=(0,import_react3.useCallback)(event=>{" "===event.key&&setActive(!0)},[setActive]),onKeyUp=(0,import_react3.useCallback)(event=>{" "===event.key&&setActive(!1)},[setActive]);(0,import_react_use_safe_layout_effect.useSafeLayoutEffect)(()=>{inputRef.current&&inputRef.current.checked!==isChecked&&setCheckedState(inputRef.current.checked)},[inputRef.current]);props=(0,import_react3.useCallback)((props2=
{},forwardedRef=null)=>({...props2,ref:forwardedRef,"data-active":(0,import_shared_utils2.dataAttr)(isActive),"data-hover":(0,import_shared_utils2.dataAttr)(isHovered),"data-checked":(0,import_shared_utils2.dataAttr)(isChecked),"data-focus":(0,import_shared_utils2.dataAttr)(isFocused),"data-focus-visible":(0,import_shared_utils2.dataAttr)(isFocused&&isFocusVisible),"data-indeterminate":(0,import_shared_utils2.dataAttr)(isIndeterminate),"data-disabled":(0,import_shared_utils2.dataAttr)(isDisabled),
"data-invalid":(0,import_shared_utils2.dataAttr)(isInvalid),"data-readonly":(0,import_shared_utils2.dataAttr)(isReadOnly),"aria-hidden":!0,onMouseDown:(0,import_shared_utils2.callAllHandlers)(props2.onMouseDown,event=>{isFocused&&event.preventDefault();setActive(!0)}),onMouseUp:(0,import_shared_utils2.callAllHandlers)(props2.onMouseUp,()=>setActive(!1)),onMouseEnter:(0,import_shared_utils2.callAllHandlers)(props2.onMouseEnter,()=>setHovered(!0)),onMouseLeave:(0,import_shared_utils2.callAllHandlers)(props2.onMouseLeave,
()=>setHovered(!1))}),[isActive,isChecked,isDisabled,isFocused,isFocusVisible,isHovered,isIndeterminate,isInvalid,isReadOnly]);formControlProps=(0,import_react3.useCallback)((props2={},forwardedRef=null)=>({...htmlProps,...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(forwardedRef,node=>{node&&setRootIsLabelElement("LABEL"===node.tagName)}),onClick:(0,import_shared_utils2.callAllHandlers)(props2.onClick,()=>{var _a;rootIsLabelElement||(null==(_a=inputRef.current)?void 0:_a.click(),requestAnimationFrame(()=>
{var _a2;null==(_a2=inputRef.current)?void 0:_a2.focus()}))}),"data-disabled":(0,import_shared_utils2.dataAttr)(isDisabled),"data-checked":(0,import_shared_utils2.dataAttr)(isChecked),"data-invalid":(0,import_shared_utils2.dataAttr)(isInvalid)}),[htmlProps,isDisabled,isChecked,isInvalid,rootIsLabelElement]);const getInputProps=(0,import_react3.useCallback)((props2={},forwardedRef=null)=>({...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(inputRef,forwardedRef),type:"checkbox",name,value,id,
tabIndex,onChange:(0,import_shared_utils2.callAllHandlers)(props2.onChange,handleChange),onBlur:(0,import_shared_utils2.callAllHandlers)(props2.onBlur,onBlurProp,()=>setFocused(!1)),onFocus:(0,import_shared_utils2.callAllHandlers)(props2.onFocus,onFocusProp,()=>setFocused(!0)),onKeyDown:(0,import_shared_utils2.callAllHandlers)(props2.onKeyDown,onKeyDown),onKeyUp:(0,import_shared_utils2.callAllHandlers)(props2.onKeyUp,onKeyUp),required:isRequired,checked:isChecked,disabled:trulyDisabled,readOnly:isReadOnly,
"aria-label":ariaLabel,"aria-labelledby":ariaLabelledBy,"aria-invalid":ariaInvalid?!!ariaInvalid:isInvalid,"aria-describedby":ariaDescribedBy,"aria-disabled":isDisabled,style:import_visually_hidden.visuallyHiddenStyle}),[name,value,id,handleChange,onBlurProp,onFocusProp,onKeyDown,onKeyUp,isRequired,isChecked,trulyDisabled,isReadOnly,ariaLabel,ariaLabelledBy,ariaInvalid,isInvalid,ariaDescribedBy,isDisabled,tabIndex]),getLabelProps=(0,import_react3.useCallback)((props2={},forwardedRef=null)=>({...props2,
ref:forwardedRef,onMouseDown:(0,import_shared_utils2.callAllHandlers)(props2.onMouseDown,stopEvent),onTouchStart:(0,import_shared_utils2.callAllHandlers)(props2.onTouchStart,stopEvent),"data-disabled":(0,import_shared_utils2.dataAttr)(isDisabled),"data-checked":(0,import_shared_utils2.dataAttr)(isChecked),"data-invalid":(0,import_shared_utils2.dataAttr)(isInvalid)}),[isChecked,isDisabled,isInvalid]);return{state:{isInvalid,isFocused,isChecked,isActive,isHovered,isIndeterminate,isDisabled,isReadOnly,
isRequired},getRootProps:formControlProps,getCheckboxProps:props,getInputProps,getLabelProps,htmlProps}}function stopEvent(event){event.preventDefault();event.stopPropagation()}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,
key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{Checkbox:()=>Checkbox,CheckboxGroup:()=>CheckboxGroup,CheckboxIcon:()=>CheckboxIcon,useCheckbox:()=>useCheckbox,useCheckboxGroup:()=>useCheckboxGroup});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_react2=require("module$node_modules$react$index");
module=require("module$node_modules$$chakra_ui$react_context$dist$index");var [CheckboxGroupProvider,useCheckboxGroupContext]=(0,module.createContext)({name:"CheckboxGroupContext",strict:!1}),import_react_use_callback_ref=require("module$node_modules$$chakra_ui$react_use_callback_ref$dist$index"),import_react_use_controllable_state=require("module$node_modules$$chakra_ui$react_use_controllable_state$dist$index"),import_shared_utils=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),
import_react=require("module$node_modules$react$index"),import_jsx_runtime=require("module$node_modules$react$jsx_runtime");CheckboxGroup.displayName="CheckboxGroup";var import_system=require("module$node_modules$$chakra_ui$system$dist$index"),import_jsx_runtime2=require("module$node_modules$react$jsx_runtime"),import_system2=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils3=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_react4=require("module$node_modules$react$index"),
import_form_control=require("module$node_modules$$chakra_ui$form_control$dist$index"),import_react_use_safe_layout_effect=require("module$node_modules$$chakra_ui$react_use_safe_layout_effect$dist$index"),import_react_use_update_effect=require("module$node_modules$$chakra_ui$react_use_update_effect$dist$index"),import_react_use_callback_ref2=require("module$node_modules$$chakra_ui$react_use_callback_ref$dist$index"),import_react_use_merge_refs=require("module$node_modules$$chakra_ui$react_use_merge_refs$dist$index"),
import_shared_utils2=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_visually_hidden=require("module$node_modules$$chakra_ui$visually_hidden$dist$index"),import_focus_visible=require("module$node_modules$$zag_js$focus_visible$dist$index"),import_react3=require("module$node_modules$react$index"),import_jsx_runtime3=require("module$node_modules$react$jsx_runtime"),controlStyles={display:"inline-flex",alignItems:"center",justifyContent:"center",verticalAlign:"top",userSelect:"none",
flexShrink:0},rootStyles={cursor:"pointer",display:"inline-flex",alignItems:"center",verticalAlign:"top",position:"relative"},checkAnim=(0,import_system2.keyframes)({from:{opacity:0,strokeDashoffset:16,transform:"scale(0.95)"},to:{opacity:1,strokeDashoffset:0,transform:"scale(1)"}}),indeterminateOpacityAnim=(0,import_system2.keyframes)({from:{opacity:0},to:{opacity:1}}),indeterminateScaleAnim=(0,import_system2.keyframes)({from:{transform:"scaleX(0.65)"},to:{transform:"scaleX(1)"}}),Checkbox=(0,import_system2.forwardRef)(function(props,
ref){var group=useCheckboxGroupContext();const styles=(0,import_system2.useMultiStyleConfig)("Checkbox",{...group,...props});props=(0,import_system2.omitThemingProps)(props);const {spacing="0.5rem",className,children,iconColor,iconSize,icon=(0,import_jsx_runtime3.jsx)(CheckboxIcon,{}),isChecked:isCheckedProp,isDisabled=null==group?void 0:group.isDisabled,onChange:onChangeProp,inputProps,...rest}=props;let isChecked=isCheckedProp;(null==group?0:group.value)&&props.value&&(isChecked=group.value.includes(props.value));
let onChange=onChangeProp;(null==group?0:group.onChange)&&props.value&&(onChange=(0,import_shared_utils3.callAll)(group.onChange,onChangeProp));const {state,getInputProps,getCheckboxProps,getLabelProps,getRootProps}=useCheckbox({...rest,isDisabled,isChecked,onChange});group=(0,import_react4.useMemo)(()=>({animation:state.isIndeterminate?`${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`:`${checkAnim} 200ms linear`,fontSize:iconSize,color:iconColor,...styles.icon}),[iconColor,
iconSize,,state.isIndeterminate,styles.icon]);group=(0,import_react4.cloneElement)(icon,{__css:group,isIndeterminate:state.isIndeterminate,isChecked:state.isChecked});return(0,import_jsx_runtime3.jsxs)(import_system2.chakra.label,{__css:{...rootStyles,...styles.container},className:(0,import_shared_utils3.cx)("chakra-checkbox",className),...getRootProps(),children:[(0,import_jsx_runtime3.jsx)("input",{className:"chakra-checkbox__input",...getInputProps(inputProps,ref)}),(0,import_jsx_runtime3.jsx)(import_system2.chakra.span,
{__css:{...controlStyles,...styles.control},className:"chakra-checkbox__control",...getCheckboxProps(),children:group}),children&&(0,import_jsx_runtime3.jsx)(import_system2.chakra.span,{className:"chakra-checkbox__label",...getLabelProps(),__css:{marginStart:spacing,...styles.label},children})]})});Checkbox.displayName="Checkbox"}
//# sourceMappingURL=module$node_modules$$chakra_ui$checkbox$dist$index.js.map
