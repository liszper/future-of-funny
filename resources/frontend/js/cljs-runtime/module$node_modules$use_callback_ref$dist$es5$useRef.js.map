{
"version":3,
"file":"module$node_modules$use_callback_ref$dist$es5$useRef.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,cAAR,CAAyB,IAAK,EAC9B,KAAIC,QAAUP,OAAA,CAAQ,iCAAR,CAuCdE,QAAQI,CAAAA,cAAR,CAxBAA,QAAuB,CAACE,YAAD,CAAeC,QAAf,CAAyB,CAC5C,IAAIC,IAAM,GAAIH,OAAQI,CAAAA,QAAZ,EAAsB,QAAS,EAAG,CAAE,MAAQ,CAElDN,MAAOG,YAF2C,CAIxCC,QAJwC,CAMlDG,OAAQ,CACAC,WAAU,EAAA,CACV,MAAOH,IAAIL,CAAAA,KADD,CADV,CAIAQ,WAAO,CAACR,KAAD,CAAQ,CACf,IAAIS,KAAOJ,GAAIL,CAAAA,KACXS,KAAJ,GAAaT,KAAb,GACIK,GAAIL,CAAAA,KACJ,CADYA,KACZ,CAAAK,GAAID,CAAAA,QAAJ,CAAaJ,KAAb;AAAoBS,IAApB,CAFJ,CAFe,CAJf,CAN0C,CAAV,CAAlC,CAAA,CAkBH,CAlBG,CAoBVJ,IAAID,CAAAA,QAAJ,CAAeA,QACf,OAAOC,IAAIE,CAAAA,MAtBiC,CAnBiE;",
"sources":["node_modules/use-callback-ref/dist/es5/useRef.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$use_callback_ref$dist$es5$useRef\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCallbackRef = void 0;\nvar react_1 = require(\"react\");\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nfunction useCallbackRef(initialValue, callback) {\n    var ref = (0, react_1.useState)(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\nexports.useCallbackRef = useCallbackRef;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","useCallbackRef","react_1","initialValue","callback","ref","useState","facade","current","last"]
}
