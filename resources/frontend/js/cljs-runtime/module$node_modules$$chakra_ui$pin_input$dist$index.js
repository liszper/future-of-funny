shadow$provide.module$node_modules$$chakra_ui$pin_input$dist$index=function(global,require,module,exports){function validate(value,type){const NUMERIC_REGEX=/^[0-9]+$/,ALPHA_NUMERIC_REGEX=/^[a-zA-Z0-9]+$/i;return("alphanumeric"===type?ALPHA_NUMERIC_REGEX:NUMERIC_REGEX).test(value)}function usePinInput(props={}){const {autoFocus,value,defaultValue,onChange,onComplete,placeholder="â—‹",manageFocus=!0,otp=!1,id:idProp,isDisabled,isInvalid,type="number",mask}=props;props=(0,import_react.useId)();const id=
null!=idProp?idProp:`pin-input-${props}`,descendants=usePinInputDescendants(),[moveFocus,setMoveFocus]=(0,import_react.useState)(!0),[focusedIndex,setFocusedIndex]=(0,import_react.useState)(-1),[values,setValues]=(0,import_react_use_controllable_state.useControllableState)({defaultValue:(null==defaultValue?void 0:defaultValue.split(""))||[],value:null==value?void 0:value.split(""),onChange:values2=>null==onChange?void 0:onChange(values2.join(""))});(0,import_react.useEffect)(()=>{if(autoFocus){const first=
descendants.first();first&&requestAnimationFrame(()=>{first.node.focus()})}},[descendants]);const focusNext=(0,import_react.useCallback)(index=>{if(moveFocus&&manageFocus){var next=descendants.next(index,!1);next&&requestAnimationFrame(()=>{next.node.focus()})}},[descendants,moveFocus,manageFocus]),setValue=(0,import_react.useCallback)((value2,index,handleFocus=!0)=>{const nextValues=[...values];nextValues[index]=value2;setValues(nextValues);""!==value2&&nextValues.length===descendants.count()&&nextValues.every(inputValue=>
null!=inputValue&&""!==inputValue)?null==onComplete?void 0:onComplete(nextValues.join("")):handleFocus&&focusNext(index)},[values,setValues,focusNext,onComplete,descendants]);props=(0,import_react.useCallback)(()=>{var _a,values2=Array(descendants.count()).fill("");setValues(values2);values2=descendants.first();null==(_a=null==values2?void 0:values2.node)?void 0:_a.focus()},[descendants,setValues]);const getNextValue=(0,import_react.useCallback)((value2,eventValue)=>{let nextValue=eventValue;0<(null==
value2?void 0:value2.length)&&(value2[0]===eventValue.charAt(0)?nextValue=eventValue.charAt(1):value2[0]===eventValue.charAt(1)&&(nextValue=eventValue.charAt(0)));return nextValue},[]);return{getInputProps:(0,import_react.useCallback)(props2=>{const {index,...rest}=props2;props2=focusedIndex===index;const inputType="number"===type?"tel":"text";return{"aria-label":"Please enter your pin code",inputMode:"number"===type?"numeric":"text",type:mask?"password":inputType,...rest,id:`${id}-${index}`,disabled:isDisabled,
"aria-invalid":(0,import_shared_utils.ariaAttr)(isInvalid),onChange:(0,import_shared_utils.callAllHandlers)(rest.onChange,event=>{event=event.target.value;const nextValue=getNextValue(values[index],event);""===nextValue?setValue("",index):2<event.length?validate(event,type)&&(event=event.split("").filter((_,index2)=>index2<descendants.count()),setValues(event),event.length===descendants.count()&&(null==onComplete?void 0:onComplete(event.join("")))):(validate(nextValue,type)&&setValue(nextValue,index),
setMoveFocus(!0))}),onKeyDown:(0,import_shared_utils.callAllHandlers)(rest.onKeyDown,event=>{var _a;if("Backspace"===event.key&&manageFocus)if(""===event.target.value){if(event=descendants.prev(index,!1))setValue("",index-1,!1),null==(_a=event.node)?void 0:_a.focus(),setMoveFocus(!0)}else setMoveFocus(!1)}),onFocus:(0,import_shared_utils.callAllHandlers)(rest.onFocus,()=>{setFocusedIndex(index)}),onBlur:(0,import_shared_utils.callAllHandlers)(rest.onBlur,()=>{setFocusedIndex(-1)}),value:values[index]||
"",autoComplete:otp?"one-time-code":"off",placeholder:props2?"":placeholder}},[descendants,focusedIndex,getNextValue,id,isDisabled,mask,isInvalid,manageFocus,onComplete,otp,placeholder,setValue,setValues,type,values]),id,descendants,values,setValue,setValues,clear:props}}function usePinInputField(props={},ref=null){const {getInputProps}=usePinInputContext(),{index,register}=usePinInputDescendant();return getInputProps({...props,ref:(0,import_react_use_merge_refs.mergeRefs)(register,ref),index})}function PinInput(props){const styles=
(0,import_system.useStyleConfig)("PinInput",props),{children,...rest}=(0,import_system.omitThemingProps)(props),{descendants,...context}=usePinInput(rest);props=(0,import_react_children_utils.getValidChildren)(children).map(child=>(0,import_react2.cloneElement)(child,{__css:styles}));return(0,import_jsx_runtime.jsx)(PinInputDescendantsProvider,{value:descendants,children:(0,import_jsx_runtime.jsx)(PinInputProvider,{value:context,children:props})})}var __defProp=Object.defineProperty,__getOwnPropDesc=
Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,
{PinInput:()=>PinInput,PinInputDescendantsProvider:()=>PinInputDescendantsProvider,PinInputField:()=>PinInputField,PinInputProvider:()=>PinInputProvider,usePinInput:()=>usePinInput,usePinInputContext:()=>usePinInputContext,usePinInputDescendant:()=>usePinInputDescendant,usePinInputDescendants:()=>usePinInputDescendants,usePinInputDescendantsContext:()=>usePinInputDescendantsContext,usePinInputField:()=>usePinInputField});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);
var import_system=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils2=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_react_children_utils=require("module$node_modules$$chakra_ui$react_children_utils$dist$index");module=require("module$node_modules$$chakra_ui$descendant$dist$index");var import_react_use_controllable_state=require("module$node_modules$$chakra_ui$react_use_controllable_state$dist$index"),import_shared_utils=require("module$node_modules$$chakra_ui$shared_utils$dist$index");
global=require("module$node_modules$$chakra_ui$react_context$dist$index");var import_react_use_merge_refs=require("module$node_modules$$chakra_ui$react_use_merge_refs$dist$index"),import_react=require("module$node_modules$react$index"),[PinInputDescendantsProvider,usePinInputDescendantsContext,usePinInputDescendants,usePinInputDescendant]=(0,module.createDescendantContext)(),[PinInputProvider,usePinInputContext]=(0,global.createContext)({name:"PinInputContext",errorMessage:"usePinInputContext: `context` is undefined. Seems you forgot to all pin input fields within `\x3cPinInput /\x3e`"}),
import_react2=require("module$node_modules$react$index"),import_jsx_runtime=require("module$node_modules$react$jsx_runtime");PinInput.displayName="PinInput";var PinInputField=(0,import_system.forwardRef)(function(props,ref){ref=usePinInputField(props,ref);return(0,import_jsx_runtime.jsx)(import_system.chakra.input,{...ref,className:(0,import_shared_utils2.cx)("chakra-pin-input",props.className)})});PinInputField.displayName="PinInputField"}
//# sourceMappingURL=module$node_modules$$chakra_ui$pin_input$dist$index.js.map
