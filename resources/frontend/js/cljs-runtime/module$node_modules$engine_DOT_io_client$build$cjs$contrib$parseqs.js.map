{
"version":3,
"file":"module$node_modules$engine_DOT_io_client$build$cjs$contrib$parseqs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAU/HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,MAAR,CAAiBJ,OAAQK,CAAAA,MAAzB,CAAkC,IAAK,EAYvCL,QAAQK,CAAAA,MAAR,CAXAA,QAAe,CAACC,GAAD,CAAM,CACjB,IAAIC,IAAM,EACV,KAAK,IAAIC,CAAT,GAAcF,IAAd,CACQA,GAAIG,CAAAA,cAAJ,CAAmBD,CAAnB,CAAJ,GACQD,GAAIG,CAAAA,MAER,GADIH,GACJ,EADW,MACX,EAAAA,GAAA,EAAOI,kBAAA,CAAmBH,CAAnB,CAAP,CAA+B,MAA/B,CAAqCG,kBAAA,CAAmBL,GAAA,CAAIE,CAAJ,CAAnB,CAHzC,CAMJ,OAAOD,IATU,CA2BrBP,QAAQI,CAAAA,MAAR,CATAA,QAAe,CAACQ,EAAD,CAAK,CAChB,IAAIC,IAAM,EACNC,GAAAA,CAAQF,EAAGG,CAAAA,KAAH,CAAS,MAAT,CACZ,KAAK,IAAIP,EAAI,CAAR,CAAWQ,EAAIF,EAAMJ,CAAAA,MAA1B,CAAkCF,CAAlC,CAAsCQ,CAAtC,CAAyCR,CAAA,EAAzC,CAA8C,CAC1C,IAAIS,KAAOH,EAAA,CAAMN,CAAN,CAASO,CAAAA,KAAT,CAAe,MAAf,CACXF;GAAA,CAAIK,kBAAA,CAAmBD,IAAA,CAAK,CAAL,CAAnB,CAAJ,CAAA,CAAmCC,kBAAA,CAAmBD,IAAA,CAAK,CAAL,CAAnB,CAFO,CAI9C,MAAOJ,IAPS,CA9B2G;",
"sources":["node_modules/engine_DOT_io-client/build/cjs/contrib/parseqs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$engine_DOT_io_client$build$cjs$contrib$parseqs\"] = function(global,require,module,exports) {\n\"use strict\";\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nfunction encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\nexports.encode = encode;\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nfunction decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\nexports.decode = decode;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","decode","encode","obj","str","i","hasOwnProperty","length","encodeURIComponent","qs","qry","pairs","split","l","pair","decodeURIComponent"]
}
