{"version":3,"sources":["backend/ws.cljs"],"mappings":"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","names":["js/backend","js/backend.ws","js/backend.ws.server","backend.ws/server","cljs.core.atom","backend.ws/make-server","js/shadow.js.shim.module$socket_io.Server","backend.ws/emit","room","k","v","c__33396__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__33397__auto__","switch__33325__auto__","state_35055","state_val_35056","statearr-35063","statearr-35066","inst_35005","inst_35007","cljs.core.println","statearr-35069","inst_35037","statearr-35072","_","statearr-35075","cljs.core/rest","ex35068","statearr-35078","js/Error","statearr-35079","inst_35036","cljs.core/ExceptionInfo","statearr-35083","statearr-35084","statearr-35085","inst_35047","statearr-35087","inst_35053","cljs.core.async.impl.ioc-helpers/return-chan","inst_35019","inst_35020","statearr-35091","statearr-35094","cljs.core/cons","inst_35013","cljs.core/deref","inst_35014","inst_35015","statearr-35095","statearr-35097","statearr-35098","inst_35050","statearr-35101","statearr-35103","inst_35030","statearr-35105","inst_35032","inst_35033","inst_35034","cljs.core.async.interop/p->c","cljs.core.async.impl.ioc-helpers/take!","statearr-35109","ex35104","statearr-35110","statearr-35111","inst_35039","cljs.core/ex-data","inst_35040","inst_35041","cljs.core._EQ_","statearr-35113","inst_35044","statearr-35116","statearr-35117","statearr-35119","inst_35026","inst_35027","statearr-35120","statearr-35121","statearr-35123","statearr-35124","statearr-35127","state-machine__33326__auto__","ret-value__33327__auto__","result__33328__auto__","cljs.core/keyword-identical?","ex__33329__auto__","e35130","statearr-35132","cljs.core/seq","statearr-35133","cljs.core/first","state__33398__auto__","statearr-35139","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cognitect.transit/write","cognitect.transit.writer","backend.ws/init","handler","io","cljs.core/reset!","socket","id","handshake","cljs.core.js__GT_clj","rooms","brave.swords/obj->clj","data","param","message","vec__35148","cljs.core.nth","e35151","e__29854__auto__","cljs.reader.read_string","cljs.core.apply","cljs.core/str","e35153","cognitect.transit/read","cognitect.transit.reader","G__35155","G__35156","cljs.core.assoc","reason"],"sourcesContent":["(ns backend.ws\n  (:require-macros [cljs.core.async.macros :refer [go go-loop]]\n                   [cljs.core.async.interop :refer [<p!]])\n  (:require [\"input\" :as input]\n            [\"ws\" :as ws]\n            [\"socket.io\" :as sio]\n            [\"pikola\" :as pikola]\n            [brave.swords :as x]\n            [cljs.reader :refer [read-string]]\n            [macros :refer [safe safe-await]]\n            [cljs.core.async.interop :refer-macros [<p!]]\n            [cljs.core.async :as async :refer [>! <! put! chan alts! timeout close!]]\n            [cognitect.transit :as t]))\n\n(set! *warn-on-infer* false)\n\n(defonce server (atom nil))\n\n(defn make-server []\n  (new sio/Server\n       #js {:cors\n            {:origin \"http://localhost:3000\"\n             :methods [\"GET\" \"POST\"]\n             :allowedHeaders [\"my-custom-header\"]\n             :credentials true}}))\n\n(defn emit [room k v]\n  (safe-await\n   (.emit (.to @server room)\n          k\n          (if (string? v)\n            v\n            (safe (t/write (t/writer :json) v))))))\n\n(defn init [handler]\n  (let [io (make-server)]\n    (reset! server io)\n    (.listen @server 8080)\n    (.on @server \"connection\"\n         (fn [^js/Foo.Bar socket]\n           (let [id (aget socket \"id\")\n                 handshake (js->clj (aget socket \"handshake\"))\n                 rooms (x/obj->clj (aget socket \"rooms\"))\n                 data (js->clj (aget socket \"data\"))\n                 param {:handshake handshake :rooms rooms :data data :id id}]\n             (println \"New client: \" id)\n\n             ;(println \"Handshake: \" handshake)\n\n             (.join socket #js [\"general\"])\n\n             ;(println \"Rooms: \" rooms)\n\n             ;(println \"Data: \" data)\n\n             (.on (.-conn socket)\n                  \"packet\" (fn [message]\n                             (let [[k v] (safe (read-string (apply str (rest (.-data message)))))\n                                   data (safe (t/read (t/reader :json) v))]\n                               (case (.-type message)\n                                 \"message\" (handler (assoc param :message data :message-type k))\n                                 nil;(println \"packet: \" (js->clj message))\n                                 ))))\n\n             ;(.on socket\n             ;     \"test\" (fn [message] (println (t/read (t/reader :json) message))))\n\n             (.on (.-conn socket)\n                  \"close\" (fn [reason] (println \"Close connection: \" id)))\n\n             ;(.on (.-conn socket)\n             ;     \"disconnecting\" (fn [reason] (println \"disconnecting: \" reason)))\n\n             ;(.on (.-conn socket)\n             ;     \"disconnect\" (fn [reason] (println \"disconnect: \" reason)))\n             )))))"]}