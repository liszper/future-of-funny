shadow$provide.module$node_modules$$chakra_ui$skeleton$dist$index=function(global,require,module,exports){function useIsFirstRender(){const isFirstRender=(0,import_react.useRef)(!0);(0,import_react.useEffect)(()=>{isFirstRender.current=!1},[]);return isFirstRender.current}function range(count){return Array(count).fill(1).map((_,index)=>index+1)}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,
__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{Skeleton:()=>Skeleton,SkeletonCircle:()=>SkeletonCircle,SkeletonText:()=>SkeletonText});module.exports=(mod=>
__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global);var import_react_use_previous=require("module$node_modules$$chakra_ui$react_use_previous$dist$index"),import_shared_utils=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_system=require("module$node_modules$$chakra_ui$system$dist$index"),import_react=require("module$node_modules$react$index"),import_jsx_runtime=require("module$node_modules$react$jsx_runtime"),StyledSkeleton=(0,import_system.chakra)("div",{baseStyle:{boxShadow:"none",
backgroundClip:"padding-box",cursor:"default",color:"transparent",pointerEvents:"none",userSelect:"none","\x26::before, \x26::after, *":{visibility:"hidden"}}}),$startColor=(0,import_system.cssVar)("skeleton-start-color"),$endColor=(0,import_system.cssVar)("skeleton-end-color"),fade=(0,import_system.keyframes)({from:{opacity:0},to:{opacity:1}}),bgFade=(0,import_system.keyframes)({from:{borderColor:$startColor.reference,background:$startColor.reference},to:{borderColor:$endColor.reference,background:$endColor.reference}}),
Skeleton=(0,import_system.forwardRef)((props,ref)=>{var skeletonProps={fadeDuration:.4,speed:.8,...props};props=(0,import_system.useStyleConfig)("Skeleton",skeletonProps);const isFirstRender=useIsFirstRender(),{startColor="",endColor="",isLoaded,fadeDuration,speed,className,fitContent,...rest}=(0,import_system.omitThemingProps)(skeletonProps),[startColorVar,endColorVar]=(0,import_system.useToken)("colors",[startColor,endColor]);skeletonProps=(0,import_react_use_previous.usePrevious)(isLoaded);const _className=
(0,import_shared_utils.cx)("chakra-skeleton",className),cssVarStyles={...(startColorVar&&{[$startColor.variable]:startColorVar}),...(endColorVar&&{[$endColor.variable]:endColorVar})};return isLoaded?(0,import_jsx_runtime.jsx)(import_system.chakra.div,{ref,className:_className,__css:{animation:isFirstRender||skeletonProps?"none":`${fade} ${fadeDuration}s`},...rest}):(0,import_jsx_runtime.jsx)(StyledSkeleton,{ref,className:_className,...rest,__css:{width:fitContent?"fit-content":void 0,...props,...cssVarStyles,
_dark:{...props._dark,...cssVarStyles},animation:`${speed}s linear infinite alternate ${bgFade}`}})});Skeleton.displayName="Skeleton";var import_media_query=require("module$node_modules$$chakra_ui$media_query$dist$index"),import_system2=require("module$node_modules$$chakra_ui$system$dist$index"),import_shared_utils2=require("module$node_modules$$chakra_ui$shared_utils$dist$index"),import_jsx_runtime2=require("module$node_modules$react$jsx_runtime"),SkeletonText=props=>{const {noOfLines=3,spacing=
"0.5rem",skeletonHeight="0.5rem",className,startColor,endColor,isLoaded,fadeDuration,speed,children,...rest}=props,noOfLinesValue=(0,import_media_query.useBreakpointValue)("number"===typeof noOfLines?[noOfLines]:noOfLines)||3,numbers=range(noOfLinesValue);props=(0,import_shared_utils2.cx)("chakra-skeleton__group",className);return(0,import_jsx_runtime2.jsx)(import_system2.chakra.div,{className:props,...rest,children:numbers.map((number,index)=>{if(isLoaded&&0<index)return null;if(isLoaded)var JSCompiler_temp=
null;else{JSCompiler_temp=number===numbers.length?"0":spacing;var JSCompiler_inline_result=1<noOfLinesValue?number===numbers.length?"80%":"100%":"100%";JSCompiler_temp={mb:JSCompiler_temp,width:JSCompiler_inline_result,height:skeletonHeight}}return(0,import_jsx_runtime2.jsx)(Skeleton,{startColor,endColor,isLoaded,fadeDuration,speed,...JSCompiler_temp,children:0===index?children:void 0},numbers.length.toString()+number)})})};SkeletonText.displayName="SkeletonText";var import_jsx_runtime3=require("module$node_modules$react$jsx_runtime"),
SkeletonCircle=({size="2rem",...rest})=>(0,import_jsx_runtime3.jsx)(Skeleton,{borderRadius:"full",boxSize:size,...rest});SkeletonCircle.displayName="SkeletonCircle"}
//# sourceMappingURL=module$node_modules$$chakra_ui$skeleton$dist$index.js.map
