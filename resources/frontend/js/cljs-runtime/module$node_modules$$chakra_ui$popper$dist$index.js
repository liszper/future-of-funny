shadow$provide.module$node_modules$$chakra_ui$popper$dist$index=function(global,require,module,exports){function getBoxShadow(placement){if(placement.includes("top"))return"1px 1px 1px 0 var(--popper-arrow-shadow-color)";if(placement.includes("bottom"))return"-1px -1px 1px 0 var(--popper-arrow-shadow-color)";if(placement.includes("right"))return"-1px 1px 1px 0 var(--popper-arrow-shadow-color)";if(placement.includes("left"))return"1px -1px 1px 0 var(--popper-arrow-shadow-color)"}function getPopperPlacement(placement,
dir="ltr"){var _a,_b;const value=(null==(_a=logicals[placement])?void 0:_a[dir])||placement;return"ltr"===dir?value:null!=(_b=opposites[placement])?_b:value}function usePopper(props={}){const {enabled=!0,modifiers,placement:placementProp="bottom",strategy="absolute",arrowPadding=8,eventListeners=!0,offset,gutter=8,flip=!0,boundary="clippingParents",preventOverflow=!0,matchWidth:matchWidth2,direction="ltr"}=props,reference=(0,import_react.useRef)(null),popper=(0,import_react.useRef)(null),instance=
(0,import_react.useRef)(null),placement=getPopperPlacement(placementProp,direction),cleanup=(0,import_react.useRef)(()=>{}),setupPopper=(0,import_react.useCallback)(()=>{var _a;enabled&&reference.current&&popper.current&&(null==(_a=cleanup.current)?void 0:_a.call(cleanup),_a=import_core,instance.current=_a.createPopper.call(_a,reference.current,popper.current,{placement,modifiers:[innerArrow,positionArrow,transformOrigin,{...matchWidth,enabled:!!matchWidth2},{name:"eventListeners",...("object"===
typeof eventListeners?{enabled:!0,options:{...defaultEventListeners,...eventListeners}}:{enabled:eventListeners,options:defaultEventListeners})},{name:"arrow",options:{padding:arrowPadding}},{name:"offset",options:{offset:null!=offset?offset:[0,gutter]}},{name:"flip",enabled:!!flip,options:{padding:8}},{name:"preventOverflow",enabled:!!preventOverflow,options:{boundary}},...(null!=modifiers?modifiers:[])],strategy}),instance.current.forceUpdate(),cleanup.current=instance.current.destroy)},[placement,
enabled,modifiers,matchWidth2,eventListeners,arrowPadding,offset,gutter,flip,preventOverflow,boundary,strategy]);(0,import_react.useEffect)(()=>()=>{var _a;reference.current||popper.current||(null==(_a=instance.current)?void 0:_a.destroy(),instance.current=null)},[]);const referenceRef=(0,import_react.useCallback)(node=>{reference.current=node;setupPopper()},[setupPopper]);props=(0,import_react.useCallback)((props2={},ref=null)=>({...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(referenceRef,
ref)}),[referenceRef]);const popperRef=(0,import_react.useCallback)(node=>{popper.current=node;setupPopper()},[setupPopper]),getPopperProps=(0,import_react.useCallback)((props2={},ref=null)=>({...props2,ref:(0,import_react_use_merge_refs.mergeRefs)(popperRef,ref),style:{...props2.style,position:strategy,minWidth:matchWidth2?void 0:"max-content",inset:"0 auto auto 0"}}),[strategy,popperRef,matchWidth2]),getArrowProps=(0,import_react.useCallback)((props2={},ref=null)=>{const {size,shadowColor,bg,style,
...rest}=props2,{size:size$jscomp$0,shadowColor:shadowColor$jscomp$0,bg:bg$jscomp$0,style:style$jscomp$0}=props2;props2={...style$jscomp$0,position:"absolute"};size$jscomp$0&&(props2["--popper-arrow-size"]=size$jscomp$0);shadowColor$jscomp$0&&(props2["--popper-arrow-shadow-color"]=shadowColor$jscomp$0);bg$jscomp$0&&(props2["--popper-arrow-bg"]=bg$jscomp$0);return{...rest,ref,"data-popper-arrow":"",style:props2}},[]),getArrowInnerProps=(0,import_react.useCallback)((props2={},ref=null)=>({...props2,
ref,"data-popper-arrow-inner":""}),[]);return{update(){var _a;null==(_a=instance.current)?void 0:_a.update()},forceUpdate(){var _a;null==(_a=instance.current)?void 0:_a.forceUpdate()},transformOrigin:cssVars.transformOrigin.varRef,referenceRef,popperRef,getPopperProps,getArrowProps,getArrowInnerProps,getReferenceProps:props}}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,
__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{popperCSSVars:()=>cssVars,usePopper:()=>usePopper});module.exports=(mod=>__copyProps(__defProp({},"__esModule",
{value:!0}),mod))(global);var import_react_use_merge_refs=require("module$node_modules$$chakra_ui$react_use_merge_refs$dist$index"),import_core=require("module$node_modules$$popperjs$core$dist$cjs$popper"),import_react=require("module$node_modules$react$index");require=(value,fallback)=>({var:value,varRef:fallback?`var(${value}, ${fallback})`:`var(${value})`});var cssVars={arrowShadowColor:require("--popper-arrow-shadow-color"),arrowSize:require("--popper-arrow-size","8px"),arrowSizeHalf:require("--popper-arrow-size-half"),
arrowBg:require("--popper-arrow-bg"),transformOrigin:require("--popper-transform-origin"),arrowOffset:require("--popper-arrow-offset")},transforms={top:"bottom center","top-start":"bottom left","top-end":"bottom right",bottom:"top center","bottom-start":"top left","bottom-end":"top right",left:"right center","left-start":"right top","left-end":"right bottom",right:"left center","right-start":"left top","right-end":"left bottom"},defaultEventListeners={scroll:!0,resize:!0},matchWidth={name:"matchWidth",
enabled:!0,phase:"beforeWrite",requires:["computeStyles"],fn:({state})=>{state.styles.popper.width=`${state.rects.reference.width}px`},effect:({state})=>()=>{state.elements.popper.style.width=`${state.elements.reference.offsetWidth}px`}},transformOrigin={name:"transformOrigin",enabled:!0,phase:"write",fn:({state})=>{state.elements.popper.style.setProperty(cssVars.transformOrigin.var,transforms[state.placement])},effect:({state})=>()=>{state.elements.popper.style.setProperty(cssVars.transformOrigin.var,
transforms[state.placement])}},positionArrow={name:"positionArrow",enabled:!0,phase:"afterWrite",fn:({state})=>{var _a;if(state.placement){var overrides=getArrowStyle(state.placement);if((null==(_a=state.elements)?0:_a.arrow)&&overrides){Object.assign(state.elements.arrow.style,{[overrides.property]:overrides.value,width:cssVars.arrowSize.varRef,height:cssVars.arrowSize.varRef,zIndex:-1});_a={[cssVars.arrowSizeHalf.var]:`calc(${cssVars.arrowSize.varRef} / 2)`,[cssVars.arrowOffset.var]:`calc(${cssVars.arrowSizeHalf.varRef} * -1)`};
for(const property in _a)state.elements.arrow.style.setProperty(property,_a[property])}}}},getArrowStyle=placement=>{if(placement.startsWith("top"))return{property:"bottom",value:cssVars.arrowOffset.varRef};if(placement.startsWith("bottom"))return{property:"top",value:cssVars.arrowOffset.varRef};if(placement.startsWith("left"))return{property:"right",value:cssVars.arrowOffset.varRef};if(placement.startsWith("right"))return{property:"left",value:cssVars.arrowOffset.varRef}},innerArrow={name:"innerArrow",
enabled:!0,phase:"main",requires:["arrow"],fn:({state})=>{setInnerArrowStyles(state)},effect:({state})=>()=>{setInnerArrowStyles(state)}},setInnerArrowStyles=state=>{if(state.elements.arrow){var inner=state.elements.arrow.querySelector("[data-popper-arrow-inner]");inner&&((state=getBoxShadow(state.placement))&&inner.style.setProperty("--popper-arrow-default-shadow",state),Object.assign(inner.style,{transform:"rotate(45deg)",background:cssVars.arrowBg.varRef,top:0,left:0,width:"100%",height:"100%",
position:"absolute",zIndex:"inherit",boxShadow:"var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))"}))}},logicals={"start-start":{ltr:"left-start",rtl:"right-start"},"start-end":{ltr:"left-end",rtl:"right-end"},"end-start":{ltr:"right-start",rtl:"left-start"},"end-end":{ltr:"right-end",rtl:"left-end"},start:{ltr:"left",rtl:"right"},end:{ltr:"right",rtl:"left"}},opposites={"auto-start":"auto-end","auto-end":"auto-start","top-start":"top-end","top-end":"top-start","bottom-start":"bottom-end",
"bottom-end":"bottom-start"}}
//# sourceMappingURL=module$node_modules$$chakra_ui$popper$dist$index.js.map
