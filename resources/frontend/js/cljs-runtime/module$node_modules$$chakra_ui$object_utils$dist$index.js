shadow$provide.module$node_modules$$chakra_ui$object_utils$dist$index=function(global,require,module,exports){function compact(object){object=Object.assign({},object);for(let key in object)void 0===object[key]&&delete object[key];return object}function omit(object,keysToOmit=[]){object=Object.assign({},object);for(const key of keysToOmit)key in object&&delete object[key];return object}function pick(object,keysToPick){const result={};for(const key of keysToPick)key in object&&(result[key]=object[key]);
return result}function split(object,keys){const picked={},omitted={};for(const [key,value]of Object.entries(object))keys.includes(key)?picked[key]=value:omitted[key]=value;return[picked,omitted]}var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"===typeof from||"function"===typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,
key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};global={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(global,{compact:()=>compact,omit:()=>omit,pick:()=>pick,split:()=>split});module.exports=(mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod))(global)}
//# sourceMappingURL=module$node_modules$$chakra_ui$object_utils$dist$index.js.map
